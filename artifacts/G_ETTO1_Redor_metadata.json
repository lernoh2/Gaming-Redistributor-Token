{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract ERC777",
						"name": "_getto1",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "cycleId",
						"type": "uint256"
					}
				],
				"name": "CycleId",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "randomNumber",
						"type": "uint256"
					}
				],
				"name": "RandomNumber1",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "randomNumber",
						"type": "uint256"
					}
				],
				"name": "RandomNumber2",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "randomNumber",
						"type": "uint256"
					}
				],
				"name": "RandomNumber3",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "contractAddr",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Received",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Redistributed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "random1",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "random2",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "random3",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "transfersCount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "triggered",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "transferredProfit",
						"type": "uint256"
					}
				],
				"name": "RedistributionAttempt",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "TransferredProfitCalculated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "transfersCount",
						"type": "string"
					}
				],
				"name": "TransfersCount",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "cycleId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getRandomNumber1",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getRandomNumber2",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getRandomNumber3",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTransfersCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getto1",
				"outputs": [
					{
						"internalType": "contract ERC777",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lucky",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "profit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "randomNumber1",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "randomNumber2",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "randomNumber3",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenReserve",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "userData",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "operatorData",
						"type": "bytes"
					}
				],
				"name": "tokensReceived",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "transfersCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"tokensReceived(address,address,address,uint256,bytes,bytes)": {
					"details": "Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			".contracts/G-ETTO1_Redor.sol": "G_ETTO1_Redor"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		".contracts/G-ETTO1_Redor.sol": {
			"keccak256": "0xb4614912bde83aa0c25700b7f9d8727207f4f27d901857c0199184592f360d39",
			"license": "MIT",
			"urls": [
				"bzz-raw://ae9cb900f990b614f7d0510e6b2964eb8850cc4ba431955723cfca4df5e8e1f6",
				"dweb:/ipfs/QmNxvyeLDVG6jghVwoM6RHzdxWyjY66WnVRRnj971XRrc1"
			]
		},
		"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x03a26b0ce85afee2c16f3232bd123286b849ca576778781cf6e8bbf51cb7570a",
			"license": "MIT",
			"urls": [
				"bzz-raw://13a4f5cec214760f14abaedfc0a1860d80c2267386fa62dc77e8eee51ec84d71",
				"dweb:/ipfs/QmWmEKeofHqLnNEeCivhzTepo1k5xZZqzMxyyyzNBYiYBW"
			]
		},
		"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835",
			"license": "MIT",
			"urls": [
				"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f",
				"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"
			]
		},
		"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol": {
			"keccak256": "0x980233ba96c42246563843d9310b79622f25f35dcde217bfec2305e90bb42c31",
			"license": "MIT",
			"urls": [
				"bzz-raw://401408feace106381f3ff1f9bcf508d253aeaeb50a457f1ab6d2ff33e48e0c7d",
				"dweb:/ipfs/QmaJYp98aGGyHRm3au42YHKH1pXTtu5UnSp6kmGB6aDfsi"
			]
		},
		"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
			"keccak256": "0x180af7df8832ffcba53dae0c5450b062d2c571a8eaec22619fcaef5758503d7d",
			"license": "MIT",
			"urls": [
				"bzz-raw://6232d44d9a11c9764c655bb481213a0a92afd27f6b5a1083343d512f04063735",
				"dweb:/ipfs/QmSfSAzCgcMMaXVc7EnoC98opUjizqx6svmJNotiBWaGbc"
			]
		},
		"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
			"keccak256": "0x0fd59f83d16f090c27a8105db0f4ad05b0f5d127f9878b82ebf0ad2bbc4e3f03",
			"license": "MIT",
			"urls": [
				"bzz-raw://b0f20fa38853a7b046933b0c905b6e021b081712032ee395c3ecca01998047ff",
				"dweb:/ipfs/QmRDRgthGgc9XTfQKKN29KZF8BYanfcE5XP9cvAdh1E146"
			]
		},
		"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
			"keccak256": "0x54230ad917ef5075db47e57ac43655f1197ac913686d5ced13062c2da0cce857",
			"license": "MIT",
			"urls": [
				"bzz-raw://0e198d3b0abb92a8ac98583349c07a653714a581dbd587f17ea7bff17b460e09",
				"dweb:/ipfs/QmR1TtTSFZkTAH6QdXj4eFCtfMnThmBKhroDqsWtzU65SJ"
			]
		},
		"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol": {
			"keccak256": "0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e",
				"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX"
			]
		},
		"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol": {
			"keccak256": "0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395",
				"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN"
			]
		},
		"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Strings.sol": {
			"keccak256": "0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0",
			"license": "MIT",
			"urls": [
				"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f",
				"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy"
			]
		},
		"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
			"keccak256": "0xd2df74f95cc1d14b07a93d913993cf17285ee037e9bd1cac4ac4d38b846eaeda",
			"license": "MIT",
			"urls": [
				"bzz-raw://836120f9dad7d6bfeebe0d80541ad8753286e132f80f134af618901eb98ecc89",
				"dweb:/ipfs/QmVWRvvX2kW8Des3SfB23UwYsiDrMd4aYRpwsjyu7FSVjA"
			]
		},
		"/.deps/github/dapphub/ds-math/src/math.sol": {
			"keccak256": "0x40f4c3c2f6fa0f498d709dd48d9df4cbf64562bce100d954beff90c97e404e99",
			"urls": [
				"bzz-raw://549d20d0e611fe317dd6d94ee68f2dd9bb771d00fbc833017ae86368e5f656fd",
				"dweb:/ipfs/QmVaAgnJvQpKFJM6xgttyJYxNqqVkYNNvn5KcutMr8sb9s"
			]
		}
	},
	"version": 1
}