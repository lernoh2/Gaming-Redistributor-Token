{
	"id": "aa1b21bfbe9c74fcc36dd45035fd4328",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			".contracts/Garetto.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\nimport \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\";\r\n\r\n\r\n\r\n"
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC777.sol\";\nimport \"./IERC777Recipient.sol\";\nimport \"./IERC777Sender.sol\";\nimport \"../ERC20/IERC20.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/IERC1820Registry.sol\";\n\n/**\n * @dev Implementation of the {IERC777} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * Support for ERC20 is included in this contract, as specified by the EIP: both\n * the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n * Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n * movements.\n *\n * Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n * are no special restrictions in the amount of tokens that created, moved, or\n * destroyed. This makes integration with ERC20 applications seamless.\n */\ncontract ERC777 is Context, IERC777, IERC20 {\n    using Address for address;\n\n    IERC1820Registry constant internal _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n    mapping(address => uint256) private _balances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\n    bytes32 private constant _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\"ERC777TokensRecipient\");\n\n    // This isn't ever read from - it's only used to respond to the defaultOperators query.\n    address[] private _defaultOperatorsArray;\n\n    // Immutable, but accounts may revoke them (tracked in __revokedDefaultOperators).\n    mapping(address => bool) private _defaultOperators;\n\n    // For each account, a mapping of its operators and revoked default operators.\n    mapping(address => mapping(address => bool)) private _operators;\n    mapping(address => mapping(address => bool)) private _revokedDefaultOperators;\n\n    // ERC20-allowances\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    /**\n     * @dev `defaultOperators` may be an empty array.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address[] memory defaultOperators_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n\n        _defaultOperatorsArray = defaultOperators_;\n        for (uint256 i = 0; i < defaultOperators_.length; i++) {\n            _defaultOperators[defaultOperators_[i]] = true;\n        }\n\n        // register interfaces\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this));\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this));\n    }\n\n    /**\n     * @dev See {IERC777-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC777-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {ERC20-decimals}.\n     *\n     * Always returns 18, as per the\n     * [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\n     */\n    function decimals() public pure virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC777-granularity}.\n     *\n     * This implementation always returns `1`.\n     */\n    function granularity() public view virtual override returns (uint256) {\n        return 1;\n    }\n\n    /**\n     * @dev See {IERC777-totalSupply}.\n     */\n    function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`tokenHolder`).\n     */\n    function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _balances[tokenHolder];\n    }\n\n    /**\n     * @dev See {IERC777-send}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function send(address recipient, uint256 amount, bytes memory data) public virtual override  {\n        _send(_msgSender(), recipient, amount, data, \"\", true);\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n     * interface if it is a contract.\n     *\n     * Also emits a {Sent} event.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n\n        address from = _msgSender();\n\n        _callTokensToSend(from, from, recipient, amount, \"\", \"\");\n\n        _move(from, from, recipient, amount, \"\", \"\");\n\n        _callTokensReceived(from, from, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev See {IERC777-burn}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function burn(uint256 amount, bytes memory data) public virtual override  {\n        _burn(_msgSender(), amount, data, \"\");\n    }\n\n    /**\n     * @dev See {IERC777-isOperatorFor}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {\n        return operator == tokenHolder ||\n            (_defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator]) ||\n            _operators[tokenHolder][operator];\n    }\n\n    /**\n     * @dev See {IERC777-authorizeOperator}.\n     */\n    function authorizeOperator(address operator) public virtual override  {\n        require(_msgSender() != operator, \"ERC777: authorizing self as operator\");\n\n        if (_defaultOperators[operator]) {\n            delete _revokedDefaultOperators[_msgSender()][operator];\n        } else {\n            _operators[_msgSender()][operator] = true;\n        }\n\n        emit AuthorizedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-revokeOperator}.\n     */\n    function revokeOperator(address operator) public virtual override  {\n        require(operator != _msgSender(), \"ERC777: revoking self as operator\");\n\n        if (_defaultOperators[operator]) {\n            _revokedDefaultOperators[_msgSender()][operator] = true;\n        } else {\n            delete _operators[_msgSender()][operator];\n        }\n\n        emit RevokedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-defaultOperators}.\n     */\n    function defaultOperators() public view virtual override returns (address[] memory) {\n        return _defaultOperatorsArray;\n    }\n\n    /**\n     * @dev See {IERC777-operatorSend}.\n     *\n     * Emits {Sent} and {IERC20-Transfer} events.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    )\n        public\n        virtual\n        override\n    {\n        require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\");\n        _send(sender, recipient, amount, data, operatorData, true);\n    }\n\n    /**\n     * @dev See {IERC777-operatorBurn}.\n     *\n     * Emits {Burned} and {IERC20-Transfer} events.\n     */\n    function operatorBurn(address account, uint256 amount, bytes memory data, bytes memory operatorData) public virtual override {\n        require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\");\n        _burn(account, amount, data, operatorData);\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators may\n     * not have allowance, and accounts with allowance may not be operators\n     * themselves.\n     */\n    function allowance(address holder, address spender) public view virtual override returns (uint256) {\n        return _allowances[holder][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\n        address holder = _msgSender();\n        _approve(holder, spender, value);\n        return true;\n    }\n\n   /**\n    * @dev See {IERC20-transferFrom}.\n    *\n    * Note that operator and allowance concepts are orthogonal: operators cannot\n    * call `transferFrom` (unless they have allowance), and accounts with\n    * allowance cannot call `operatorSend` (unless they are operators).\n    *\n    * Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\n    */\n    function transferFrom(address holder, address recipient, uint256 amount) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n        require(holder != address(0), \"ERC777: transfer from the zero address\");\n\n        address spender = _msgSender();\n\n        _callTokensToSend(spender, holder, recipient, amount, \"\", \"\");\n\n        _move(spender, holder, recipient, amount, \"\", \"\");\n\n        uint256 currentAllowance = _allowances[holder][spender];\n        require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\");\n        _approve(holder, spender, currentAllowance - amount);\n\n        _callTokensReceived(spender, holder, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    )\n        internal\n        virtual\n    {\n        _mint(account, amount, userData, operatorData, true);\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If `requireReceptionAck` is set to true, and if a send hook is\n     * registered for `account`, the corresponding function will be called with\n     * `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    )\n        internal\n        virtual\n    {\n        require(account != address(0), \"ERC777: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, amount);\n\n        // Update state variables\n        _totalSupply += amount;\n        _balances[account] += amount;\n\n        _callTokensReceived(operator, address(0), account, amount, userData, operatorData, requireReceptionAck);\n\n        emit Minted(operator, account, amount, userData, operatorData);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Send tokens\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _send(\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    )\n        internal\n        virtual\n    {\n        require(from != address(0), \"ERC777: send from the zero address\");\n        require(to != address(0), \"ERC777: send to the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, to, amount, userData, operatorData);\n\n        _move(operator, from, to, amount, userData, operatorData);\n\n        _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck);\n    }\n\n    /**\n     * @dev Burn tokens\n     * @param from address token holder address\n     * @param amount uint256 amount of tokens to burn\n     * @param data bytes extra information provided by the token holder\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _burn(\n        address from,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    )\n        internal\n        virtual\n    {\n        require(from != address(0), \"ERC777: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, address(0), amount, data, operatorData);\n\n        _beforeTokenTransfer(operator, from, address(0), amount);\n\n        // Update state variables\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\");\n        _balances[from] = fromBalance - amount;\n        _totalSupply -= amount;\n\n        emit Burned(operator, from, amount, data, operatorData);\n        emit Transfer(from, address(0), amount);\n    }\n\n    function _move(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    )\n        private\n    {\n        _beforeTokenTransfer(operator, from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\");\n        _balances[from] = fromBalance - amount;\n        _balances[to] += amount;\n\n        emit Sent(operator, from, to, amount, userData, operatorData);\n        emit Transfer(from, to, amount);\n    }\n\n    /**\n     * @dev See {ERC20-_approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function _approve(address holder, address spender, uint256 value) internal {\n        require(holder != address(0), \"ERC777: approve from the zero address\");\n        require(spender != address(0), \"ERC777: approve to the zero address\");\n\n        _allowances[holder][spender] = value;\n        emit Approval(holder, spender, value);\n    }\n\n    /**\n     * @dev Call from.tokensToSend() if the interface is registered\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _callTokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    )\n        private\n    {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData);\n        }\n    }\n\n    /**\n     * @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n     * tokensReceived() was not registered for the recipient\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _callTokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    )\n        private\n    {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData);\n        } else if (requireReceptionAck) {\n            require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\");\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes\n     * calls to {send}, {transfer}, {operatorSend}, minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address operator, address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the global ERC1820 Registry, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n * implementers for interfaces in this registry, as well as query support.\n *\n * Implementers may be shared by multiple accounts, and can also implement more\n * than a single interface for each account. Contracts can implement interfaces\n * for themselves, but externally-owned accounts (EOA) must delegate this to a\n * contract.\n *\n * {IERC165} interfaces can also be queried via the registry.\n *\n * For an in-depth explanation and source code analysis, see the EIP text.\n */\ninterface IERC1820Registry {\n    /**\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\n     * account is able to set interface implementers for it.\n     *\n     * By default, each account is its own manager. Passing a value of `0x0` in\n     * `newManager` will reset the manager to this initial state.\n     *\n     * Emits a {ManagerChanged} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     */\n    function setManager(address account, address newManager) external;\n\n    /**\n     * @dev Returns the manager for `account`.\n     *\n     * See {setManager}.\n     */\n    function getManager(address account) external view returns (address);\n\n    /**\n     * @dev Sets the `implementer` contract as ``account``'s implementer for\n     * `interfaceHash`.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     * The zero address can also be used in `implementer` to remove an old one.\n     *\n     * See {interfaceHash} to learn how these are created.\n     *\n     * Emits an {InterfaceImplementerSet} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     * - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n     * end in 28 zeroes).\n     * - `implementer` must implement {IERC1820Implementer} and return true when\n     * queried for support, unless `implementer` is the caller. See\n     * {IERC1820Implementer-canImplementInterfaceForAddress}.\n     */\n    function setInterfaceImplementer(address account, bytes32 _interfaceHash, address implementer) external;\n\n    /**\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\n     * implementer is registered, returns the zero address.\n     *\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n     * zeroes), `account` will be queried for support of it.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     */\n    function getInterfaceImplementer(address account, bytes32 _interfaceHash) external view returns (address);\n\n    /**\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\n     * corresponding\n     * https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\n     */\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\n\n    /**\n     * @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n     * @param account Address of the contract for which to update the cache.\n     * @param interfaceId ERC165 interface for which to update the cache.\n     */\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\n\n    /**\n     * @notice Checks whether a contract implements an ERC165 interface or not.\n     * If the result is not cached a direct lookup on the contract address is performed.\n     * If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n     * {updateERC165Cache} with the contract address.\n     * @param account Address of the contract to check.\n     * @param interfaceId ERC165 interface to check.\n     * @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\n\n    /**\n     * @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n     * @param account Address of the contract to check.\n     * @param interfaceId ERC165 interface to check.\n     * @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\n\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\n\n    event ManagerChanged(address indexed account, address indexed newManager);\n}\n"
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n *\n * {IERC777} Token holders can be notified of operations performed on their\n * tokens by having a contract implement this interface (contract holders can be\n *  their own implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Sender {\n    /**\n     * @dev Called by an {IERC777} token contract whenever a registered holder's\n     * (`from`) tokens are about to be moved or destroyed. The type of operation\n     * is conveyed by `to` being the zero address or not.\n     *\n     * This call occurs _before_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n"
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n *\n * Accounts can be notified of {IERC777} tokens being sent to them by having a\n * contract implement this interface (contract holders can be their own\n * implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Recipient {\n    /**\n     * @dev Called by an {IERC777} token contract whenever tokens are being\n     * moved or created into a registered account (`to`). The type of operation\n     * is conveyed by `from` being the zero address or not.\n     *\n     * This call occurs _after_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n"
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777Token standard as defined in the EIP.\n *\n * This contract uses the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n * token holders and recipients react to token movements by using setting implementers\n * for the associated interfaces in said registry. See {IERC1820Registry} and\n * {ERC1820Implementer}.\n */\ninterface IERC777 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     * means all token operations (creation, movement and destruction) must have\n     * amounts that are a multiple of this number.\n     *\n     * For most token contracts, this value will equal 1.\n     */\n    function granularity() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address owner) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * If send or receive hooks are registered for the caller and `recipient`,\n     * the corresponding functions will be called with `data` and empty\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(address recipient, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * Emits an {AuthorizedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external;\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * Emits a {RevokedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external;\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    event Sent(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\n\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\n\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\n\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol": {
				"ERC777": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "address[]",
									"name": "defaultOperators_",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "AuthorizedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "RevokedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultOperators",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "granularity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "isOperatorFor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC777} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. Support for ERC20 is included in this contract, as specified by the EIP: both the ERC777 and ERC20 interfaces can be safely used when interacting with it. Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token movements. Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there are no special restrictions in the amount of tokens that created, moved, or destroyed. This makes integration with ERC20 applications seamless.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Note that accounts cannot have allowance issued by their operators."
							},
							"authorizeOperator(address)": {
								"details": "See {IERC777-authorizeOperator}."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by an account (`tokenHolder`)."
							},
							"burn(uint256,bytes)": {
								"details": "See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
							},
							"constructor": {
								"details": "`defaultOperators` may be an empty array."
							},
							"decimals()": {
								"details": "See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
							},
							"defaultOperators()": {
								"details": "See {IERC777-defaultOperators}."
							},
							"granularity()": {
								"details": "See {IERC777-granularity}. This implementation always returns `1`."
							},
							"isOperatorFor(address,address)": {
								"details": "See {IERC777-isOperatorFor}."
							},
							"name()": {
								"details": "See {IERC777-name}."
							},
							"operatorBurn(address,uint256,bytes,bytes)": {
								"details": "See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events."
							},
							"operatorSend(address,address,uint256,bytes,bytes)": {
								"details": "See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events."
							},
							"revokeOperator(address)": {
								"details": "See {IERC777-revokeOperator}."
							},
							"send(address,uint256,bytes)": {
								"details": "See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
							},
							"symbol()": {
								"details": "See {IERC777-symbol}."
							},
							"totalSupply()": {
								"details": "See {IERC777-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1014:18161  contract ERC777 is Context, IERC777, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2244:2856  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2376:2381  _name */\n  0x02\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2376:2389  _name = name_ */\n  tag_6\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2384:2389  name_ */\n  dup5\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2376:2381  _name */\n  dup3\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2376:2389  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2399:2406  _symbol */\n  0x03\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2399:2416  _symbol = symbol_ */\n  tag_8\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2409:2416  symbol_ */\n  dup4\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2399:2406  _symbol */\n  dup3\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2399:2416  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2427:2469  _defaultOperatorsArray = defaultOperators_ */\n  dup1\n  mload\n  tag_9\n  swap1\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2427:2449  _defaultOperatorsArray */\n  0x04\n  swap1\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2427:2469  _defaultOperatorsArray = defaultOperators_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2484:2493  uint256 i */\n  0x00\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2479:2605  for (uint256 i = 0; i < defaultOperators_.length; i++) {... */\ntag_11:\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2503:2520  defaultOperators_ */\n  dup2\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2503:2527  defaultOperators_.length */\n  mload\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2499:2500  i */\n  dup2\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2499:2527  i < defaultOperators_.length */\n  lt\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2479:2605  for (uint256 i = 0; i < defaultOperators_.length; i++) {... */\n  iszero\n  tag_12\n  jumpi\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2590:2594  true */\n  0x01\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2548:2565  _defaultOperators */\n  0x05\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2548:2587  _defaultOperators[defaultOperators_[i]] */\n  0x00\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2566:2583  defaultOperators_ */\n  dup5\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2584:2585  i */\n  dup5\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2566:2586  defaultOperators_[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_15\n  jumpi\n  tag_15\n  tag_16\n  jump\t// in\ntag_15:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2548:2587  _defaultOperators[defaultOperators_[i]] */\n  and\n  dup3\n  mstore\n  dup2\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  add\n  0x00\n  keccak256\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2548:2594  _defaultOperators[defaultOperators_[i]] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap2\n  iszero\n  iszero\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2529:2532  i++ */\n  dup1\n  tag_17\n  dup2\n  tag_18\n  jump\t// in\ntag_17:\n  swap2\n  pop\n  pop\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2479:2605  for (uint256 i = 0; i < defaultOperators_.length; i++) {... */\n  jump(tag_11)\ntag_12:\n  pop\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2646:2743  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this)) */\n  mload(0x40)\n  shl(0xe0, 0x29965a1d)\n  dup2\n  mstore\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2696:2700  this */\n  address\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2646:2743  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5812:5846   */\n  dup2\n  swap1\n  mstore\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2703:2727  keccak256(\"ERC777Token\") */\n  0xac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054\n    /* \"#utility.yul\":5862:5880   */\n  0x24\n  dup4\n  add\n    /* \"#utility.yul\":5855:5889   */\n  mstore\n    /* \"#utility.yul\":5905:5923   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5898:5941   */\n  mstore\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1168:1210  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n  0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n  swap1\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2646:2687  _ERC1820_REGISTRY.setInterfaceImplementer */\n  0x29965a1d\n  swap1\n    /* \"#utility.yul\":5747:5765   */\n  0x64\n  add\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2646:2743  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this)) */\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_21\n  jumpi\n  0x00\n  dup1\n  revert\ntag_21:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_23\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_23:\n  pop\n  pop\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2753:2849  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this)) */\n  mload(0x40)\n  shl(0xe0, 0x29965a1d)\n  dup2\n  mstore\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2803:2807  this */\n  address\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2753:2849  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5812:5846   */\n  dup2\n  swap1\n  mstore\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2810:2833  keccak256(\"ERC20Token\") */\n  0xaea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a\n    /* \"#utility.yul\":5862:5880   */\n  0x24\n  dup4\n  add\n    /* \"#utility.yul\":5855:5889   */\n  mstore\n    /* \"#utility.yul\":5905:5923   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5898:5941   */\n  mstore\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1168:1210  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n  0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n  swap3\n  pop\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2753:2794  _ERC1820_REGISTRY.setInterfaceImplementer */\n  0x29965a1d\n  swap2\n  pop\n    /* \"#utility.yul\":5747:5765   */\n  0x64\n  add\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2753:2849  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this)) */\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_25\n  jumpi\n  0x00\n  dup1\n  revert\ntag_25:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_27\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_27:\n  pop\n  pop\n  pop\n  pop\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2244:2856  constructor(... */\n  pop\n  pop\n  pop\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1014:18161  contract ERC777 is Context, IERC777, IERC20 {... */\n  jump(tag_43)\ntag_10:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_31\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_30:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  dup3\n  mload\n  dup3\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  or\n  dup3\n  sstore\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  0x01\n  swap1\n  swap2\n  add\n  swap1\n  jump(tag_30)\ntag_31:\n  pop\n  tag_32\n  swap3\n  swap2\n  pop\n  tag_33\n  jump\t// in\ntag_32:\n  pop\n  swap1\n  jump\t// out\ntag_33:\ntag_34:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_32\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_34)\n    /* \"#utility.yul\":14:141   */\ntag_36:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:421   */\ntag_37:\n    /* \"#utility.yul\":217:219   */\n  0x40\n    /* \"#utility.yul\":211:220   */\n  mload\n    /* \"#utility.yul\":282:284   */\n  0x1f\n    /* \"#utility.yul\":263:276   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":259:286   */\n  and\n    /* \"#utility.yul\":247:287   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":302:336   */\n  dup2\n  gt\n    /* \"#utility.yul\":338:360   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":299:361   */\n  or\n    /* \"#utility.yul\":296:384   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":364:382   */\n  tag_47\n  tag_36\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":400:402   */\n  0x40\n    /* \"#utility.yul\":393:415   */\n  mstore\n    /* \"#utility.yul\":146:421   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":426:1076   */\ntag_38:\n    /* \"#utility.yul\":480:485   */\n  0x00\n    /* \"#utility.yul\":533:536   */\n  dup3\n    /* \"#utility.yul\":526:530   */\n  0x1f\n    /* \"#utility.yul\":518:524   */\n  dup4\n    /* \"#utility.yul\":514:531   */\n  add\n    /* \"#utility.yul\":510:537   */\n  slt\n    /* \"#utility.yul\":500:555   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":551:552   */\n  0x00\n    /* \"#utility.yul\":548:549   */\n  dup1\n    /* \"#utility.yul\":541:553   */\n  revert\n    /* \"#utility.yul\":500:555   */\ntag_49:\n    /* \"#utility.yul\":574:587   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":599:625   */\n  dup2\n  gt\n    /* \"#utility.yul\":596:648   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":628:646   */\n  tag_51\n  tag_36\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":667:671   */\n  0x20\n    /* \"#utility.yul\":695:748   */\n  tag_52\n    /* \"#utility.yul\":738:740   */\n  0x1f\n    /* \"#utility.yul\":719:732   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":715:742   */\n  and\n    /* \"#utility.yul\":711:747   */\n  dup3\n  add\n    /* \"#utility.yul\":695:748   */\n  tag_37\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":773:775   */\n  dup3\n    /* \"#utility.yul\":764:771   */\n  dup2\n    /* \"#utility.yul\":757:776   */\n  mstore\n    /* \"#utility.yul\":817:820   */\n  dup6\n    /* \"#utility.yul\":812:814   */\n  dup3\n    /* \"#utility.yul\":807:809   */\n  dup5\n    /* \"#utility.yul\":799:805   */\n  dup8\n    /* \"#utility.yul\":795:810   */\n  add\n    /* \"#utility.yul\":791:815   */\n  add\n    /* \"#utility.yul\":788:821   */\n  gt\n    /* \"#utility.yul\":785:838   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":834:835   */\n  0x00\n    /* \"#utility.yul\":831:832   */\n  dup1\n    /* \"#utility.yul\":824:836   */\n  revert\n    /* \"#utility.yul\":785:838   */\ntag_53:\n    /* \"#utility.yul\":856:857   */\n  0x00\n    /* \"#utility.yul\":866:1000   */\ntag_54:\n    /* \"#utility.yul\":880:882   */\n  dup4\n    /* \"#utility.yul\":877:878   */\n  dup2\n    /* \"#utility.yul\":874:883   */\n  lt\n    /* \"#utility.yul\":866:1000   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":969:983   */\n  dup6\n  dup2\n  add\n    /* \"#utility.yul\":965:988   */\n  dup4\n  add\n    /* \"#utility.yul\":959:989   */\n  mload\n    /* \"#utility.yul\":937:952   */\n  dup3\n  dup3\n  add\n    /* \"#utility.yul\":933:957   */\n  dup5\n  add\n    /* \"#utility.yul\":926:990   */\n  mstore\n    /* \"#utility.yul\":891:901   */\n  dup3\n  add\n    /* \"#utility.yul\":866:1000   */\n  jump(tag_54)\ntag_56:\n  pop\n    /* \"#utility.yul\":1043:1044   */\n  0x00\n    /* \"#utility.yul\":1020:1036   */\n  swap3\n  dup2\n  add\n    /* \"#utility.yul\":1016:1041   */\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":1009:1045   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":1024:1031   */\n  swap4\n    /* \"#utility.yul\":426:1076   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1081:2609   */\ntag_3:\n    /* \"#utility.yul\":1214:1220   */\n  0x00\n    /* \"#utility.yul\":1222:1228   */\n  dup1\n    /* \"#utility.yul\":1230:1236   */\n  0x00\n    /* \"#utility.yul\":1283:1285   */\n  0x60\n    /* \"#utility.yul\":1271:1280   */\n  dup5\n    /* \"#utility.yul\":1262:1269   */\n  dup7\n    /* \"#utility.yul\":1258:1281   */\n  sub\n    /* \"#utility.yul\":1254:1286   */\n  slt\n    /* \"#utility.yul\":1251:1303   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1299:1300   */\n  0x00\n    /* \"#utility.yul\":1296:1297   */\n  dup1\n    /* \"#utility.yul\":1289:1301   */\n  revert\n    /* \"#utility.yul\":1251:1303   */\ntag_58:\n    /* \"#utility.yul\":1326:1342   */\n  dup4\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1391:1405   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1388:1422   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1418:1419   */\n  0x00\n    /* \"#utility.yul\":1415:1416   */\n  dup1\n    /* \"#utility.yul\":1408:1420   */\n  revert\n    /* \"#utility.yul\":1388:1422   */\ntag_59:\n    /* \"#utility.yul\":1441:1502   */\n  tag_60\n    /* \"#utility.yul\":1494:1501   */\n  dup8\n    /* \"#utility.yul\":1485:1491   */\n  dup4\n    /* \"#utility.yul\":1474:1483   */\n  dup9\n    /* \"#utility.yul\":1470:1492   */\n  add\n    /* \"#utility.yul\":1441:1502   */\n  tag_38\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1431:1502   */\n  swap5\n  pop\n    /* \"#utility.yul\":1521:1523   */\n  0x20\n    /* \"#utility.yul\":1511:1523   */\n  swap2\n  pop\n    /* \"#utility.yul\":1569:1571   */\n  dup2\n    /* \"#utility.yul\":1558:1567   */\n  dup7\n    /* \"#utility.yul\":1554:1572   */\n  add\n    /* \"#utility.yul\":1548:1573   */\n  mload\n    /* \"#utility.yul\":1598:1600   */\n  dup2\n    /* \"#utility.yul\":1588:1596   */\n  dup2\n    /* \"#utility.yul\":1585:1601   */\n  gt\n    /* \"#utility.yul\":1582:1618   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1614:1615   */\n  0x00\n    /* \"#utility.yul\":1611:1612   */\n  dup1\n    /* \"#utility.yul\":1604:1616   */\n  revert\n    /* \"#utility.yul\":1582:1618   */\ntag_61:\n    /* \"#utility.yul\":1637:1700   */\n  tag_62\n    /* \"#utility.yul\":1692:1699   */\n  dup9\n    /* \"#utility.yul\":1681:1689   */\n  dup3\n    /* \"#utility.yul\":1670:1679   */\n  dup10\n    /* \"#utility.yul\":1666:1690   */\n  add\n    /* \"#utility.yul\":1637:1700   */\n  tag_38\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1627:1700   */\n  swap5\n  pop\n  pop\n    /* \"#utility.yul\":1746:1748   */\n  0x40\n    /* \"#utility.yul\":1735:1744   */\n  dup7\n    /* \"#utility.yul\":1731:1749   */\n  add\n    /* \"#utility.yul\":1725:1750   */\n  mload\n    /* \"#utility.yul\":1775:1777   */\n  dup2\n    /* \"#utility.yul\":1765:1773   */\n  dup2\n    /* \"#utility.yul\":1762:1778   */\n  gt\n    /* \"#utility.yul\":1759:1795   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1791:1792   */\n  0x00\n    /* \"#utility.yul\":1788:1789   */\n  dup1\n    /* \"#utility.yul\":1781:1793   */\n  revert\n    /* \"#utility.yul\":1759:1795   */\ntag_63:\n    /* \"#utility.yul\":1814:1838   */\n  dup7\n  add\n    /* \"#utility.yul\":1869:1873   */\n  0x1f\n    /* \"#utility.yul\":1861:1874   */\n  dup2\n  add\n    /* \"#utility.yul\":1857:1884   */\n  dup9\n  sgt\n    /* \"#utility.yul\":1847:1902   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1898:1899   */\n  0x00\n    /* \"#utility.yul\":1895:1896   */\n  dup1\n    /* \"#utility.yul\":1888:1900   */\n  revert\n    /* \"#utility.yul\":1847:1902   */\ntag_64:\n    /* \"#utility.yul\":1927:1929   */\n  dup1\n    /* \"#utility.yul\":1921:1930   */\n  mload\n    /* \"#utility.yul\":1949:1951   */\n  dup3\n    /* \"#utility.yul\":1945:1947   */\n  dup2\n    /* \"#utility.yul\":1942:1952   */\n  gt\n    /* \"#utility.yul\":1939:1975   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1955:1973   */\n  tag_66\n  tag_36\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2001:2003   */\n  dup1\n    /* \"#utility.yul\":1998:1999   */\n  0x05\n    /* \"#utility.yul\":1994:2004   */\n  shl\n    /* \"#utility.yul\":1984:2004   */\n  swap3\n  pop\n    /* \"#utility.yul\":2024:2052   */\n  tag_67\n    /* \"#utility.yul\":2048:2050   */\n  dup5\n    /* \"#utility.yul\":2044:2046   */\n  dup5\n    /* \"#utility.yul\":2040:2051   */\n  add\n    /* \"#utility.yul\":2024:2052   */\n  tag_37\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2086:2101   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":2156:2167   */\n  swap3\n  dup3\n  add\n    /* \"#utility.yul\":2152:2172   */\n  dup5\n  add\n  swap3\n    /* \"#utility.yul\":2117:2129   */\n  dup5\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":2184:2203   */\n  dup11\n  dup6\n  gt\n    /* \"#utility.yul\":2181:2220   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2216:2217   */\n  0x00\n    /* \"#utility.yul\":2213:2214   */\n  dup1\n    /* \"#utility.yul\":2206:2218   */\n  revert\n    /* \"#utility.yul\":2181:2220   */\ntag_68:\n    /* \"#utility.yul\":2240:2251   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":2260:2579   */\ntag_69:\n    /* \"#utility.yul\":2276:2282   */\n  dup5\n    /* \"#utility.yul\":2271:2274   */\n  dup5\n    /* \"#utility.yul\":2268:2283   */\n  lt\n    /* \"#utility.yul\":2260:2579   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2343:2353   */\n  dup4\n  mload\n  swap3\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2386:2417   */\n  dup4\n  and\n    /* \"#utility.yul\":2376:2418   */\n  dup4\n  eq\n    /* \"#utility.yul\":2366:2506   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2460:2461   */\n  0x00\n    /* \"#utility.yul\":2489:2491   */\n  dup1\n    /* \"#utility.yul\":2485:2487   */\n  dup2\n    /* \"#utility.yul\":2478:2492   */\n  revert\n    /* \"#utility.yul\":2366:2506   */\ntag_72:\n    /* \"#utility.yul\":2519:2537   */\n  dup3\n  dup3\n  mstore\n    /* \"#utility.yul\":2293:2305   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":2557:2569   */\n  swap1\n  dup6\n  add\n  swap1\n    /* \"#utility.yul\":2260:2579   */\n  jump(tag_69)\ntag_71:\n    /* \"#utility.yul\":2598:2603   */\n  dup1\n    /* \"#utility.yul\":2588:2603   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1081:2609   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2614:2994   */\ntag_39:\n    /* \"#utility.yul\":2693:2694   */\n  0x01\n    /* \"#utility.yul\":2689:2701   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2736:2748   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2757:2818   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2811:2815   */\n  0x7f\n    /* \"#utility.yul\":2803:2809   */\n  dup3\n    /* \"#utility.yul\":2799:2816   */\n  and\n    /* \"#utility.yul\":2789:2816   */\n  swap2\n  pop\n    /* \"#utility.yul\":2757:2818   */\ntag_74:\n    /* \"#utility.yul\":2864:2866   */\n  0x20\n    /* \"#utility.yul\":2856:2862   */\n  dup3\n    /* \"#utility.yul\":2853:2867   */\n  lt\n    /* \"#utility.yul\":2833:2851   */\n  dup2\n    /* \"#utility.yul\":2830:2868   */\n  sub\n    /* \"#utility.yul\":2827:2988   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2910:2920   */\n  0x4e487b71\n    /* \"#utility.yul\":2905:2908   */\n  0xe0\n    /* \"#utility.yul\":2901:2921   */\n  shl\n    /* \"#utility.yul\":2898:2899   */\n  0x00\n    /* \"#utility.yul\":2891:2922   */\n  mstore\n    /* \"#utility.yul\":2945:2949   */\n  0x22\n    /* \"#utility.yul\":2942:2943   */\n  0x04\n    /* \"#utility.yul\":2935:2950   */\n  mstore\n    /* \"#utility.yul\":2973:2977   */\n  0x24\n    /* \"#utility.yul\":2970:2971   */\n  0x00\n    /* \"#utility.yul\":2963:2978   */\n  revert\n    /* \"#utility.yul\":2827:2988   */\ntag_75:\n  pop\n    /* \"#utility.yul\":2614:2994   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3125:3670   */\ntag_41:\n    /* \"#utility.yul\":3227:3229   */\n  0x1f\n    /* \"#utility.yul\":3222:3225   */\n  dup3\n    /* \"#utility.yul\":3219:3230   */\n  gt\n    /* \"#utility.yul\":3216:3664   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3263:3264   */\n  0x00\n    /* \"#utility.yul\":3288:3293   */\n  dup2\n    /* \"#utility.yul\":3284:3286   */\n  dup2\n    /* \"#utility.yul\":3277:3294   */\n  mstore\n    /* \"#utility.yul\":3333:3337   */\n  0x20\n    /* \"#utility.yul\":3329:3331   */\n  dup2\n    /* \"#utility.yul\":3319:3338   */\n  keccak256\n    /* \"#utility.yul\":3403:3405   */\n  0x1f\n    /* \"#utility.yul\":3391:3401   */\n  dup6\n    /* \"#utility.yul\":3387:3406   */\n  add\n    /* \"#utility.yul\":3384:3385   */\n  0x05\n    /* \"#utility.yul\":3380:3407   */\n  shr\n    /* \"#utility.yul\":3374:3378   */\n  dup2\n    /* \"#utility.yul\":3370:3408   */\n  add\n    /* \"#utility.yul\":3439:3443   */\n  0x20\n    /* \"#utility.yul\":3427:3437   */\n  dup7\n    /* \"#utility.yul\":3424:3444   */\n  lt\n    /* \"#utility.yul\":3421:3468   */\n  iszero\n  tag_79\n  jumpi\n  pop\n    /* \"#utility.yul\":3462:3466   */\n  dup1\n    /* \"#utility.yul\":3421:3468   */\ntag_79:\n    /* \"#utility.yul\":3517:3519   */\n  0x1f\n    /* \"#utility.yul\":3512:3515   */\n  dup6\n    /* \"#utility.yul\":3508:3520   */\n  add\n    /* \"#utility.yul\":3505:3506   */\n  0x05\n    /* \"#utility.yul\":3501:3521   */\n  shr\n    /* \"#utility.yul\":3495:3499   */\n  dup3\n    /* \"#utility.yul\":3491:3522   */\n  add\n    /* \"#utility.yul\":3481:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3572:3654   */\ntag_80:\n    /* \"#utility.yul\":3590:3592   */\n  dup2\n    /* \"#utility.yul\":3583:3588   */\n  dup2\n    /* \"#utility.yul\":3580:3593   */\n  lt\n    /* \"#utility.yul\":3572:3654   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":3635:3652   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":3616:3617   */\n  0x01\n    /* \"#utility.yul\":3605:3618   */\n  add\n    /* \"#utility.yul\":3572:3654   */\n  jump(tag_80)\ntag_82:\n    /* \"#utility.yul\":3576:3579   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3216:3664   */\ntag_78:\n    /* \"#utility.yul\":3125:3670   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3846:5198   */\ntag_7:\n    /* \"#utility.yul\":3966:3976   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3988:4018   */\n  dup2\n  gt\n    /* \"#utility.yul\":3985:4041   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":4021:4039   */\n  tag_86\n  tag_36\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4050:4147   */\n  tag_87\n    /* \"#utility.yul\":4140:4146   */\n  dup2\n    /* \"#utility.yul\":4100:4138   */\n  tag_88\n    /* \"#utility.yul\":4132:4136   */\n  dup5\n    /* \"#utility.yul\":4126:4137   */\n  sload\n    /* \"#utility.yul\":4100:4138   */\n  tag_39\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4094:4098   */\n  dup5\n    /* \"#utility.yul\":4050:4147   */\n  tag_41\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4202:4206   */\n  0x20\n  dup1\n    /* \"#utility.yul\":4266:4268   */\n  0x1f\n    /* \"#utility.yul\":4255:4269   */\n  dup4\n  gt\n    /* \"#utility.yul\":4283:4284   */\n  0x01\n    /* \"#utility.yul\":4278:4941   */\n  dup2\n  eq\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4985:4986   */\n  0x00\n    /* \"#utility.yul\":5002:5008   */\n  dup5\n    /* \"#utility.yul\":4999:5088   */\n  iszero\n  tag_91\n  jumpi\n  pop\n    /* \"#utility.yul\":5054:5073   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":5048:5074   */\n  mload\n    /* \"#utility.yul\":4999:5088   */\ntag_91:\n  not(0x00)\n    /* \"#utility.yul\":3803:3804   */\n  0x03\n    /* \"#utility.yul\":3799:3810   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":3795:3819   */\n  shr\n    /* \"#utility.yul\":3791:3820   */\n  not\n    /* \"#utility.yul\":3781:3821   */\n  and\n    /* \"#utility.yul\":3827:3828   */\n  0x01\n    /* \"#utility.yul\":3823:3834   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3778:3835   */\n  or\n    /* \"#utility.yul\":5101:5182   */\n  dup6\n  sstore\n    /* \"#utility.yul\":4248:5192   */\n  jump(tag_82)\n    /* \"#utility.yul\":4278:4941   */\ntag_90:\n    /* \"#utility.yul\":3072:3073   */\n  0x00\n    /* \"#utility.yul\":3065:3079   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":3109:3113   */\n  0x20\n    /* \"#utility.yul\":3096:3114   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":4314:4334   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":4432:4668   */\ntag_94:\n    /* \"#utility.yul\":4446:4453   */\n  dup3\n    /* \"#utility.yul\":4443:4444   */\n  dup2\n    /* \"#utility.yul\":4440:4454   */\n  lt\n    /* \"#utility.yul\":4432:4668   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4535:4554   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":4529:4555   */\n  mload\n    /* \"#utility.yul\":4514:4556   */\n  dup3\n  sstore\n    /* \"#utility.yul\":4627:4654   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":4595:4596   */\n  0x01\n    /* \"#utility.yul\":4583:4597   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":4462:4481   */\n  dup5\n  add\n    /* \"#utility.yul\":4432:4668   */\n  jump(tag_94)\ntag_96:\n    /* \"#utility.yul\":4436:4439   */\n  pop\n    /* \"#utility.yul\":4696:4702   */\n  dup6\n    /* \"#utility.yul\":4687:4694   */\n  dup3\n    /* \"#utility.yul\":4684:4703   */\n  lt\n    /* \"#utility.yul\":4681:4882   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":4757:4776   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":4751:4777   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4840:4841   */\n  0x03\n    /* \"#utility.yul\":4836:4850   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":4852:4855   */\n  0xf8\n    /* \"#utility.yul\":4832:4856   */\n  and\n    /* \"#utility.yul\":4828:4865   */\n  shr\n    /* \"#utility.yul\":4824:4866   */\n  not\n    /* \"#utility.yul\":4809:4867   */\n  and\n    /* \"#utility.yul\":4794:4868   */\n  dup2\n  sstore\n    /* \"#utility.yul\":4681:4882   */\ntag_97:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4928:4929   */\n  0x01\n    /* \"#utility.yul\":4912:4926   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4908:4930   */\n  add\n    /* \"#utility.yul\":4895:4931   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3846:5198   */\n  jump\t// out\n    /* \"#utility.yul\":5203:5330   */\ntag_16:\n    /* \"#utility.yul\":5264:5274   */\n  0x4e487b71\n    /* \"#utility.yul\":5259:5262   */\n  0xe0\n    /* \"#utility.yul\":5255:5275   */\n  shl\n    /* \"#utility.yul\":5252:5253   */\n  0x00\n    /* \"#utility.yul\":5245:5276   */\n  mstore\n    /* \"#utility.yul\":5295:5299   */\n  0x32\n    /* \"#utility.yul\":5292:5293   */\n  0x04\n    /* \"#utility.yul\":5285:5300   */\n  mstore\n    /* \"#utility.yul\":5319:5323   */\n  0x24\n    /* \"#utility.yul\":5316:5317   */\n  0x00\n    /* \"#utility.yul\":5309:5324   */\n  revert\n    /* \"#utility.yul\":5335:5567   */\ntag_18:\n    /* \"#utility.yul\":5374:5377   */\n  0x00\n    /* \"#utility.yul\":5395:5412   */\n  0x01\n  dup3\n  add\n    /* \"#utility.yul\":5392:5532   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":5454:5464   */\n  0x4e487b71\n    /* \"#utility.yul\":5449:5452   */\n  0xe0\n    /* \"#utility.yul\":5445:5465   */\n  shl\n    /* \"#utility.yul\":5442:5443   */\n  0x00\n    /* \"#utility.yul\":5435:5466   */\n  mstore\n    /* \"#utility.yul\":5489:5493   */\n  0x11\n    /* \"#utility.yul\":5486:5487   */\n  0x04\n    /* \"#utility.yul\":5479:5494   */\n  mstore\n    /* \"#utility.yul\":5517:5521   */\n  0x24\n    /* \"#utility.yul\":5514:5515   */\n  0x00\n    /* \"#utility.yul\":5507:5522   */\n  revert\n    /* \"#utility.yul\":5392:5532   */\ntag_100:\n  pop\n    /* \"#utility.yul\":5559:5560   */\n  0x01\n    /* \"#utility.yul\":5548:5561   */\n  add\n  swap1\n    /* \"#utility.yul\":5335:5567   */\n  jump\t// out\n    /* \"#utility.yul\":5572:5947   */\ntag_43:\n    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1014:18161  contract ERC777 is Context, IERC777, IERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1014:18161  contract ERC777 is Context, IERC777, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x959b8c3f\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xd95b6371\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd95b6371\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfad8b32a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xfc673c4f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfe9d9303\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x959b8c3f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9bd9bbc6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x556f0dc7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x62ad1b83\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x06e48538\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6674:6804  function defaultOperators() public view virtual override returns (address[] memory) {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2910:3008  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8253:8450  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_5:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1951:1965   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1944:1966   */\n      iszero\n        /* \"#utility.yul\":1926:1967   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1914:1916   */\n      0x20\n        /* \"#utility.yul\":1899:1917   */\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8253:8450  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n      tag_26\n        /* \"#utility.yul\":1786:1973   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3703:3826  function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {... */\n    tag_6:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3807:3819  _totalSupply */\n      sload(0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3703:3826  function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {... */\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":2124:2149   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2112:2114   */\n      0x20\n        /* \"#utility.yul\":2097:2115   */\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3703:3826  function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {... */\n      tag_26\n        /* \"#utility.yul\":1978:2155   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8815:9591  function transferFrom(address holder, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_7:\n      tag_32\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3350:3432  function decimals() public pure virtual returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3423:3425  18 */\n      0x12\n        /* \"#utility.yul\":2763:2799   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2751:2753   */\n      0x20\n        /* \"#utility.yul\":2736:2754   */\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3350:3432  function decimals() public pure virtual returns (uint8) {... */\n      tag_26\n        /* \"#utility.yul\":2621:2805   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3547:3642  function granularity() public view virtual override returns (uint256) {... */\n    tag_9:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3634:3635  1 */\n      0x01\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3547:3642  function granularity() public view virtual override returns (uint256) {... */\n      jump(tag_38)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6923:7317  function operatorSend(... */\n    tag_10:\n      tag_54\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3926:4076  function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {... */\n    tag_11:\n      tag_38\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4047:4069  _balances[tokenHolder] */\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4021:4028  uint256 */\n      0x00\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4047:4069  _balances[tokenHolder] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3926:4076  function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {... */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5727:6140  function authorizeOperator(address operator) public virtual override  {... */\n    tag_12:\n      tag_54\n      tag_64\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3064:3166  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_28\n      tag_67\n      jump\t// in\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4206:4370  function send(address recipient, uint256 amount, bytes memory data) public virtual override  {... */\n    tag_14:\n      tag_54\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4601:5040  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_15:\n      tag_32\n      tag_74\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5361:5660  function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_32\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7964:8115  function allowance(address holder, address spender) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_38\n      tag_83\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8080:8099  _allowances[holder] */\n      swap2\n      dup3\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8054:8061  uint256 */\n      0x00\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8080:8099  _allowances[holder] */\n      swap1\n      dup2\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8080:8091  _allowances */\n      0x08\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8080:8099  _allowances[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8080:8108  _allowances[holder][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7964:8115  function allowance(address holder, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6204:6608  function revokeOperator(address operator) public virtual override  {... */\n    tag_18:\n      tag_54\n      tag_87\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7438:7725  function operatorBurn(address account, uint256 amount, bytes memory data, bytes memory operatorData) public virtual override {... */\n    tag_19:\n      tag_54\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5170:5298  function burn(uint256 amount, bytes memory data) public virtual override  {... */\n    tag_20:\n      tag_54\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6674:6804  function defaultOperators() public view virtual override returns (address[] memory) {... */\n    tag_25:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6740:6756  address[] memory */\n      0x60\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6775:6797  _defaultOperatorsArray */\n      0x04\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6768:6797  return _defaultOperatorsArray */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_99:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_99\n      jumpi\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6674:6804  function defaultOperators() public view virtual override returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2910:3008  function name() public view virtual override returns (string memory) {... */\n    tag_29:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2964:2977  string memory */\n      0x60\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2996:3001  _name */\n      0x02\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2989:3001  return _name */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_102\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_98)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      pop\n      swap4\n      swap6\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2910:3008  function name() public view virtual override returns (string memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8253:8450  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_35:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8335:8339  bool */\n      0x00\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8390:8422  _approve(holder, spender, value) */\n      tag_110\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      dup2\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8407:8414  spender */\n      dup6\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8416:8421  value */\n      dup6\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8390:8398  _approve */\n      tag_111\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8390:8422  _approve(holder, spender, value) */\n      jump\t// in\n    tag_110:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8439:8443  true */\n      0x01\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8432:8443  return true */\n      swap2\n      pop\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8253:8450  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_107:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8815:9591  function transferFrom(address holder, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_45:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8921:8925  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8945:8968  recipient != address(0) */\n      dup4\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8937:9009  require(recipient != address(0), \"ERC777: transfer to the zero address\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9027:9047  holder != address(0) */\n      dup5\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9019:9090  require(holder != address(0), \"ERC777: transfer from the zero address\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7861:7863   */\n      0x20\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9019:9090  require(holder != address(0), \"ERC777: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7843:7864   */\n      mstore\n        /* \"#utility.yul\":7900:7902   */\n      0x26\n        /* \"#utility.yul\":7880:7898   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7873:7903   */\n      mstore\n        /* \"#utility.yul\":7939:7973   */\n      0x4552433737373a207472616e736665722066726f6d20746865207a65726f2061\n        /* \"#utility.yul\":7919:7937   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7912:7974   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7990:8008   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7983:8019   */\n      mstore\n        /* \"#utility.yul\":8036:8055   */\n      0x84\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9019:9090  require(holder != address(0), \"ERC777: transfer from the zero address\") */\n      tag_115\n        /* \"#utility.yul\":7659:8061   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9019:9090  require(holder != address(0), \"ERC777: transfer from the zero address\") */\n    tag_117:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9101:9116  address spender */\n      0x00\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9101:9131  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9142:9203  _callTokensToSend(spender, holder, recipient, amount, \"\", \"\") */\n      tag_121\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9160:9167  spender */\n      dup2\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9169:9175  holder */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9177:9186  recipient */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9188:9194  amount */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9142:9203  _callTokensToSend(spender, holder, recipient, amount, \"\", \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9142:9159  _callTokensToSend */\n      tag_122\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9142:9203  _callTokensToSend(spender, holder, recipient, amount, \"\", \"\") */\n      jump\t// in\n    tag_121:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9214:9263  _move(spender, holder, recipient, amount, \"\", \"\") */\n      tag_123\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9220:9227  spender */\n      dup2\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9229:9235  holder */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9237:9246  recipient */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9248:9254  amount */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9214:9263  _move(spender, holder, recipient, amount, \"\", \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9214:9219  _move */\n      tag_124\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9214:9263  _move(spender, holder, recipient, amount, \"\", \"\") */\n      jump\t// in\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9301:9320  _allowances[holder] */\n      dup1\n      dup7\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9274:9298  uint256 currentAllowance */\n      0x00\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9301:9320  _allowances[holder] */\n      swap1\n      dup2\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9301:9312  _allowances */\n      0x08\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9301:9320  _allowances[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9301:9329  _allowances[holder][spender] */\n      swap4\n      dup6\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9347:9373  currentAllowance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9339:9419  require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8268:8270   */\n      0x20\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9339:9419  require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8250:8271   */\n      mstore\n        /* \"#utility.yul\":8307:8309   */\n      0x29\n        /* \"#utility.yul\":8287:8305   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8280:8310   */\n      mstore\n        /* \"#utility.yul\":8346:8380   */\n      0x4552433737373a207472616e7366657220616d6f756e74206578636565647320\n        /* \"#utility.yul\":8326:8344   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8319:8381   */\n      mstore\n      shl(0xb8, 0x616c6c6f77616e6365)\n        /* \"#utility.yul\":8397:8415   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8390:8429   */\n      mstore\n        /* \"#utility.yul\":8446:8465   */\n      0x84\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9339:9419  require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\") */\n      tag_115\n        /* \"#utility.yul\":8066:8471   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9339:9419  require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\") */\n    tag_125:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9429:9481  _approve(holder, spender, currentAllowance - amount) */\n      tag_128\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9438:9444  holder */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9446:9453  spender */\n      dup4\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9455:9480  currentAllowance - amount */\n      tag_129\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9474:9480  amount */\n      dup8\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9455:9471  currentAllowance */\n      dup6\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9455:9480  currentAllowance - amount */\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9429:9437  _approve */\n      tag_111\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9429:9481  _approve(holder, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_128:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9492:9562  _callTokensReceived(spender, holder, recipient, amount, \"\", \"\", false) */\n      tag_131\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9512:9519  spender */\n      dup3\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9521:9527  holder */\n      dup8\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9529:9538  recipient */\n      dup8\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9540:9546  amount */\n      dup8\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9492:9562  _callTokensReceived(spender, holder, recipient, amount, \"\", \"\", false) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9556:9561  false */\n      0x00\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9492:9511  _callTokensReceived */\n      tag_132\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9492:9562  _callTokensReceived(spender, holder, recipient, amount, \"\", \"\", false) */\n      jump\t// in\n    tag_131:\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9580:9584  true */\n      0x01\n      swap6\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8815:9591  function transferFrom(address holder, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6923:7317  function operatorSend(... */\n    tag_57:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7158:7193  isOperatorFor(_msgSender(), sender) */\n      tag_136\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7186:7192  sender */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7158:7171  isOperatorFor */\n      tag_80\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7158:7193  isOperatorFor(_msgSender(), sender) */\n      jump\t// in\n    tag_136:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7150:7242  require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_140\n      jump\t// in\n    tag_138:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7252:7310  _send(sender, recipient, amount, data, operatorData, true) */\n      tag_141\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7258:7264  sender */\n      dup6\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7266:7275  recipient */\n      dup6\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7277:7283  amount */\n      dup6\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7285:7289  data */\n      dup6\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7291:7303  operatorData */\n      dup6\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7305:7309  true */\n      0x01\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7252:7257  _send */\n      tag_142\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7252:7310  _send(sender, recipient, amount, data, operatorData, true) */\n      jump\t// in\n    tag_141:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6923:7317  function operatorSend(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5727:6140  function authorizeOperator(address operator) public virtual override  {... */\n    tag_65:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5815:5839  _msgSender() != operator */\n      dup2\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5815:5839  _msgSender() != operator */\n      sub\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5807:5880  require(_msgSender() != operator, \"ERC777: authorizing self as operator\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9356:9358   */\n      0x20\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5807:5880  require(_msgSender() != operator, \"ERC777: authorizing self as operator\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9338:9359   */\n      mstore\n        /* \"#utility.yul\":9395:9397   */\n      0x24\n        /* \"#utility.yul\":9375:9393   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9368:9398   */\n      mstore\n        /* \"#utility.yul\":9434:9468   */\n      0x4552433737373a20617574686f72697a696e672073656c66206173206f706572\n        /* \"#utility.yul\":9414:9432   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9407:9469   */\n      mstore\n      shl(0xe1, 0x30ba37b9)\n        /* \"#utility.yul\":9485:9503   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9478:9512   */\n      mstore\n        /* \"#utility.yul\":9529:9548   */\n      0x84\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5807:5880  require(_msgSender() != operator, \"ERC777: authorizing self as operator\") */\n      tag_115\n        /* \"#utility.yul\":9154:9554   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5807:5880  require(_msgSender() != operator, \"ERC777: authorizing self as operator\") */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5895:5922  _defaultOperators[operator] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5895:5912  _defaultOperators */\n      0x05\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5895:5922  _defaultOperators[operator] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5891:6076  if (_defaultOperators[operator]) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5945:5983  _revokedDefaultOperators[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5945:5969  _revokedDefaultOperators */\n      0x07\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5945:5983  _revokedDefaultOperators[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5945:5993  _revokedDefaultOperators[_msgSender()][operator] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5938:5993  delete _revokedDefaultOperators[_msgSender()][operator] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5891:6076  if (_defaultOperators[operator]) {... */\n      jump(tag_151)\n    tag_149:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6024:6048  _operators[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6024:6034  _operators */\n      0x06\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6024:6048  _operators[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6024:6058  _operators[_msgSender()][operator] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6024:6065  _operators[_msgSender()][operator] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6061:6065  true */\n      0x01\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6024:6065  _operators[_msgSender()][operator] = true */\n      or\n      swap1\n      sstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5891:6076  if (_defaultOperators[operator]) {... */\n    tag_151:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6091:6133  AuthorizedOperator(operator, _msgSender()) */\n      mload(0x40)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6091:6133  AuthorizedOperator(operator, _msgSender()) */\n      dup4\n      and\n      swap1\n      0xf4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f9\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5727:6140  function authorizeOperator(address operator) public virtual override  {... */\n      pop\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3064:3166  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3120:3133  string memory */\n      0x60\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3152:3159  _symbol */\n      0x03\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3145:3159  return _symbol */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4206:4370  function send(address recipient, uint256 amount, bytes memory data) public virtual override  {... */\n    tag_72:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4309:4363  _send(_msgSender(), recipient, amount, data, \"\", true) */\n      tag_161\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4329:4338  recipient */\n      dup5\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4340:4346  amount */\n      dup5\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4348:4352  data */\n      dup5\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4309:4363  _send(_msgSender(), recipient, amount, data, \"\", true) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4358:4362  true */\n      0x01\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4309:4314  _send */\n      tag_142\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4309:4363  _send(_msgSender(), recipient, amount, data, \"\", true) */\n      jump\t// in\n    tag_161:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4206:4370  function send(address recipient, uint256 amount, bytes memory data) public virtual override  {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4601:5040  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_75:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4687:4691  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4711:4734  recipient != address(0) */\n      dup4\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4703:4775  require(recipient != address(0), \"ERC777: transfer to the zero address\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_164:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4786:4798  address from */\n      0x00\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4786:4813  address from = _msgSender() */\n      swap1\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4824:4880  _callTokensToSend(from, from, recipient, amount, \"\", \"\") */\n      tag_167\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4842:4846  from */\n      dup2\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4848:4852  from */\n      dup3\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4854:4863  recipient */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4865:4871  amount */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4824:4880  _callTokensToSend(from, from, recipient, amount, \"\", \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4824:4841  _callTokensToSend */\n      tag_122\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4824:4880  _callTokensToSend(from, from, recipient, amount, \"\", \"\") */\n      jump\t// in\n    tag_167:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4891:4935  _move(from, from, recipient, amount, \"\", \"\") */\n      tag_168\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4897:4901  from */\n      dup2\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4903:4907  from */\n      dup3\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4909:4918  recipient */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4920:4926  amount */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4891:4935  _move(from, from, recipient, amount, \"\", \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4891:4896  _move */\n      tag_124\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4891:4935  _move(from, from, recipient, amount, \"\", \"\") */\n      jump\t// in\n    tag_168:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4946:5011  _callTokensReceived(from, from, recipient, amount, \"\", \"\", false) */\n      tag_110\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4966:4970  from */\n      dup2\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4972:4976  from */\n      dup3\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4978:4987  recipient */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4989:4995  amount */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4946:5011  _callTokensReceived(from, from, recipient, amount, \"\", \"\", false) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5005:5010  false */\n      0x00\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4946:4965  _callTokensReceived */\n      tag_132\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4946:5011  _callTokensReceived(from, from, recipient, amount, \"\", \"\", false) */\n      jump\t// in\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5361:5660  function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {... */\n    tag_80:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5461:5465  bool */\n      0x00\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5496:5507  tokenHolder */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5484:5507  operator == tokenHolder */\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5484:5492  operator */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5484:5507  operator == tokenHolder */\n      and\n      eq\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5484:5604  operator == tokenHolder ||... */\n      dup1\n      tag_172\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5524:5551  _defaultOperators[operator] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5524:5541  _defaultOperators */\n      0x05\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5524:5551  _defaultOperators[operator] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5524:5603  _defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator] */\n      dup1\n      iszero\n      tag_172\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5556:5593  _revokedDefaultOperators[tokenHolder] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5556:5580  _revokedDefaultOperators */\n      0x07\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5556:5593  _revokedDefaultOperators[tokenHolder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5556:5603  _revokedDefaultOperators[tokenHolder][operator] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5555:5603  !_revokedDefaultOperators[tokenHolder][operator] */\n      iszero\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5524:5603  _defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator] */\n    tag_172:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5484:5653  operator == tokenHolder ||... */\n      dup1\n      tag_173\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5620:5643  _operators[tokenHolder] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5620:5630  _operators */\n      0x06\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5620:5643  _operators[tokenHolder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5620:5653  _operators[tokenHolder][operator] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5484:5653  operator == tokenHolder ||... */\n    tag_173:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5477:5653  return operator == tokenHolder ||... */\n      swap4\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5361:5660  function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6204:6608  function revokeOperator(address operator) public virtual override  {... */\n    tag_88:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6289:6313  operator != _msgSender() */\n      dup3\n      and\n      sub\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6281:6351  require(operator != _msgSender(), \"ERC777: revoking self as operator\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9761:9763   */\n      0x20\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6281:6351  require(operator != _msgSender(), \"ERC777: revoking self as operator\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9743:9764   */\n      mstore\n        /* \"#utility.yul\":9800:9802   */\n      0x21\n        /* \"#utility.yul\":9780:9798   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9773:9803   */\n      mstore\n        /* \"#utility.yul\":9839:9873   */\n      0x4552433737373a207265766f6b696e672073656c66206173206f70657261746f\n        /* \"#utility.yul\":9819:9837   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9812:9874   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":9890:9908   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9883:9914   */\n      mstore\n        /* \"#utility.yul\":9931:9950   */\n      0x84\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6281:6351  require(operator != _msgSender(), \"ERC777: revoking self as operator\") */\n      tag_115\n        /* \"#utility.yul\":9559:9956   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6281:6351  require(operator != _msgSender(), \"ERC777: revoking self as operator\") */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6366:6393  _defaultOperators[operator] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6366:6383  _defaultOperators */\n      0x05\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6366:6393  _defaultOperators[operator] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6362:6547  if (_defaultOperators[operator]) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6409:6447  _revokedDefaultOperators[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6409:6433  _revokedDefaultOperators */\n      0x07\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6409:6447  _revokedDefaultOperators[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6409:6457  _revokedDefaultOperators[_msgSender()][operator] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6409:6464  _revokedDefaultOperators[_msgSender()][operator] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6460:6464  true */\n      0x01\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6409:6464  _revokedDefaultOperators[_msgSender()][operator] = true */\n      or\n      swap1\n      sstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6362:6547  if (_defaultOperators[operator]) {... */\n      jump(tag_182)\n    tag_180:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6502:6526  _operators[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6502:6512  _operators */\n      0x06\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6502:6526  _operators[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6502:6536  _operators[_msgSender()][operator] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6495:6536  delete _operators[_msgSender()][operator] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6362:6547  if (_defaultOperators[operator]) {... */\n    tag_182:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6562:6601  RevokedOperator(operator, _msgSender()) */\n      mload(0x40)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6562:6601  RevokedOperator(operator, _msgSender()) */\n      dup4\n      and\n      swap1\n      0x50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa1\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6204:6608  function revokeOperator(address operator) public virtual override  {... */\n      pop\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7438:7725  function operatorBurn(address account, uint256 amount, bytes memory data, bytes memory operatorData) public virtual override {... */\n    tag_92:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7581:7617  isOperatorFor(_msgSender(), account) */\n      tag_186\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7609:7616  account */\n      dup6\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7581:7594  isOperatorFor */\n      tag_80\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7581:7617  isOperatorFor(_msgSender(), account) */\n      jump\t// in\n    tag_186:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7573:7666  require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_140\n      jump\t// in\n    tag_188:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7676:7718  _burn(account, amount, data, operatorData) */\n      tag_190\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7682:7689  account */\n      dup5\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7691:7697  amount */\n      dup5\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7699:7703  data */\n      dup5\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7705:7717  operatorData */\n      dup5\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7676:7681  _burn */\n      tag_191\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7676:7718  _burn(account, amount, data, operatorData) */\n      jump\t// in\n    tag_190:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7438:7725  function operatorBurn(address account, uint256 amount, bytes memory data, bytes memory operatorData) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5170:5298  function burn(uint256 amount, bytes memory data) public virtual override  {... */\n    tag_96:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5254:5291  _burn(_msgSender(), amount, data, \"\") */\n      tag_193\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5274:5280  amount */\n      dup4\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5282:5286  data */\n      dup4\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5254:5291  _burn(_msgSender(), amount, data, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5254:5259  _burn */\n      tag_191\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5254:5291  _burn(_msgSender(), amount, data, \"\") */\n      jump\t// in\n    tag_193:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5170:5298  function burn(uint256 amount, bytes memory data) public virtual override  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14752:15087  function _approve(address holder, address spender, uint256 value) internal {... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14845:14865  holder != address(0) */\n      dup4\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14837:14907  require(holder != address(0), \"ERC777: approve from the zero address\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10163:10165   */\n      0x20\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14837:14907  require(holder != address(0), \"ERC777: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10145:10166   */\n      mstore\n        /* \"#utility.yul\":10202:10204   */\n      0x25\n        /* \"#utility.yul\":10182:10200   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10175:10205   */\n      mstore\n        /* \"#utility.yul\":10241:10275   */\n      0x4552433737373a20617070726f76652066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10221:10239   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10214:10276   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":10292:10310   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10285:10320   */\n      mstore\n        /* \"#utility.yul\":10337:10356   */\n      0x84\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14837:14907  require(holder != address(0), \"ERC777: approve from the zero address\") */\n      tag_115\n        /* \"#utility.yul\":9961:10362   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14837:14907  require(holder != address(0), \"ERC777: approve from the zero address\") */\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14925:14946  spender != address(0) */\n      dup3\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14917:14986  require(spender != address(0), \"ERC777: approve to the zero address\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10569:10571   */\n      0x20\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14917:14986  require(spender != address(0), \"ERC777: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10551:10572   */\n      mstore\n        /* \"#utility.yul\":10608:10610   */\n      0x23\n        /* \"#utility.yul\":10588:10606   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10581:10611   */\n      mstore\n        /* \"#utility.yul\":10647:10681   */\n      0x4552433737373a20617070726f766520746f20746865207a65726f2061646472\n        /* \"#utility.yul\":10627:10645   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10620:10682   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":10698:10716   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10691:10724   */\n      mstore\n        /* \"#utility.yul\":10741:10760   */\n      0x84\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14917:14986  require(spender != address(0), \"ERC777: approve to the zero address\") */\n      tag_115\n        /* \"#utility.yul\":10367:10766   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14917:14986  require(spender != address(0), \"ERC777: approve to the zero address\") */\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14997:15016  _allowances[holder] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14997:15008  _allowances */\n      0x08\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14997:15016  _allowances[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14997:15025  _allowances[holder][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14997:15033  _allowances[holder][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15048:15080  Approval(holder, spender, value) */\n      swap1\n      mload\n        /* \"#utility.yul\":2124:2149   */\n      dup5\n      dup2\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15048:15080  Approval(holder, spender, value) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":2097:2115   */\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15048:15080  Approval(holder, spender, value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14752:15087  function _approve(address holder, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15560:16044  function _callTokensToSend(... */\n    tag_122:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15803:15881  _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH) */\n      mload(0x40)\n      shl(0xe1, 0x555ddc65)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10963:10995   */\n      dup7\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15803:15881  _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10945:10996   */\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1417:1448  keccak256(\"ERC777TokensSender\") */\n      0x29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895\n        /* \"#utility.yul\":11012:11030   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11005:11039   */\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15781:15800  address implementer */\n      0x00\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1168:1210  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n      0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15803:15844  _ERC1820_REGISTRY.getInterfaceImplementer */\n      0xaabbb8ca\n      swap1\n        /* \"#utility.yul\":10918:10936   */\n      0x44\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15803:15881  _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15781:15881  address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15895:15920  implementer != address(0) */\n      dup2\n      and\n      iszero\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15891:16038  if (implementer != address(0)) {... */\n      tag_211\n      jumpi\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15936:16027  IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData) */\n      mload(0x40)\n      shl(0xe1, 0x3ad5cbc1)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15936:15975  IERC777Sender(implementer).tokensToSend */\n      dup3\n      and\n      swap1\n      0x75ab9782\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15936:16027  IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData) */\n      tag_212\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15976:15984  operator */\n      dup11\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15986:15990  from */\n      dup11\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15992:15994  to */\n      dup11\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15996:16002  amount */\n      dup11\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":16004:16012  userData */\n      dup11\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":16014:16026  operatorData */\n      dup11\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15936:16027  IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData) */\n      0x04\n      add\n      tag_213\n      jump\t// in\n    tag_212:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_216:\n      pop\n      pop\n      pop\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15891:16038  if (implementer != address(0)) {... */\n    tag_211:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15771:16044  {... */\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15560:16044  function _callTokensToSend(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14025:14614  function _move(... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14315:14330  _balances[from] */\n      dup6\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14293:14312  uint256 fromBalance */\n      0x00\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14315:14330  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14348:14369  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14340:14413  require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12245:12247   */\n      0x20\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14340:14413  require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12227:12248   */\n      mstore\n        /* \"#utility.yul\":12284:12286   */\n      0x27\n        /* \"#utility.yul\":12264:12282   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12257:12287   */\n      mstore\n        /* \"#utility.yul\":12323:12357   */\n      0x4552433737373a207472616e7366657220616d6f756e74206578636565647320\n        /* \"#utility.yul\":12303:12321   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12296:12358   */\n      mstore\n      shl(0xc8, 0x62616c616e6365)\n        /* \"#utility.yul\":12374:12392   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12367:12404   */\n      mstore\n        /* \"#utility.yul\":12421:12440   */\n      0x84\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14340:14413  require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\") */\n      tag_115\n        /* \"#utility.yul\":12043:12446   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14340:14413  require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\") */\n    tag_220:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14441:14461  fromBalance - amount */\n      tag_223\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14455:14461  amount */\n      dup5\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14441:14452  fromBalance */\n      dup3\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14441:14461  fromBalance - amount */\n      tag_130\n      jump\t// in\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14423:14438  _balances[from] */\n      dup1\n      dup9\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14423:14432  _balances */\n      0x00\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14423:14438  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14423:14461  _balances[from] = fromBalance - amount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14471:14484  _balances[to] */\n      swap1\n      dup8\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14471:14494  _balances[to] += amount */\n      dup1\n      sload\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14488:14494  amount */\n      dup7\n      swap3\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14423:14432  _balances */\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14471:14494  _balances[to] += amount */\n      tag_224\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14488:14494  amount */\n      dup5\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14471:14494  _balances[to] += amount */\n      tag_225\n      jump\t// in\n    tag_224:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14531:14533  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14510:14566  Sent(operator, from, to, amount, userData, operatorData) */\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14525:14529  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14510:14566  Sent(operator, from, to, amount, userData, operatorData) */\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14515:14523  operator */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14510:14566  Sent(operator, from, to, amount, userData, operatorData) */\n      and\n      0x06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14535:14541  amount */\n      dup8\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14543:14551  userData */\n      dup8\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14553:14565  operatorData */\n      dup8\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14510:14566  Sent(operator, from, to, amount, userData, operatorData) */\n      mload(0x40)\n      tag_226\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14596:14598  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14581:14607  Transfer(from, to, amount) */\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14590:14594  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14581:14607  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14600:14606  amount */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14581:14607  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_228\n      swap2\n        /* \"#utility.yul\":2124:2149   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2112:2114   */\n      0x20\n        /* \"#utility.yul\":2097:2115   */\n      add\n      swap1\n        /* \"#utility.yul\":1978:2155   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14581:14607  Transfer(from, to, amount) */\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14224:14614  {... */\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14025:14614  function _move(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":16733:17421  function _callTokensReceived(... */\n    tag_132:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17012:17091  _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH) */\n      mload(0x40)\n      shl(0xe1, 0x555ddc65)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10963:10995   */\n      dup7\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17012:17091  _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10945:10996   */\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1514:1548  keccak256(\"ERC777TokensRecipient\") */\n      0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b\n        /* \"#utility.yul\":11012:11030   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11005:11039   */\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":16990:17009  address implementer */\n      0x00\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1168:1210  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n      0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17012:17053  _ERC1820_REGISTRY.getInterfaceImplementer */\n      0xaabbb8ca\n      swap1\n        /* \"#utility.yul\":10918:10936   */\n      0x44\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17012:17091  _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_232:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_233\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_233:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":16990:17091  address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17105:17130  implementer != address(0) */\n      dup2\n      and\n      iszero\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17101:17415  if (implementer != address(0)) {... */\n      tag_234\n      jumpi\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17146:17242  IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData) */\n      mload(0x40)\n      shl(0xe0, 0x23de29)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17146:17190  IERC777Recipient(implementer).tokensReceived */\n      dup3\n      and\n      swap1\n      0x23de29\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17146:17242  IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData) */\n      tag_235\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17191:17199  operator */\n      dup12\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17201:17205  from */\n      dup12\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17207:17209  to */\n      dup12\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17211:17217  amount */\n      dup12\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17219:17227  userData */\n      dup12\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17229:17241  operatorData */\n      dup12\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17146:17242  IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData) */\n      0x04\n      add\n      tag_213\n      jump\t// in\n    tag_235:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_236:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17101:17415  if (implementer != address(0)) {... */\n      jump(tag_243)\n    tag_234:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17263:17282  requireReceptionAck */\n      dup2\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17259:17415  if (requireReceptionAck) {... */\n      iszero\n      tag_243\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17307:17320  to.isContract */\n      dup7\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":1078:1098  extcodesize(account) */\n      extcodesize\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":1116:1124  size > 0 */\n      iszero\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17298:17404  require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13238:13240   */\n      0x20\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17298:17404  require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13220:13241   */\n      mstore\n        /* \"#utility.yul\":13277:13279   */\n      0x4d\n        /* \"#utility.yul\":13257:13275   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13250:13280   */\n      mstore\n        /* \"#utility.yul\":13316:13350   */\n      0x4552433737373a20746f6b656e20726563697069656e7420636f6e7472616374\n        /* \"#utility.yul\":13296:13314   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13289:13351   */\n      mstore\n        /* \"#utility.yul\":13387:13421   */\n      0x20686173206e6f20696d706c656d656e74657220666f7220455243373737546f\n        /* \"#utility.yul\":13367:13385   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13360:13422   */\n      mstore\n      shl(0x9a, 0x1ad95b9cd49958da5c1a595b9d)\n        /* \"#utility.yul\":13438:13457   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":13431:13475   */\n      mstore\n        /* \"#utility.yul\":13492:13511   */\n      0xa4\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17298:17404  require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\") */\n      tag_115\n        /* \"#utility.yul\":13036:13517   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17298:17404  require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\") */\n    tag_243:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":16980:17421  {... */\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":16733:17421  function _callTokensReceived(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12247:12917  function _send(... */\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12489:12507  from != address(0) */\n      dup7\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12481:12546  require(from != address(0), \"ERC777: send from the zero address\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13724:13726   */\n      0x20\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12481:12546  require(from != address(0), \"ERC777: send from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13706:13727   */\n      mstore\n        /* \"#utility.yul\":13763:13765   */\n      0x22\n        /* \"#utility.yul\":13743:13761   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13736:13766   */\n      mstore\n        /* \"#utility.yul\":13802:13836   */\n      0x4552433737373a2073656e642066726f6d20746865207a65726f206164647265\n        /* \"#utility.yul\":13782:13800   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13775:13837   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":13853:13871   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13846:13878   */\n      mstore\n        /* \"#utility.yul\":13895:13914   */\n      0x84\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12481:12546  require(from != address(0), \"ERC777: send from the zero address\") */\n      tag_115\n        /* \"#utility.yul\":13522:13920   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12481:12546  require(from != address(0), \"ERC777: send from the zero address\") */\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12564:12580  to != address(0) */\n      dup6\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12556:12617  require(to != address(0), \"ERC777: send to the zero address\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14127:14129   */\n      0x20\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12556:12617  require(to != address(0), \"ERC777: send to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14109:14130   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14146:14164   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14139:14169   */\n      mstore\n        /* \"#utility.yul\":14205:14239   */\n      0x4552433737373a2073656e6420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":14185:14203   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14178:14240   */\n      mstore\n        /* \"#utility.yul\":14257:14275   */\n      0x64\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12556:12617  require(to != address(0), \"ERC777: send to the zero address\") */\n      tag_115\n        /* \"#utility.yul\":13925:14281   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12556:12617  require(to != address(0), \"ERC777: send to the zero address\") */\n    tag_250:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12670:12739  _callTokensToSend(operator, from, to, amount, userData, operatorData) */\n      tag_254\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      dup2\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12698:12702  from */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12704:12706  to */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12708:12714  amount */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12716:12724  userData */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12726:12738  operatorData */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12670:12687  _callTokensToSend */\n      tag_122\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12670:12739  _callTokensToSend(operator, from, to, amount, userData, operatorData) */\n      jump\t// in\n    tag_254:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12750:12807  _move(operator, from, to, amount, userData, operatorData) */\n      tag_255\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12756:12764  operator */\n      dup2\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12766:12770  from */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12772:12774  to */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12776:12782  amount */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12784:12792  userData */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12794:12806  operatorData */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12750:12755  _move */\n      tag_124\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12750:12807  _move(operator, from, to, amount, userData, operatorData) */\n      jump\t// in\n    tag_255:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12818:12910  _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck) */\n      tag_211\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12838:12846  operator */\n      dup2\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12848:12852  from */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12854:12856  to */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12858:12864  amount */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12866:12874  userData */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12876:12888  operatorData */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12890:12909  requireReceptionAck */\n      dup9\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12818:12837  _callTokensReceived */\n      tag_132\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12818:12910  _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck) */\n      jump\t// in\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13222:14019  function _burn(... */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13406:13424  from != address(0) */\n      dup5\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13398:13463  require(from != address(0), \"ERC777: burn from the zero address\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14488:14490   */\n      0x20\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13398:13463  require(from != address(0), \"ERC777: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14470:14491   */\n      mstore\n        /* \"#utility.yul\":14527:14529   */\n      0x22\n        /* \"#utility.yul\":14507:14525   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14500:14530   */\n      mstore\n        /* \"#utility.yul\":14566:14600   */\n      0x4552433737373a206275726e2066726f6d20746865207a65726f206164647265\n        /* \"#utility.yul\":14546:14564   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14539:14601   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":14617:14635   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14610:14642   */\n      mstore\n        /* \"#utility.yul\":14659:14678   */\n      0x84\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13398:13463  require(from != address(0), \"ERC777: burn from the zero address\") */\n      tag_115\n        /* \"#utility.yul\":14286:14684   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13398:13463  require(from != address(0), \"ERC777: burn from the zero address\") */\n    tag_258:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13516:13589  _callTokensToSend(operator, from, address(0), amount, data, operatorData) */\n      tag_262\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      dup2\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13544:13548  from */\n      dup7\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13474:13490  address operator */\n      0x00\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13562:13568  amount */\n      dup8\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13570:13574  data */\n      dup8\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13576:13588  operatorData */\n      dup8\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13516:13533  _callTokensToSend */\n      tag_122\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13516:13589  _callTokensToSend(operator, from, address(0), amount, data, operatorData) */\n      jump\t// in\n    tag_262:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13723:13738  _balances[from] */\n      dup6\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13701:13720  uint256 fromBalance */\n      0x00\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13723:13738  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13756:13777  fromBalance >= amount */\n      dup5\n      dup2\n      lt\n      iszero\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13748:13817  require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14891:14893   */\n      0x20\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13748:13817  require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14873:14894   */\n      mstore\n        /* \"#utility.yul\":14930:14932   */\n      0x23\n        /* \"#utility.yul\":14910:14928   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14903:14933   */\n      mstore\n        /* \"#utility.yul\":14969:15003   */\n      0x4552433737373a206275726e20616d6f756e7420657863656564732062616c61\n        /* \"#utility.yul\":14949:14967   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14942:15004   */\n      mstore\n      shl(0xe8, 0x6e6365)\n        /* \"#utility.yul\":15020:15038   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15013:15046   */\n      mstore\n        /* \"#utility.yul\":15063:15082   */\n      0x84\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13748:13817  require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\") */\n      tag_115\n        /* \"#utility.yul\":14689:15088   */\n      jump\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13748:13817  require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\") */\n    tag_264:\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13845:13865  fromBalance - amount */\n      tag_267\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13859:13865  amount */\n      dup6\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13845:13856  fromBalance */\n      dup3\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13845:13865  fromBalance - amount */\n      tag_130\n      jump\t// in\n    tag_267:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13827:13842  _balances[from] */\n      dup8\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13827:13836  _balances */\n      0x00\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13827:13842  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13827:13865  _balances[from] = fromBalance - amount */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13875:13887  _totalSupply */\n      0x01\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13875:13897  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13891:13897  amount */\n      dup8\n      swap3\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13827:13836  _balances */\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13875:13897  _totalSupply -= amount */\n      tag_268\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13891:13897  amount */\n      dup5\n      swap1\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13875:13897  _totalSupply -= amount */\n      tag_130\n      jump\t// in\n    tag_268:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13930:13934  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13913:13963  Burned(operator, from, amount, data, operatorData) */\n      and\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13920:13928  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13913:13963  Burned(operator, from, amount, data, operatorData) */\n      and\n      0xa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13936:13942  amount */\n      dup8\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13944:13948  data */\n      dup8\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13950:13962  operatorData */\n      dup8\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13913:13963  Burned(operator, from, amount, data, operatorData) */\n      mload(0x40)\n      tag_269\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13978:14012  Transfer(from, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":2124:2149   */\n      dup6\n      dup2\n      mstore\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14001:14002  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13978:14012  Transfer(from, address(0), amount) */\n      dup9\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":2112:2114   */\n      0x20\n        /* \"#utility.yul\":2097:2115   */\n      add\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13978:14012  Transfer(from, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13388:14019  {... */\n      pop\n      pop\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13222:14019  function _burn(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:672   */\n    tag_27:\n        /* \"#utility.yul\":185:187   */\n      0x20\n        /* \"#utility.yul\":237:258   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":307:320   */\n      dup3\n      mload\n        /* \"#utility.yul\":210:228   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":329:351   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":156:160   */\n      0x00\n      swap2\n        /* \"#utility.yul\":185:187   */\n      swap1\n        /* \"#utility.yul\":408:423   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":382:384   */\n      0x40\n        /* \"#utility.yul\":367:385   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":156:160   */\n      dup5\n        /* \"#utility.yul\":451:646   */\n    tag_280:\n        /* \"#utility.yul\":465:471   */\n      dup2\n        /* \"#utility.yul\":462:463   */\n      dup2\n        /* \"#utility.yul\":459:472   */\n      lt\n        /* \"#utility.yul\":451:646   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":530:543   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":526:565   */\n      and\n        /* \"#utility.yul\":514:566   */\n      dup4\n      mstore\n        /* \"#utility.yul\":621:636   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":586:598   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":562:563   */\n      0x01\n        /* \"#utility.yul\":480:489   */\n      add\n        /* \"#utility.yul\":451:646   */\n      jump(tag_280)\n    tag_282:\n      pop\n        /* \"#utility.yul\":663:666   */\n      swap1\n      swap7\n        /* \"#utility.yul\":14:672   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":677:1100   */\n    tag_273:\n        /* \"#utility.yul\":719:722   */\n      0x00\n        /* \"#utility.yul\":757:762   */\n      dup2\n        /* \"#utility.yul\":751:763   */\n      mload\n        /* \"#utility.yul\":784:790   */\n      dup1\n        /* \"#utility.yul\":779:782   */\n      dup5\n        /* \"#utility.yul\":772:791   */\n      mstore\n        /* \"#utility.yul\":809:810   */\n      0x00\n        /* \"#utility.yul\":819:981   */\n    tag_284:\n        /* \"#utility.yul\":833:839   */\n      dup2\n        /* \"#utility.yul\":830:831   */\n      dup2\n        /* \"#utility.yul\":827:840   */\n      lt\n        /* \"#utility.yul\":819:981   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":895:899   */\n      0x20\n        /* \"#utility.yul\":951:964   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":947:969   */\n      dup2\n      add\n        /* \"#utility.yul\":941:970   */\n      mload\n        /* \"#utility.yul\":923:934   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":919:939   */\n      dup3\n      add\n        /* \"#utility.yul\":912:971   */\n      mstore\n        /* \"#utility.yul\":848:860   */\n      add\n        /* \"#utility.yul\":819:981   */\n      jump(tag_284)\n    tag_286:\n        /* \"#utility.yul\":823:826   */\n      pop\n        /* \"#utility.yul\":1026:1027   */\n      0x00\n        /* \"#utility.yul\":1019:1023   */\n      0x20\n        /* \"#utility.yul\":1010:1016   */\n      dup3\n        /* \"#utility.yul\":1005:1008   */\n      dup7\n        /* \"#utility.yul\":1001:1017   */\n      add\n        /* \"#utility.yul\":997:1024   */\n      add\n        /* \"#utility.yul\":990:1028   */\n      mstore\n        /* \"#utility.yul\":1089:1093   */\n      0x20\n        /* \"#utility.yul\":1082:1084   */\n      0x1f\n        /* \"#utility.yul\":1078:1085   */\n      not\n        /* \"#utility.yul\":1073:1075   */\n      0x1f\n        /* \"#utility.yul\":1065:1071   */\n      dup4\n        /* \"#utility.yul\":1061:1076   */\n      add\n        /* \"#utility.yul\":1057:1086   */\n      and\n        /* \"#utility.yul\":1052:1055   */\n      dup6\n        /* \"#utility.yul\":1048:1087   */\n      add\n        /* \"#utility.yul\":1044:1094   */\n      add\n        /* \"#utility.yul\":1037:1094   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":677:1100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1105:1325   */\n    tag_31:\n        /* \"#utility.yul\":1254:1256   */\n      0x20\n        /* \"#utility.yul\":1243:1252   */\n      dup2\n        /* \"#utility.yul\":1236:1257   */\n      mstore\n        /* \"#utility.yul\":1217:1221   */\n      0x00\n        /* \"#utility.yul\":1274:1319   */\n      tag_173\n        /* \"#utility.yul\":1315:1317   */\n      0x20\n        /* \"#utility.yul\":1304:1313   */\n      dup4\n        /* \"#utility.yul\":1300:1318   */\n      add\n        /* \"#utility.yul\":1292:1298   */\n      dup5\n        /* \"#utility.yul\":1274:1319   */\n      tag_273\n      jump\t// in\n        /* \"#utility.yul\":1330:1461   */\n    tag_274:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1405:1436   */\n      dup2\n      and\n        /* \"#utility.yul\":1395:1437   */\n      dup2\n      eq\n        /* \"#utility.yul\":1385:1455   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":1451:1452   */\n      0x00\n        /* \"#utility.yul\":1448:1449   */\n      dup1\n        /* \"#utility.yul\":1441:1453   */\n      revert\n        /* \"#utility.yul\":1385:1455   */\n    tag_290:\n        /* \"#utility.yul\":1330:1461   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1466:1781   */\n    tag_34:\n        /* \"#utility.yul\":1534:1540   */\n      0x00\n        /* \"#utility.yul\":1542:1548   */\n      dup1\n        /* \"#utility.yul\":1595:1597   */\n      0x40\n        /* \"#utility.yul\":1583:1592   */\n      dup4\n        /* \"#utility.yul\":1574:1581   */\n      dup6\n        /* \"#utility.yul\":1570:1593   */\n      sub\n        /* \"#utility.yul\":1566:1598   */\n      slt\n        /* \"#utility.yul\":1563:1615   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":1611:1612   */\n      0x00\n        /* \"#utility.yul\":1608:1609   */\n      dup1\n        /* \"#utility.yul\":1601:1613   */\n      revert\n        /* \"#utility.yul\":1563:1615   */\n    tag_292:\n        /* \"#utility.yul\":1650:1659   */\n      dup3\n        /* \"#utility.yul\":1637:1660   */\n      calldataload\n        /* \"#utility.yul\":1669:1700   */\n      tag_293\n        /* \"#utility.yul\":1694:1699   */\n      dup2\n        /* \"#utility.yul\":1669:1700   */\n      tag_274\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1719:1724   */\n      swap5\n        /* \"#utility.yul\":1771:1773   */\n      0x20\n        /* \"#utility.yul\":1756:1774   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1743:1775   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1466:1781   */\n      jump\t// out\n        /* \"#utility.yul\":2160:2616   */\n    tag_44:\n        /* \"#utility.yul\":2237:2243   */\n      0x00\n        /* \"#utility.yul\":2245:2251   */\n      dup1\n        /* \"#utility.yul\":2253:2259   */\n      0x00\n        /* \"#utility.yul\":2306:2308   */\n      0x60\n        /* \"#utility.yul\":2294:2303   */\n      dup5\n        /* \"#utility.yul\":2285:2292   */\n      dup7\n        /* \"#utility.yul\":2281:2304   */\n      sub\n        /* \"#utility.yul\":2277:2309   */\n      slt\n        /* \"#utility.yul\":2274:2326   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":2322:2323   */\n      0x00\n        /* \"#utility.yul\":2319:2320   */\n      dup1\n        /* \"#utility.yul\":2312:2324   */\n      revert\n        /* \"#utility.yul\":2274:2326   */\n    tag_297:\n        /* \"#utility.yul\":2361:2370   */\n      dup4\n        /* \"#utility.yul\":2348:2371   */\n      calldataload\n        /* \"#utility.yul\":2380:2411   */\n      tag_298\n        /* \"#utility.yul\":2405:2410   */\n      dup2\n        /* \"#utility.yul\":2380:2411   */\n      tag_274\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2430:2435   */\n      swap3\n      pop\n        /* \"#utility.yul\":2487:2489   */\n      0x20\n        /* \"#utility.yul\":2472:2490   */\n      dup5\n      add\n        /* \"#utility.yul\":2459:2491   */\n      calldataload\n        /* \"#utility.yul\":2500:2533   */\n      tag_299\n        /* \"#utility.yul\":2459:2491   */\n      dup2\n        /* \"#utility.yul\":2500:2533   */\n      tag_274\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2160:2616   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2552:2559   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2606:2608   */\n      0x40\n        /* \"#utility.yul\":2591:2609   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2578:2610   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2160:2616   */\n      jump\t// out\n        /* \"#utility.yul\":2810:2937   */\n    tag_275:\n        /* \"#utility.yul\":2871:2881   */\n      0x4e487b71\n        /* \"#utility.yul\":2866:2869   */\n      0xe0\n        /* \"#utility.yul\":2862:2882   */\n      shl\n        /* \"#utility.yul\":2859:2860   */\n      0x00\n        /* \"#utility.yul\":2852:2883   */\n      mstore\n        /* \"#utility.yul\":2902:2906   */\n      0x41\n        /* \"#utility.yul\":2899:2900   */\n      0x04\n        /* \"#utility.yul\":2892:2907   */\n      mstore\n        /* \"#utility.yul\":2926:2930   */\n      0x24\n        /* \"#utility.yul\":2923:2924   */\n      0x00\n        /* \"#utility.yul\":2916:2931   */\n      revert\n        /* \"#utility.yul\":2942:3660   */\n    tag_276:\n        /* \"#utility.yul\":2984:2989   */\n      0x00\n        /* \"#utility.yul\":3037:3040   */\n      dup3\n        /* \"#utility.yul\":3030:3034   */\n      0x1f\n        /* \"#utility.yul\":3022:3028   */\n      dup4\n        /* \"#utility.yul\":3018:3035   */\n      add\n        /* \"#utility.yul\":3014:3041   */\n      slt\n        /* \"#utility.yul\":3004:3059   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":3004:3059   */\n    tag_303:\n        /* \"#utility.yul\":3091:3097   */\n      dup2\n        /* \"#utility.yul\":3078:3098   */\n      calldataload\n        /* \"#utility.yul\":3117:3135   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3154:3156   */\n      dup1\n        /* \"#utility.yul\":3150:3152   */\n      dup3\n        /* \"#utility.yul\":3147:3157   */\n      gt\n        /* \"#utility.yul\":3144:3180   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":3160:3178   */\n      tag_305\n      tag_275\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3235:3237   */\n      0x40\n        /* \"#utility.yul\":3229:3238   */\n      mload\n        /* \"#utility.yul\":3203:3205   */\n      0x1f\n        /* \"#utility.yul\":3289:3302   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3285:3307   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3309:3311   */\n      0x3f\n        /* \"#utility.yul\":3281:3312   */\n      add\n        /* \"#utility.yul\":3277:3317   */\n      and\n        /* \"#utility.yul\":3265:3318   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3333:3351   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":3353:3375   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3330:3376   */\n      or\n        /* \"#utility.yul\":3327:3399   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":3379:3397   */\n      tag_307\n      tag_275\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3419:3429   */\n      dup2\n        /* \"#utility.yul\":3415:3417   */\n      0x40\n        /* \"#utility.yul\":3408:3430   */\n      mstore\n        /* \"#utility.yul\":3454:3456   */\n      dup4\n        /* \"#utility.yul\":3446:3452   */\n      dup2\n        /* \"#utility.yul\":3439:3457   */\n      mstore\n        /* \"#utility.yul\":3500:3503   */\n      dup7\n        /* \"#utility.yul\":3493:3497   */\n      0x20\n        /* \"#utility.yul\":3488:3490   */\n      dup6\n        /* \"#utility.yul\":3480:3486   */\n      dup9\n        /* \"#utility.yul\":3476:3491   */\n      add\n        /* \"#utility.yul\":3472:3498   */\n      add\n        /* \"#utility.yul\":3469:3504   */\n      gt\n        /* \"#utility.yul\":3466:3521   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":3517:3518   */\n      0x00\n        /* \"#utility.yul\":3514:3515   */\n      dup1\n        /* \"#utility.yul\":3507:3519   */\n      revert\n        /* \"#utility.yul\":3466:3521   */\n    tag_308:\n        /* \"#utility.yul\":3581:3583   */\n      dup4\n        /* \"#utility.yul\":3574:3578   */\n      0x20\n        /* \"#utility.yul\":3566:3572   */\n      dup8\n        /* \"#utility.yul\":3562:3579   */\n      add\n        /* \"#utility.yul\":3555:3559   */\n      0x20\n        /* \"#utility.yul\":3547:3553   */\n      dup4\n        /* \"#utility.yul\":3543:3560   */\n      add\n        /* \"#utility.yul\":3530:3584   */\n      calldatacopy\n        /* \"#utility.yul\":3628:3629   */\n      0x00\n        /* \"#utility.yul\":3621:3625   */\n      0x20\n        /* \"#utility.yul\":3616:3618   */\n      dup6\n        /* \"#utility.yul\":3608:3614   */\n      dup4\n        /* \"#utility.yul\":3604:3619   */\n      add\n        /* \"#utility.yul\":3600:3626   */\n      add\n        /* \"#utility.yul\":3593:3630   */\n      mstore\n        /* \"#utility.yul\":3648:3654   */\n      dup1\n        /* \"#utility.yul\":3639:3654   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2942:3660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3665:4550   */\n    tag_56:\n        /* \"#utility.yul\":3778:3784   */\n      0x00\n        /* \"#utility.yul\":3786:3792   */\n      dup1\n        /* \"#utility.yul\":3794:3800   */\n      0x00\n        /* \"#utility.yul\":3802:3808   */\n      dup1\n        /* \"#utility.yul\":3810:3816   */\n      0x00\n        /* \"#utility.yul\":3863:3866   */\n      0xa0\n        /* \"#utility.yul\":3851:3860   */\n      dup7\n        /* \"#utility.yul\":3842:3849   */\n      dup9\n        /* \"#utility.yul\":3838:3861   */\n      sub\n        /* \"#utility.yul\":3834:3867   */\n      slt\n        /* \"#utility.yul\":3831:3884   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":3880:3881   */\n      0x00\n        /* \"#utility.yul\":3877:3878   */\n      dup1\n        /* \"#utility.yul\":3870:3882   */\n      revert\n        /* \"#utility.yul\":3831:3884   */\n    tag_310:\n        /* \"#utility.yul\":3919:3928   */\n      dup6\n        /* \"#utility.yul\":3906:3929   */\n      calldataload\n        /* \"#utility.yul\":3938:3969   */\n      tag_311\n        /* \"#utility.yul\":3963:3968   */\n      dup2\n        /* \"#utility.yul\":3938:3969   */\n      tag_274\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":3988:3993   */\n      swap5\n      pop\n        /* \"#utility.yul\":4045:4047   */\n      0x20\n        /* \"#utility.yul\":4030:4048   */\n      dup7\n      add\n        /* \"#utility.yul\":4017:4049   */\n      calldataload\n        /* \"#utility.yul\":4058:4091   */\n      tag_312\n        /* \"#utility.yul\":4017:4049   */\n      dup2\n        /* \"#utility.yul\":4058:4091   */\n      tag_274\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4110:4117   */\n      swap4\n      pop\n        /* \"#utility.yul\":4164:4166   */\n      0x40\n        /* \"#utility.yul\":4149:4167   */\n      dup7\n      add\n        /* \"#utility.yul\":4136:4168   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":4219:4221   */\n      0x60\n        /* \"#utility.yul\":4204:4222   */\n      dup7\n      add\n        /* \"#utility.yul\":4191:4223   */\n      calldataload\n        /* \"#utility.yul\":4242:4260   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4272:4286   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4269:4303   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":4299:4300   */\n      0x00\n        /* \"#utility.yul\":4296:4297   */\n      dup1\n        /* \"#utility.yul\":4289:4301   */\n      revert\n        /* \"#utility.yul\":4269:4303   */\n    tag_313:\n        /* \"#utility.yul\":4322:4371   */\n      tag_314\n        /* \"#utility.yul\":4363:4370   */\n      dup10\n        /* \"#utility.yul\":4354:4360   */\n      dup4\n        /* \"#utility.yul\":4343:4352   */\n      dup11\n        /* \"#utility.yul\":4339:4361   */\n      add\n        /* \"#utility.yul\":4322:4371   */\n      tag_276\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4312:4371   */\n      swap4\n      pop\n        /* \"#utility.yul\":4424:4427   */\n      0x80\n        /* \"#utility.yul\":4413:4422   */\n      dup9\n        /* \"#utility.yul\":4409:4428   */\n      add\n        /* \"#utility.yul\":4396:4429   */\n      calldataload\n        /* \"#utility.yul\":4380:4429   */\n      swap2\n      pop\n        /* \"#utility.yul\":4454:4456   */\n      dup1\n        /* \"#utility.yul\":4444:4452   */\n      dup3\n        /* \"#utility.yul\":4441:4457   */\n      gt\n        /* \"#utility.yul\":4438:4474   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":4470:4471   */\n      0x00\n        /* \"#utility.yul\":4467:4468   */\n      dup1\n        /* \"#utility.yul\":4460:4472   */\n      revert\n        /* \"#utility.yul\":4438:4474   */\n    tag_315:\n      pop\n        /* \"#utility.yul\":4493:4544   */\n      tag_316\n        /* \"#utility.yul\":4536:4543   */\n      dup9\n        /* \"#utility.yul\":4525:4533   */\n      dup3\n        /* \"#utility.yul\":4514:4523   */\n      dup10\n        /* \"#utility.yul\":4510:4534   */\n      add\n        /* \"#utility.yul\":4493:4544   */\n      tag_276\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4483:4544   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3665:4550   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:4802   */\n    tag_60:\n        /* \"#utility.yul\":4614:4620   */\n      0x00\n        /* \"#utility.yul\":4667:4669   */\n      0x20\n        /* \"#utility.yul\":4655:4664   */\n      dup3\n        /* \"#utility.yul\":4646:4653   */\n      dup5\n        /* \"#utility.yul\":4642:4665   */\n      sub\n        /* \"#utility.yul\":4638:4670   */\n      slt\n        /* \"#utility.yul\":4635:4687   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":4683:4684   */\n      0x00\n        /* \"#utility.yul\":4680:4681   */\n      dup1\n        /* \"#utility.yul\":4673:4685   */\n      revert\n        /* \"#utility.yul\":4635:4687   */\n    tag_318:\n        /* \"#utility.yul\":4722:4731   */\n      dup2\n        /* \"#utility.yul\":4709:4732   */\n      calldataload\n        /* \"#utility.yul\":4741:4772   */\n      tag_173\n        /* \"#utility.yul\":4766:4771   */\n      dup2\n        /* \"#utility.yul\":4741:4772   */\n      tag_274\n      jump\t// in\n        /* \"#utility.yul\":4807:5330   */\n    tag_71:\n        /* \"#utility.yul\":4893:4899   */\n      0x00\n        /* \"#utility.yul\":4901:4907   */\n      dup1\n        /* \"#utility.yul\":4909:4915   */\n      0x00\n        /* \"#utility.yul\":4962:4964   */\n      0x60\n        /* \"#utility.yul\":4950:4959   */\n      dup5\n        /* \"#utility.yul\":4941:4948   */\n      dup7\n        /* \"#utility.yul\":4937:4960   */\n      sub\n        /* \"#utility.yul\":4933:4965   */\n      slt\n        /* \"#utility.yul\":4930:4982   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":4978:4979   */\n      0x00\n        /* \"#utility.yul\":4975:4976   */\n      dup1\n        /* \"#utility.yul\":4968:4980   */\n      revert\n        /* \"#utility.yul\":4930:4982   */\n    tag_321:\n        /* \"#utility.yul\":5017:5026   */\n      dup4\n        /* \"#utility.yul\":5004:5027   */\n      calldataload\n        /* \"#utility.yul\":5036:5067   */\n      tag_322\n        /* \"#utility.yul\":5061:5066   */\n      dup2\n        /* \"#utility.yul\":5036:5067   */\n      tag_274\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5086:5091   */\n      swap3\n      pop\n        /* \"#utility.yul\":5138:5140   */\n      0x20\n        /* \"#utility.yul\":5123:5141   */\n      dup5\n      add\n        /* \"#utility.yul\":5110:5142   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5193:5195   */\n      0x40\n        /* \"#utility.yul\":5178:5196   */\n      dup5\n      add\n        /* \"#utility.yul\":5165:5197   */\n      calldataload\n        /* \"#utility.yul\":5220:5238   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5209:5239   */\n      dup2\n      gt\n        /* \"#utility.yul\":5206:5256   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":5252:5253   */\n      0x00\n        /* \"#utility.yul\":5249:5250   */\n      dup1\n        /* \"#utility.yul\":5242:5254   */\n      revert\n        /* \"#utility.yul\":5206:5256   */\n    tag_323:\n        /* \"#utility.yul\":5275:5324   */\n      tag_324\n        /* \"#utility.yul\":5316:5323   */\n      dup7\n        /* \"#utility.yul\":5307:5313   */\n      dup3\n        /* \"#utility.yul\":5296:5305   */\n      dup8\n        /* \"#utility.yul\":5292:5314   */\n      add\n        /* \"#utility.yul\":5275:5324   */\n      tag_276\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5265:5324   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4807:5330   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5335:5723   */\n    tag_79:\n        /* \"#utility.yul\":5403:5409   */\n      0x00\n        /* \"#utility.yul\":5411:5417   */\n      dup1\n        /* \"#utility.yul\":5464:5466   */\n      0x40\n        /* \"#utility.yul\":5452:5461   */\n      dup4\n        /* \"#utility.yul\":5443:5450   */\n      dup6\n        /* \"#utility.yul\":5439:5462   */\n      sub\n        /* \"#utility.yul\":5435:5467   */\n      slt\n        /* \"#utility.yul\":5432:5484   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":5480:5481   */\n      0x00\n        /* \"#utility.yul\":5477:5478   */\n      dup1\n        /* \"#utility.yul\":5470:5482   */\n      revert\n        /* \"#utility.yul\":5432:5484   */\n    tag_326:\n        /* \"#utility.yul\":5519:5528   */\n      dup3\n        /* \"#utility.yul\":5506:5529   */\n      calldataload\n        /* \"#utility.yul\":5538:5569   */\n      tag_327\n        /* \"#utility.yul\":5563:5568   */\n      dup2\n        /* \"#utility.yul\":5538:5569   */\n      tag_274\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":5588:5593   */\n      swap2\n      pop\n        /* \"#utility.yul\":5645:5647   */\n      0x20\n        /* \"#utility.yul\":5630:5648   */\n      dup4\n      add\n        /* \"#utility.yul\":5617:5649   */\n      calldataload\n        /* \"#utility.yul\":5658:5691   */\n      tag_328\n        /* \"#utility.yul\":5617:5649   */\n      dup2\n        /* \"#utility.yul\":5658:5691   */\n      tag_274\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5710:5717   */\n      dup1\n        /* \"#utility.yul\":5700:5717   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5335:5723   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5728:6471   */\n    tag_91:\n        /* \"#utility.yul\":5832:5838   */\n      0x00\n        /* \"#utility.yul\":5840:5846   */\n      dup1\n        /* \"#utility.yul\":5848:5854   */\n      0x00\n        /* \"#utility.yul\":5856:5862   */\n      dup1\n        /* \"#utility.yul\":5909:5912   */\n      0x80\n        /* \"#utility.yul\":5897:5906   */\n      dup6\n        /* \"#utility.yul\":5888:5895   */\n      dup8\n        /* \"#utility.yul\":5884:5907   */\n      sub\n        /* \"#utility.yul\":5880:5913   */\n      slt\n        /* \"#utility.yul\":5877:5930   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":5926:5927   */\n      0x00\n        /* \"#utility.yul\":5923:5924   */\n      dup1\n        /* \"#utility.yul\":5916:5928   */\n      revert\n        /* \"#utility.yul\":5877:5930   */\n    tag_330:\n        /* \"#utility.yul\":5965:5974   */\n      dup5\n        /* \"#utility.yul\":5952:5975   */\n      calldataload\n        /* \"#utility.yul\":5984:6015   */\n      tag_331\n        /* \"#utility.yul\":6009:6014   */\n      dup2\n        /* \"#utility.yul\":5984:6015   */\n      tag_274\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":6034:6039   */\n      swap4\n      pop\n        /* \"#utility.yul\":6086:6088   */\n      0x20\n        /* \"#utility.yul\":6071:6089   */\n      dup6\n      add\n        /* \"#utility.yul\":6058:6090   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":6141:6143   */\n      0x40\n        /* \"#utility.yul\":6126:6144   */\n      dup6\n      add\n        /* \"#utility.yul\":6113:6145   */\n      calldataload\n        /* \"#utility.yul\":6164:6182   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6194:6208   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6191:6225   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":6221:6222   */\n      0x00\n        /* \"#utility.yul\":6218:6219   */\n      dup1\n        /* \"#utility.yul\":6211:6223   */\n      revert\n        /* \"#utility.yul\":6191:6225   */\n    tag_332:\n        /* \"#utility.yul\":6244:6293   */\n      tag_333\n        /* \"#utility.yul\":6285:6292   */\n      dup9\n        /* \"#utility.yul\":6276:6282   */\n      dup4\n        /* \"#utility.yul\":6265:6274   */\n      dup10\n        /* \"#utility.yul\":6261:6283   */\n      add\n        /* \"#utility.yul\":6244:6293   */\n      tag_276\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6234:6293   */\n      swap4\n      pop\n        /* \"#utility.yul\":6346:6348   */\n      0x60\n        /* \"#utility.yul\":6335:6344   */\n      dup8\n        /* \"#utility.yul\":6331:6349   */\n      add\n        /* \"#utility.yul\":6318:6350   */\n      calldataload\n        /* \"#utility.yul\":6302:6350   */\n      swap2\n      pop\n        /* \"#utility.yul\":6375:6377   */\n      dup1\n        /* \"#utility.yul\":6365:6373   */\n      dup3\n        /* \"#utility.yul\":6362:6378   */\n      gt\n        /* \"#utility.yul\":6359:6395   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":6391:6392   */\n      0x00\n        /* \"#utility.yul\":6388:6389   */\n      dup1\n        /* \"#utility.yul\":6381:6393   */\n      revert\n        /* \"#utility.yul\":6359:6395   */\n    tag_334:\n      pop\n        /* \"#utility.yul\":6414:6465   */\n      tag_335\n        /* \"#utility.yul\":6457:6464   */\n      dup8\n        /* \"#utility.yul\":6446:6454   */\n      dup3\n        /* \"#utility.yul\":6435:6444   */\n      dup9\n        /* \"#utility.yul\":6431:6455   */\n      add\n        /* \"#utility.yul\":6414:6465   */\n      tag_276\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6404:6465   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5728:6471   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6476:6864   */\n    tag_95:\n        /* \"#utility.yul\":6553:6559   */\n      0x00\n        /* \"#utility.yul\":6561:6567   */\n      dup1\n        /* \"#utility.yul\":6614:6616   */\n      0x40\n        /* \"#utility.yul\":6602:6611   */\n      dup4\n        /* \"#utility.yul\":6593:6600   */\n      dup6\n        /* \"#utility.yul\":6589:6612   */\n      sub\n        /* \"#utility.yul\":6585:6617   */\n      slt\n        /* \"#utility.yul\":6582:6634   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":6630:6631   */\n      0x00\n        /* \"#utility.yul\":6627:6628   */\n      dup1\n        /* \"#utility.yul\":6620:6632   */\n      revert\n        /* \"#utility.yul\":6582:6634   */\n    tag_337:\n        /* \"#utility.yul\":6666:6675   */\n      dup3\n        /* \"#utility.yul\":6653:6676   */\n      calldataload\n        /* \"#utility.yul\":6643:6676   */\n      swap2\n      pop\n        /* \"#utility.yul\":6727:6729   */\n      0x20\n        /* \"#utility.yul\":6716:6725   */\n      dup4\n        /* \"#utility.yul\":6712:6730   */\n      add\n        /* \"#utility.yul\":6699:6731   */\n      calldataload\n        /* \"#utility.yul\":6754:6772   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6746:6752   */\n      dup2\n        /* \"#utility.yul\":6743:6773   */\n      gt\n        /* \"#utility.yul\":6740:6790   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":6786:6787   */\n      0x00\n        /* \"#utility.yul\":6783:6784   */\n      dup1\n        /* \"#utility.yul\":6776:6788   */\n      revert\n        /* \"#utility.yul\":6740:6790   */\n    tag_338:\n        /* \"#utility.yul\":6809:6858   */\n      tag_339\n        /* \"#utility.yul\":6850:6857   */\n      dup6\n        /* \"#utility.yul\":6841:6847   */\n      dup3\n        /* \"#utility.yul\":6830:6839   */\n      dup7\n        /* \"#utility.yul\":6826:6848   */\n      add\n        /* \"#utility.yul\":6809:6858   */\n      tag_276\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6799:6858   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6476:6864   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6869:7249   */\n    tag_102:\n        /* \"#utility.yul\":6948:6949   */\n      0x01\n        /* \"#utility.yul\":6944:6956   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6991:7003   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7012:7073   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":7066:7070   */\n      0x7f\n        /* \"#utility.yul\":7058:7064   */\n      dup3\n        /* \"#utility.yul\":7054:7071   */\n      and\n        /* \"#utility.yul\":7044:7071   */\n      swap2\n      pop\n        /* \"#utility.yul\":7012:7073   */\n    tag_341:\n        /* \"#utility.yul\":7119:7121   */\n      0x20\n        /* \"#utility.yul\":7111:7117   */\n      dup3\n        /* \"#utility.yul\":7108:7122   */\n      lt\n        /* \"#utility.yul\":7088:7106   */\n      dup2\n        /* \"#utility.yul\":7085:7123   */\n      sub\n        /* \"#utility.yul\":7082:7243   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":7165:7175   */\n      0x4e487b71\n        /* \"#utility.yul\":7160:7163   */\n      0xe0\n        /* \"#utility.yul\":7156:7176   */\n      shl\n        /* \"#utility.yul\":7153:7154   */\n      0x00\n        /* \"#utility.yul\":7146:7177   */\n      mstore\n        /* \"#utility.yul\":7200:7204   */\n      0x22\n        /* \"#utility.yul\":7197:7198   */\n      0x04\n        /* \"#utility.yul\":7190:7205   */\n      mstore\n        /* \"#utility.yul\":7228:7232   */\n      0x24\n        /* \"#utility.yul\":7225:7226   */\n      0x00\n        /* \"#utility.yul\":7218:7233   */\n      revert\n        /* \"#utility.yul\":7082:7243   */\n    tag_342:\n      pop\n        /* \"#utility.yul\":6869:7249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7254:7654   */\n    tag_116:\n        /* \"#utility.yul\":7456:7458   */\n      0x20\n        /* \"#utility.yul\":7438:7459   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7495:7497   */\n      0x24\n        /* \"#utility.yul\":7475:7493   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7468:7498   */\n      mstore\n        /* \"#utility.yul\":7534:7568   */\n      0x4552433737373a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":7529:7531   */\n      0x40\n        /* \"#utility.yul\":7514:7532   */\n      dup3\n      add\n        /* \"#utility.yul\":7507:7569   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":7600:7602   */\n      0x60\n        /* \"#utility.yul\":7585:7603   */\n      dup3\n      add\n        /* \"#utility.yul\":7578:7612   */\n      mstore\n        /* \"#utility.yul\":7644:7647   */\n      0x80\n        /* \"#utility.yul\":7629:7648   */\n      add\n      swap1\n        /* \"#utility.yul\":7254:7654   */\n      jump\t// out\n        /* \"#utility.yul\":8476:8603   */\n    tag_277:\n        /* \"#utility.yul\":8537:8547   */\n      0x4e487b71\n        /* \"#utility.yul\":8532:8535   */\n      0xe0\n        /* \"#utility.yul\":8528:8548   */\n      shl\n        /* \"#utility.yul\":8525:8526   */\n      0x00\n        /* \"#utility.yul\":8518:8549   */\n      mstore\n        /* \"#utility.yul\":8568:8572   */\n      0x11\n        /* \"#utility.yul\":8565:8566   */\n      0x04\n        /* \"#utility.yul\":8558:8573   */\n      mstore\n        /* \"#utility.yul\":8592:8596   */\n      0x24\n        /* \"#utility.yul\":8589:8590   */\n      0x00\n        /* \"#utility.yul\":8582:8597   */\n      revert\n        /* \"#utility.yul\":8608:8736   */\n    tag_130:\n        /* \"#utility.yul\":8675:8684   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8696:8707   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8693:8730   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":8710:8728   */\n      tag_107\n      tag_277\n      jump\t// in\n        /* \"#utility.yul\":8741:9149   */\n    tag_140:\n        /* \"#utility.yul\":8943:8945   */\n      0x20\n        /* \"#utility.yul\":8925:8946   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8982:8984   */\n      0x2c\n        /* \"#utility.yul\":8962:8980   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8955:8985   */\n      mstore\n        /* \"#utility.yul\":9021:9055   */\n      0x4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f\n        /* \"#utility.yul\":9016:9018   */\n      0x40\n        /* \"#utility.yul\":9001:9019   */\n      dup3\n      add\n        /* \"#utility.yul\":8994:9056   */\n      mstore\n      shl(0xa1, 0x39103337b9103437b63232b9)\n        /* \"#utility.yul\":9087:9089   */\n      0x60\n        /* \"#utility.yul\":9072:9090   */\n      dup3\n      add\n        /* \"#utility.yul\":9065:9107   */\n      mstore\n        /* \"#utility.yul\":9139:9142   */\n      0x80\n        /* \"#utility.yul\":9124:9143   */\n      add\n      swap1\n        /* \"#utility.yul\":8741:9149   */\n      jump\t// out\n        /* \"#utility.yul\":11050:11301   */\n    tag_210:\n        /* \"#utility.yul\":11120:11126   */\n      0x00\n        /* \"#utility.yul\":11173:11175   */\n      0x20\n        /* \"#utility.yul\":11161:11170   */\n      dup3\n        /* \"#utility.yul\":11152:11159   */\n      dup5\n        /* \"#utility.yul\":11148:11171   */\n      sub\n        /* \"#utility.yul\":11144:11176   */\n      slt\n        /* \"#utility.yul\":11141:11193   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":11189:11190   */\n      0x00\n        /* \"#utility.yul\":11186:11187   */\n      dup1\n        /* \"#utility.yul\":11179:11191   */\n      revert\n        /* \"#utility.yul\":11141:11193   */\n    tag_357:\n        /* \"#utility.yul\":11221:11230   */\n      dup2\n        /* \"#utility.yul\":11215:11231   */\n      mload\n        /* \"#utility.yul\":11240:11271   */\n      tag_173\n        /* \"#utility.yul\":11265:11270   */\n      dup2\n        /* \"#utility.yul\":11240:11271   */\n      tag_274\n      jump\t// in\n        /* \"#utility.yul\":11306:12038   */\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11649:11664   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":11631:11665   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11701:11716   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":11696:11698   */\n      0x20\n        /* \"#utility.yul\":11681:11699   */\n      dup4\n      add\n        /* \"#utility.yul\":11674:11717   */\n      mstore\n        /* \"#utility.yul\":11753:11768   */\n      dup6\n      and\n        /* \"#utility.yul\":11748:11750   */\n      0x40\n        /* \"#utility.yul\":11733:11751   */\n      dup3\n      add\n        /* \"#utility.yul\":11726:11769   */\n      mstore\n        /* \"#utility.yul\":11800:11802   */\n      0x60\n        /* \"#utility.yul\":11785:11803   */\n      dup2\n      add\n        /* \"#utility.yul\":11778:11812   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":11849:11852   */\n      0xc0\n        /* \"#utility.yul\":11843:11846   */\n      0x80\n        /* \"#utility.yul\":11828:11847   */\n      dup3\n      add\n        /* \"#utility.yul\":11821:11853   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11574:11578   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11876:11922   */\n      tag_360\n      swap1\n        /* \"#utility.yul\":11902:11921   */\n      dup4\n      add\n        /* \"#utility.yul\":11894:11900   */\n      dup6\n        /* \"#utility.yul\":11876:11922   */\n      tag_273\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":11971:11980   */\n      dup3\n        /* \"#utility.yul\":11963:11969   */\n      dup2\n        /* \"#utility.yul\":11959:11981   */\n      sub\n        /* \"#utility.yul\":11953:11956   */\n      0xa0\n        /* \"#utility.yul\":11942:11951   */\n      dup5\n        /* \"#utility.yul\":11938:11957   */\n      add\n        /* \"#utility.yul\":11931:11982   */\n      mstore\n        /* \"#utility.yul\":11999:12032   */\n      tag_361\n        /* \"#utility.yul\":12025:12031   */\n      dup2\n        /* \"#utility.yul\":12017:12023   */\n      dup6\n        /* \"#utility.yul\":11999:12032   */\n      tag_273\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":11991:12032   */\n      swap10\n        /* \"#utility.yul\":11306:12038   */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12451:12576   */\n    tag_225:\n        /* \"#utility.yul\":12516:12525   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12537:12547   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12534:12570   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":12550:12568   */\n      tag_107\n      tag_277\n      jump\t// in\n        /* \"#utility.yul\":12581:13031   */\n    tag_227:\n        /* \"#utility.yul\":12802:12808   */\n      dup4\n        /* \"#utility.yul\":12791:12800   */\n      dup2\n        /* \"#utility.yul\":12784:12809   */\n      mstore\n        /* \"#utility.yul\":12845:12847   */\n      0x60\n        /* \"#utility.yul\":12840:12842   */\n      0x20\n        /* \"#utility.yul\":12829:12838   */\n      dup3\n        /* \"#utility.yul\":12825:12843   */\n      add\n        /* \"#utility.yul\":12818:12848   */\n      mstore\n        /* \"#utility.yul\":12765:12769   */\n      0x00\n        /* \"#utility.yul\":12871:12916   */\n      tag_367\n        /* \"#utility.yul\":12912:12914   */\n      0x60\n        /* \"#utility.yul\":12901:12910   */\n      dup4\n        /* \"#utility.yul\":12897:12915   */\n      add\n        /* \"#utility.yul\":12889:12895   */\n      dup6\n        /* \"#utility.yul\":12871:12916   */\n      tag_273\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":12964:12973   */\n      dup3\n        /* \"#utility.yul\":12956:12962   */\n      dup2\n        /* \"#utility.yul\":12952:12974   */\n      sub\n        /* \"#utility.yul\":12947:12949   */\n      0x40\n        /* \"#utility.yul\":12936:12945   */\n      dup5\n        /* \"#utility.yul\":12932:12950   */\n      add\n        /* \"#utility.yul\":12925:12975   */\n      mstore\n        /* \"#utility.yul\":12992:13025   */\n      tag_368\n        /* \"#utility.yul\":13018:13024   */\n      dup2\n        /* \"#utility.yul\":13010:13016   */\n      dup6\n        /* \"#utility.yul\":12992:13025   */\n      tag_273\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":12984:13025   */\n      swap7\n        /* \"#utility.yul\":12581:13031   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209269d2ab00a61e3dce882c580b024fcfde8035f3a20c6c206d5e62432193465b64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_227": {
									"entryPoint": null,
									"id": 227,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 1488,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5949:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "191:230:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "201:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "217:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "211:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "201:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "229:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "251:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "267:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "273:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "263:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "263:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "282:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "278:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "278:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "259:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "259:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "233:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "362:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "364:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "364:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "364:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "305:10:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "325:2:9",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "329:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "321:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "321:10:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "333:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "317:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "317:18:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "302:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "341:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "353:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "338:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "338:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "299:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:62:9"
															},
															"nodeType": "YulIf",
															"src": "296:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "400:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "404:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "393:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "393:22:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "171:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "180:6:9",
														"type": ""
													}
												],
												"src": "146:275:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "490:586:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "539:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "551:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "541:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "541:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "541:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "518:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "526:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "514:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "514:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "533:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "510:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "510:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "503:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:35:9"
															},
															"nodeType": "YulIf",
															"src": "500:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "564:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "580:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "574:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "574:13:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "568:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "626:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "628:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "628:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "628:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "602:2:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "614:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "618:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "610:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "610:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "606:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "599:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:26:9"
															},
															"nodeType": "YulIf",
															"src": "596:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "657:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "667:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "661:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "680:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "723:2:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:4:9",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "719:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "719:13:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "738:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "734:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "734:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "715:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "715:27:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "744:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "711:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "711:36:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "695:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:53:9"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "684:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "764:7:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "773:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "757:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "757:19:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "822:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "831:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "834:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "799:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "807:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "795:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "795:15:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "812:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "791:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "791:24:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "817:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "788:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:33:9"
															},
															"nodeType": "YulIf",
															"src": "785:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "847:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "856:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "851:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "912:88:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "array_1",
																									"nodeType": "YulIdentifier",
																									"src": "941:7:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "950:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "937:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:15:9"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "954:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "933:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "933:24:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "973:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "981:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "969:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "969:14:9"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "985:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "965:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "965:23:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "959:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "959:30:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "926:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "926:64:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "926:64:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "877:1:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "880:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "874:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "884:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "886:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "895:1:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "898:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "891:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "891:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "886:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "870:3:9",
																"statements": []
															},
															"src": "866:134:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "1024:7:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1033:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1020:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1020:16:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1038:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1016:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:25:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1043:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1009:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1009:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1009:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1054:16:9",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "1063:7:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1054:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "464:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "472:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "480:5:9",
														"type": ""
													}
												],
												"src": "426:650:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1241:1368:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1287:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1296:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1299:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1289:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1289:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1289:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1262:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1271:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1258:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1258:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1283:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1254:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:32:9"
															},
															"nodeType": "YulIf",
															"src": "1251:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1312:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1332:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1326:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:16:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1316:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1351:28:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1369:2:9",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1373:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1365:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1365:10:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1377:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1361:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1361:18:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1355:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1406:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1415:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1418:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1408:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1408:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1408:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1394:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1402:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1391:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:14:9"
															},
															"nodeType": "YulIf",
															"src": "1388:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1431:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1474:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1485:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1470:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1470:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1494:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1441:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1441:61:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1431:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1511:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1521:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1515:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1532:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1569:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1554:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1554:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1548:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1548:25:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1536:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1602:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1611:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1614:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1604:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1604:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1604:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1588:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1598:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1585:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:16:9"
															},
															"nodeType": "YulIf",
															"src": "1582:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1627:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1670:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1681:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1666:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1666:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1692:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1637:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1637:63:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1709:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1735:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1746:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1731:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1731:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1725:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:25:9"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "1713:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1779:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1788:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1791:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1781:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1781:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1781:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "1765:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1775:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1762:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:16:9"
															},
															"nodeType": "YulIf",
															"src": "1759:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1804:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1818:9:9"
																	},
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "1829:8:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1814:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1814:24:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1808:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1895:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1898:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1888:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1888:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1888:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1865:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1869:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1861:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1861:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1876:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1857:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1857:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1850:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1850:35:9"
															},
															"nodeType": "YulIf",
															"src": "1847:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1911:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1927:2:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1921:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1921:9:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1915:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1953:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1955:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1955:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1955:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1945:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1949:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1942:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:10:9"
															},
															"nodeType": "YulIf",
															"src": "1939:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1984:20:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1998:1:9",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2001:2:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1994:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1994:10:9"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "1988:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2013:39:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "2044:2:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2048:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2040:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2040:11:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2024:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2024:28:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2017:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2061:16:9",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "2074:3:9"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "2065:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2093:3:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2098:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2086:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2086:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2086:15:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2110:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2121:3:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2126:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2117:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2117:12:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2110:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2138:34:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2160:2:9"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "2164:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2156:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:11:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2169:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2152:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2152:20:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2142:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2204:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2216:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2206:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2206:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2206:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2187:6:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2195:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2184:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2184:19:9"
															},
															"nodeType": "YulIf",
															"src": "2181:39:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2229:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2244:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2248:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:11:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "2233:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2316:263:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2330:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2349:3:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2343:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2343:10:9"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "2334:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2432:74:9",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "2450:11:9",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2460:1:9",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_6",
																							"nodeType": "YulTypedName",
																							"src": "2454:2:9",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_6",
																								"nodeType": "YulIdentifier",
																								"src": "2485:2:9"
																							},
																							{
																								"name": "_6",
																								"nodeType": "YulIdentifier",
																								"src": "2489:2:9"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "2478:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2478:14:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2478:14:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "2379:5:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2390:5:9"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "2405:3:9",
																													"type": "",
																													"value": "160"
																												},
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "2410:1:9",
																													"type": "",
																													"value": "1"
																												}
																											],
																											"functionName": {
																												"name": "shl",
																												"nodeType": "YulIdentifier",
																												"src": "2401:3:9"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "2401:11:9"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:9",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "2397:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2397:19:9"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "2386:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2386:31:9"
																						}
																					],
																					"functionName": {
																						"name": "eq",
																						"nodeType": "YulIdentifier",
																						"src": "2376:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2376:42:9"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "2369:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2369:50:9"
																		},
																		"nodeType": "YulIf",
																		"src": "2366:140:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2526:3:9"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "2531:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2519:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2519:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2519:18:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2550:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2561:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2566:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2557:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2557:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2550:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2271:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2276:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2268:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2268:15:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2284:23:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2286:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2297:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2302:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2293:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2293:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2286:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2264:3:9",
																"statements": []
															},
															"src": "2260:319:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2588:15:9",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "2598:5:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2588:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1191:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1202:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1214:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1222:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1230:6:9",
														"type": ""
													}
												],
												"src": "1081:1528:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2669:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2679:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2693:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2696:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2689:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2689:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2710:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2740:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2746:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2736:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2736:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2714:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2787:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2789:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2803:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2811:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2799:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2799:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2789:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2767:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2760:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2760:26:9"
															},
															"nodeType": "YulIf",
															"src": "2757:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2877:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2898:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2905:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2910:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2901:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2901:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2891:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2891:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2891:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2945:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2935:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2935:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2935:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2970:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2973:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2963:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2963:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2963:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2833:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2856:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2864:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2853:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2853:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2830:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:38:9"
															},
															"nodeType": "YulIf",
															"src": "2827:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2649:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2658:6:9",
														"type": ""
													}
												],
												"src": "2614:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3055:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3072:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3075:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:14:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3065:14:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3088:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3106:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3109:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3096:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3096:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3088:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3038:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3046:4:9",
														"type": ""
													}
												],
												"src": "2999:121:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3206:464:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3239:425:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3253:11:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3263:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "3257:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3284:2:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "3288:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3277:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3277:17:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3277:17:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3307:31:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3329:2:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3333:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "3319:9:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3319:19:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "3311:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3351:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "3374:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3384:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "3391:10:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3403:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3387:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3387:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "3380:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3380:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3370:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3370:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "3355:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3445:23:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3447:19:9",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "3462:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3447:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3427:10:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3439:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3424:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3424:20:9"
																		},
																		"nodeType": "YulIf",
																		"src": "3421:47:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3481:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "3495:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3505:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3512:3:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3517:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3508:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3508:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "3501:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3501:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3491:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3491:31:9"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "3485:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3535:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "3548:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "3539:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3633:21:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "3642:5:9"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3649:2:9"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "3635:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3635:17:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3635:17:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3583:5:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3590:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3580:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3580:13:9"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "3594:26:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3596:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "3609:5:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3616:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3605:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3605:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "3596:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "3576:3:9",
																			"statements": []
																		},
																		"src": "3572:82:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3222:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3219:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:11:9"
															},
															"nodeType": "YulIf",
															"src": "3216:448:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3178:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3185:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "3190:10:9",
														"type": ""
													}
												],
												"src": "3125:545:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3760:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3770:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "3785:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3803:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "3806:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "3799:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3799:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3816:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "3812:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3812:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "3795:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3795:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3791:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3791:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3781:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3781:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3827:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3830:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3823:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3778:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3770:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3737:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3743:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3751:4:9",
														"type": ""
													}
												],
												"src": "3675:166:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3942:1256:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3952:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3972:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3966:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3966:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3956:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4019:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4021:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4021:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4021:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3991:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4007:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4011:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4003:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3988:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3988:30:9"
															},
															"nodeType": "YulIf",
															"src": "3985:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4094:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "4132:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "4126:5:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4126:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "4100:25:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4100:38:9"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4140:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4050:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4050:97:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4050:97:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4156:18:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4173:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4160:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4183:23:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4202:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "4187:11:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4215:24:9",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "4228:11:9"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4215:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4285:656:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4299:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4318:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4330:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4326:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4326:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4314:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4314:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4303:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4347:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4391:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4361:29:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4361:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4351:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4409:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4418:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4413:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4496:172:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4521:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4539:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4544:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4535:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4535:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4529:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4529:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4514:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4514:42:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4514:42:9"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4573:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4587:6:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4595:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4583:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4583:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4573:6:9"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4614:40:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4631:9:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "4642:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4627:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4627:27:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4614:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4443:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4446:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4440:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4440:14:9"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4455:28:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4457:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4466:1:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "4469:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4462:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4462:19:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4457:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4436:3:9",
																					"statements": []
																				},
																				"src": "4432:236:9"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4716:166:9",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4734:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4761:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4766:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4757:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4757:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4751:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4751:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4738:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4801:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4813:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "4840:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "4843:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "4836:3:9"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "4836:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4852:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "4832:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4832:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4862:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "4858:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4858:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "4828:3:9"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "4828:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "4824:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4824:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4794:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4794:74:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4794:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4687:7:9"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4696:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4684:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4684:19:9"
																				},
																				"nodeType": "YulIf",
																				"src": "4681:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4902:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4916:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4919:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4912:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4912:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4928:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4908:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4908:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4895:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4895:36:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4895:36:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4278:663:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4283:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4958:234:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4972:14:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4985:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "4976:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5021:67:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5039:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5058:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5063:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5054:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5054:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5048:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5048:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5039:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5002:6:9"
																				},
																				"nodeType": "YulIf",
																				"src": "4999:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5108:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5167:5:9"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5174:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5114:52:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5114:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5101:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5101:81:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5101:81:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4950:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4258:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4266:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4255:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4255:14:9"
															},
															"nodeType": "YulSwitch",
															"src": "4248:944:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3927:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3933:3:9",
														"type": ""
													}
												],
												"src": "3846:1352:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5235:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5252:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5259:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5264:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5255:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5255:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5245:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5245:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5245:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5292:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5295:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5285:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5285:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5285:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5316:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5319:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5309:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5309:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5203:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5382:185:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5421:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5442:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5449:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5454:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5445:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5445:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5435:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5435:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5435:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5486:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5489:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5479:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5479:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5479:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5514:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5517:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5507:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5507:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5507:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5398:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5409:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5405:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5405:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5395:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5395:17:9"
															},
															"nodeType": "YulIf",
															"src": "5392:140:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5541:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5552:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5559:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5548:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5548:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5541:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5364:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5374:3:9",
														"type": ""
													}
												],
												"src": "5335:232:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5729:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5739:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5751:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5762:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5747:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5747:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5739:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5774:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5792:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5797:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5788:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5788:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5801:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5784:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5784:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5778:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5819:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5834:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5842:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5830:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5830:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5812:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5812:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5812:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5866:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5877:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5862:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5862:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5882:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5855:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5855:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5855:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5909:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5920:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5905:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5905:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "5929:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5937:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5925:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5925:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5898:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5898:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5898:43:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5682:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5693:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5701:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5709:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5720:4:9",
														"type": ""
													}
												],
												"src": "5572:375:9"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let _2 := 0x20\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _2) }\n        {\n            mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n        }\n        mstore(add(add(array_1, _1), _2), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let _2 := 32\n        let offset_1 := mload(add(headStart, _2))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_2)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _1) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _2))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _2)\n        let srcEnd := add(add(_3, _5), _2)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := mload(src)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n            {\n                let _6 := 0\n                revert(_6, _6)\n            }\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        value2 := dst_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001dd038038062001dd083398101604081905262000034916200035e565b600262000042848262000504565b50600362000051838262000504565b5080516200006790600490602084019062000207565b5060005b8151811015620000d757600160056000848481518110620000905762000090620005d0565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000ce81620005e6565b9150506200006b565b506040516329965a1d60e01b815230600482018190527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce217705460248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90606401600060405180830381600087803b1580156200015257600080fd5b505af115801562000167573d6000803e3d6000fd5b50506040516329965a1d60e01b815230600482018190527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a60248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d9150606401600060405180830381600087803b158015620001e557600080fd5b505af1158015620001fa573d6000803e3d6000fd5b505050505050506200060e565b8280548282559060005260206000209081019282156200025f579160200282015b828111156200025f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000228565b506200026d92915062000271565b5090565b5b808211156200026d576000815560010162000272565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620002c957620002c962000288565b604052919050565b600082601f830112620002e357600080fd5b81516001600160401b03811115620002ff57620002ff62000288565b602062000315601f8301601f191682016200029e565b82815285828487010111156200032a57600080fd5b60005b838110156200034a5785810183015182820184015282016200032d565b506000928101909101919091529392505050565b6000806000606084860312156200037457600080fd5b83516001600160401b03808211156200038c57600080fd5b6200039a87838801620002d1565b9450602091508186015181811115620003b257600080fd5b620003c088828901620002d1565b945050604086015181811115620003d657600080fd5b8601601f81018813620003e857600080fd5b805182811115620003fd57620003fd62000288565b8060051b9250620004108484016200029e565b818152928201840192848101908a8511156200042b57600080fd5b928501925b848410156200046557835192506001600160a01b0383168314620004545760008081fd5b828252928501929085019062000430565b8096505050505050509250925092565b600181811c908216806200048a57607f821691505b602082108103620004ab57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004ff57600081815260208120601f850160051c81016020861015620004da5750805b601f850160051c820191505b81811015620004fb57828155600101620004e6565b5050505b505050565b81516001600160401b0381111562000520576200052062000288565b620005388162000531845462000475565b84620004b1565b602080601f831160018114620005705760008415620005575750858301515b600019600386901b1c1916600185901b178555620004fb565b600085815260208120601f198616915b82811015620005a15788860151825594840194600190910190840162000580565b5085821015620005c05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6000600182016200060757634e487b7160e01b600052601160045260246000fd5b5060010190565b6117b2806200061e6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b63711461022b578063dd62ed3e1461023e578063fad8b32a14610277578063fc673c4f1461028a578063fe9d93031461029d57600080fd5b8063959b8c3f146101ea57806395d89b41146101fd5780639bd9bbc614610205578063a9059cbb1461021857600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce56714610196578063556f0dc7146101a557806362ad1b83146101ac57806370a08231146101c157600080fd5b806306e485381461011b57806306fdde0314610139578063095ea7b31461014e57806318160ddd14610171575b600080fd5b6101236102b0565b60405161013091906111f3565b60405180910390f35b610141610312565b6040516101309190611286565b61016161015c3660046112b1565b61039b565b6040519015158152602001610130565b6001545b604051908152602001610130565b6101616101913660046112dd565b6103b5565b60405160128152602001610130565b6001610175565b6101bf6101ba3660046113c1565b61057e565b005b6101756101cf366004611454565b6001600160a01b031660009081526020819052604090205490565b6101bf6101f8366004611454565b6105ba565b6101416106d7565b6101bf610213366004611471565b6106e6565b6101616102263660046112b1565b610709565b6101616102393660046114ca565b6107bc565b61017561024c3660046114ca565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101bf610285366004611454565b61085e565b6101bf610298366004611503565b610979565b6101bf6102ab366004611583565b6109b1565b6060600480548060200260200160405190810160405280929190818152602001828054801561030857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ea575b5050505050905090565b606060028054610321906115ca565b80601f016020809104026020016040519081016040528092919081815260200182805461034d906115ca565b80156103085780601f1061036f57610100808354040283529160200191610308565b820191906000526020600020905b81548152906001019060200180831161037d57509395945050505050565b6000336103a98185856109d0565b60019150505b92915050565b60006001600160a01b0383166103e65760405162461bcd60e51b81526004016103dd90611604565b60405180910390fd5b6001600160a01b03841661044b5760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016103dd565b600033905061047c818686866040518060200160405280600081525060405180602001604052806000815250610af7565b6104a8818686866040518060200160405280600081525060405180602001604052806000815250610c1f565b6001600160a01b03808616600090815260086020908152604080832093851683529290522054838110156105305760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084016103dd565b610544868361053f878561165e565b6109d0565b6105728287878760405180602001604052806000815250604051806020016040528060008152506000610d8e565b50600195945050505050565b61058833866107bc565b6105a45760405162461bcd60e51b81526004016103dd90611671565b6105b385858585856001610f53565b5050505050565b6001600160a01b038116330361061e5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b60648201526084016103dd565b6001600160a01b03811660009081526005602052604090205460ff161561066f573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561069e565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b606060038054610321906115ca565b61070433848484604051806020016040528060008152506001610f53565b505050565b60006001600160a01b0383166107315760405162461bcd60e51b81526004016103dd90611604565b6000339050610762818286866040518060200160405280600081525060405180602001604052806000815250610af7565b61078e818286866040518060200160405280600081525060405180602001604052806000815250610c1f565b6103a98182868660405180602001604052806000815250604051806020016040528060008152506000610d8e565b6000816001600160a01b0316836001600160a01b0316148061082757506001600160a01b03831660009081526005602052604090205460ff16801561082757506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061085757506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b336001600160a01b038216036108c05760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b60648201526084016103dd565b6001600160a01b03811660009081526005602052604090205460ff1615610914573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610940565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61098333856107bc565b61099f5760405162461bcd60e51b81526004016103dd90611671565b6109ab84848484611036565b50505050565b6109cc33838360405180602001604052806000815250611036565b5050565b6001600160a01b038316610a345760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dd565b6001600160a01b038216610a965760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dd565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9c91906116bd565b90506001600160a01b03811615610c1657604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610be3908a908a908a908a908a908a906004016116da565b600060405180830381600087803b158015610bfd57600080fd5b505af1158015610c11573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610c985760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b60648201526084016103dd565b610ca2848261165e565b6001600160a01b038088166000908152602081905260408082209390935590871681529081208054869290610cd8908490611734565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610d3093929190611747565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610d7d91815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610e0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3391906116bd565b90506001600160a01b03811615610eaf576040516223de2960e01b81526001600160a01b038216906223de2990610e78908b908b908b908b908b908b906004016116da565b600060405180830381600087803b158015610e9257600080fd5b505af1158015610ea6573d6000803e3d6000fd5b50505050610f49565b8115610f49576001600160a01b0386163b15610f495760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a4016103dd565b5050505050505050565b6001600160a01b038616610fb45760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b03851661100a5760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f206164647265737360448201526064016103dd565b33611019818888888888610af7565b611027818888888888610c1f565b610c1681888888888888610d8e565b6001600160a01b0384166110975760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b336110a781866000878787610af7565b6001600160a01b0385166000908152602081905260409020548481101561111c5760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016103dd565b611126858261165e565b6001600160a01b0387166000908152602081905260408120919091556001805487929061115490849061165e565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a40988787876040516111a293929190611747565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b6020808252825182820181905260009190848201906040850190845b818110156112345783516001600160a01b03168352928401929184019160010161120f565b50909695505050505050565b6000815180845260005b818110156112665760208185018101518683018201520161124a565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006108576020830184611240565b6001600160a01b03811681146112ae57600080fd5b50565b600080604083850312156112c457600080fd5b82356112cf81611299565b946020939093013593505050565b6000806000606084860312156112f257600080fd5b83356112fd81611299565b9250602084013561130d81611299565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261134557600080fd5b813567ffffffffffffffff808211156113605761136061131e565b604051601f8301601f19908116603f011681019082821181831017156113885761138861131e565b816040528381528660208588010111156113a157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156113d957600080fd5b85356113e481611299565b945060208601356113f481611299565b935060408601359250606086013567ffffffffffffffff8082111561141857600080fd5b61142489838a01611334565b9350608088013591508082111561143a57600080fd5b5061144788828901611334565b9150509295509295909350565b60006020828403121561146657600080fd5b813561085781611299565b60008060006060848603121561148657600080fd5b833561149181611299565b925060208401359150604084013567ffffffffffffffff8111156114b457600080fd5b6114c086828701611334565b9150509250925092565b600080604083850312156114dd57600080fd5b82356114e881611299565b915060208301356114f881611299565b809150509250929050565b6000806000806080858703121561151957600080fd5b843561152481611299565b935060208501359250604085013567ffffffffffffffff8082111561154857600080fd5b61155488838901611334565b9350606087013591508082111561156a57600080fd5b5061157787828801611334565b91505092959194509250565b6000806040838503121561159657600080fd5b82359150602083013567ffffffffffffffff8111156115b457600080fd5b6115c085828601611334565b9150509250929050565b600181811c908216806115de57607f821691505b6020821081036115fe57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156103af576103af611648565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b6000602082840312156116cf57600080fd5b815161085781611299565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c06080820181905260009061171590830185611240565b82810360a08401526117278185611240565b9998505050505050505050565b808201808211156103af576103af611648565b8381526060602082015260006117606060830185611240565b82810360408401526117728185611240565b969550505050505056fea26469706673582212209269d2ab00a61e3dce882c580b024fcfde8035f3a20c6c206d5e62432193465b64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1DD0 CODESIZE SUB DUP1 PUSH3 0x1DD0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x35E JUMP JUMPDEST PUSH1 0x2 PUSH3 0x42 DUP5 DUP3 PUSH3 0x504 JUMP JUMPDEST POP PUSH1 0x3 PUSH3 0x51 DUP4 DUP3 PUSH3 0x504 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x67 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x207 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0xD7 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x90 JUMPI PUSH3 0x90 PUSH3 0x5D0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH3 0xCE DUP2 PUSH3 0x5E6 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x6B JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x29965A1D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0xAC7FBAB5F54A3CA8194167523C6753BFEB96A445279294B6125B68CCE2177054 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0x29965A1D SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x167 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x29965A1D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0xAEA199E31A596269B42CDAFD93407F14436DB6E4CAD65417994C2EB37381E05A PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP3 POP PUSH4 0x29965A1D SWAP2 POP PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP PUSH3 0x60E JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x25F JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x25F JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x228 JUMP JUMPDEST POP PUSH3 0x26D SWAP3 SWAP2 POP PUSH3 0x271 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x26D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x272 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x2C9 JUMPI PUSH3 0x2C9 PUSH3 0x288 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2FF JUMPI PUSH3 0x2FF PUSH3 0x288 JUMP JUMPDEST PUSH1 0x20 PUSH3 0x315 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH3 0x29E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP6 DUP3 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x34A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP3 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x32D JUMP JUMPDEST POP PUSH1 0x0 SWAP3 DUP2 ADD SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x39A DUP8 DUP4 DUP9 ADD PUSH3 0x2D1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 SWAP2 POP DUP2 DUP7 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3C0 DUP9 DUP3 DUP10 ADD PUSH3 0x2D1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH3 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD DUP3 DUP2 GT ISZERO PUSH3 0x3FD JUMPI PUSH3 0x3FD PUSH3 0x288 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP3 POP PUSH3 0x410 DUP5 DUP5 ADD PUSH3 0x29E JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP3 DUP3 ADD DUP5 ADD SWAP3 DUP5 DUP2 ADD SWAP1 DUP11 DUP6 GT ISZERO PUSH3 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP5 DUP5 LT ISZERO PUSH3 0x465 JUMPI DUP4 MLOAD SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 EQ PUSH3 0x454 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP3 DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH3 0x430 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x48A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4AB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4FF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x4DA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4FB JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4E6 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x520 JUMPI PUSH3 0x520 PUSH3 0x288 JUMP JUMPDEST PUSH3 0x538 DUP2 PUSH3 0x531 DUP5 SLOAD PUSH3 0x475 JUMP JUMPDEST DUP5 PUSH3 0x4B1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x570 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x557 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x4FB JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5A1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x580 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x5C0 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x607 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x17B2 DUP1 PUSH3 0x61E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x959B8C3F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD95B6371 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DD JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1454 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x141 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x175 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1454 JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1583 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x15CA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0x15CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x308 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x308 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37D JUMPI POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3A9 DUP2 DUP6 DUP6 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x47C DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x4A8 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x616C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x544 DUP7 DUP4 PUSH2 0x53F DUP8 DUP6 PUSH2 0x165E JUMP JUMPDEST PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x572 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD8E JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x588 CALLER DUP7 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x5B3 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0xF53 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x66F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x69E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x704 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0xF53 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x762 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x78E DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x3A9 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x827 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x827 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x857 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x914 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x940 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x983 CALLER DUP6 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x9AB DUP5 DUP5 DUP5 DUP5 PUSH2 0x1036 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9CC CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1036 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB9C SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xC16 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AD5CBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x75AB9782 SWAP1 PUSH2 0xBE3 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0xCA2 DUP5 DUP3 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xCD8 SWAP1 DUP5 SWAP1 PUSH2 0x1734 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD30 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0xD7D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE33 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xEAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x23DE29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH3 0x23DE29 SWAP1 PUSH2 0xE78 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xF49 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF49 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EXTCODESIZE ISZERO PUSH2 0xF49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x64 DUP3 ADD MSTORE PUSH13 0x1AD95B9CD49958DA5C1A595B9D PUSH1 0x9A SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x3DD JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0xFB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x100A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST CALLER PUSH2 0x1019 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x1027 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0xC16 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST CALLER PUSH2 0x10A7 DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x1126 DUP6 DUP3 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1154 SWAP1 DUP5 SWAP1 PUSH2 0x165E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1234 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x120F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1266 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x124A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x857 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12CF DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x12FD DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x130D DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1360 JUMPI PUSH2 0x1360 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1388 JUMPI PUSH2 0x1388 PUSH2 0x131E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x13E4 DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x13F4 DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1424 DUP10 DUP4 DUP11 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x143A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1447 DUP9 DUP3 DUP10 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x857 DUP2 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1491 DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C0 DUP7 DUP3 DUP8 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14E8 DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14F8 DUP2 PUSH2 0x1299 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1524 DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1554 DUP9 DUP4 DUP10 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x156A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1577 DUP8 DUP3 DUP9 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15C0 DUP6 DUP3 DUP7 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15DE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3AF JUMPI PUSH2 0x3AF PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x857 DUP2 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1715 SWAP1 DUP4 ADD DUP6 PUSH2 0x1240 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1727 DUP2 DUP6 PUSH2 0x1240 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3AF JUMPI PUSH2 0x3AF PUSH2 0x1648 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1760 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1240 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1772 DUP2 DUP6 PUSH2 0x1240 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH10 0xD2AB00A61E3DCE882C58 SIGNEXTEND MUL 0x4F 0xCF 0xDE DUP1 CALLDATALOAD RETURN LOG2 0xC PUSH13 0x206D5E62432193465B64736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "1014:17147:2:-:0;;;2244:612;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2376:5;:13;2384:5;2376;:13;:::i;:::-;-1:-1:-1;2399:7:2;:17;2409:7;2399;:17;:::i;:::-;-1:-1:-1;2427:42:2;;;;:22;;:42;;;;;:::i;:::-;;2484:9;2479:126;2503:17;:24;2499:1;:28;2479:126;;;2590:4;2548:17;:39;2566:17;2584:1;2566:20;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2548:39:2;;;;;;;;;;;-1:-1:-1;2548:39:2;:46;;-1:-1:-1;;2548:46:2;;;;;;;;;;2529:3;;;;:::i;:::-;;;;2479:126;;;-1:-1:-1;2646:97:2;;-1:-1:-1;;;2646:97:2;;2696:4;2646:97;;;5812:34:9;;;2703:24:2;5862:18:9;;;5855:34;5905:18;;;5898:43;1168:42:2;;2646:41;;5747:18:9;;2646:97:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2753:96:2;;-1:-1:-1;;;2753:96:2;;2803:4;2753:96;;;5812:34:9;;;2810:23:2;5862:18:9;;;5855:34;5905:18;;;5898:43;1168:42:2;;-1:-1:-1;2753:41:2;;-1:-1:-1;5747:18:9;;2753:96:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2244:612;;;1014:17147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1014:17147:2;-1:-1:-1;;;;;1014:17147:2;;;;;;;;;;;-1:-1:-1;1014:17147:2;;;;;;;-1:-1:-1;1014:17147:2;;;-1:-1:-1;1014:17147:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:9;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:9;247:40;;-1:-1:-1;;;;;302:34:9;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:9:o;426:650::-;480:5;533:3;526:4;518:6;514:17;510:27;500:55;;551:1;548;541:12;500:55;574:13;;-1:-1:-1;;;;;599:26:9;;596:52;;;628:18;;:::i;:::-;667:4;695:53;738:2;719:13;;-1:-1:-1;;715:27:9;711:36;;695:53;:::i;:::-;773:2;764:7;757:19;817:3;812:2;807;799:6;795:15;791:24;788:33;785:53;;;834:1;831;824:12;785:53;856:1;866:134;880:2;877:1;874:9;866:134;;;969:14;;;965:23;;959:30;937:15;;;933:24;;926:64;891:10;;866:134;;;-1:-1:-1;1043:1:9;1020:16;;;1016:25;;;1009:36;;;;1024:7;426:650;-1:-1:-1;;;426:650:9:o;1081:1528::-;1214:6;1222;1230;1283:2;1271:9;1262:7;1258:23;1254:32;1251:52;;;1299:1;1296;1289:12;1251:52;1326:16;;-1:-1:-1;;;;;1391:14:9;;;1388:34;;;1418:1;1415;1408:12;1388:34;1441:61;1494:7;1485:6;1474:9;1470:22;1441:61;:::i;:::-;1431:71;;1521:2;1511:12;;1569:2;1558:9;1554:18;1548:25;1598:2;1588:8;1585:16;1582:36;;;1614:1;1611;1604:12;1582:36;1637:63;1692:7;1681:8;1670:9;1666:24;1637:63;:::i;:::-;1627:73;;;1746:2;1735:9;1731:18;1725:25;1775:2;1765:8;1762:16;1759:36;;;1791:1;1788;1781:12;1759:36;1814:24;;1869:4;1861:13;;1857:27;-1:-1:-1;1847:55:9;;1898:1;1895;1888:12;1847:55;1927:2;1921:9;1949:2;1945;1942:10;1939:36;;;1955:18;;:::i;:::-;2001:2;1998:1;1994:10;1984:20;;2024:28;2048:2;2044;2040:11;2024:28;:::i;:::-;2086:15;;;2156:11;;;2152:20;;;2117:12;;;;2184:19;;;2181:39;;;2216:1;2213;2206:12;2181:39;2240:11;;;;2260:319;2276:6;2271:3;2268:15;2260:319;;;2343:10;;;-1:-1:-1;;;;;;2386:31:9;;2376:42;;2366:140;;2460:1;2489:2;2485;2478:14;2366:140;2519:18;;;2293:12;;;;2557;;;;2260:319;;;2598:5;2588:15;;;;;;;;1081:1528;;;;;:::o;2614:380::-;2693:1;2689:12;;;;2736;;;2757:61;;2811:4;2803:6;2799:17;2789:27;;2757:61;2864:2;2856:6;2853:14;2833:18;2830:38;2827:161;;2910:10;2905:3;2901:20;2898:1;2891:31;2945:4;2942:1;2935:15;2973:4;2970:1;2963:15;2827:161;;2614:380;;;:::o;3125:545::-;3227:2;3222:3;3219:11;3216:448;;;3263:1;3288:5;3284:2;3277:17;3333:4;3329:2;3319:19;3403:2;3391:10;3387:19;3384:1;3380:27;3374:4;3370:38;3439:4;3427:10;3424:20;3421:47;;;-1:-1:-1;3462:4:9;3421:47;3517:2;3512:3;3508:12;3505:1;3501:20;3495:4;3491:31;3481:41;;3572:82;3590:2;3583:5;3580:13;3572:82;;;3635:17;;;3616:1;3605:13;3572:82;;;3576:3;;;3216:448;3125:545;;;:::o;3846:1352::-;3966:10;;-1:-1:-1;;;;;3988:30:9;;3985:56;;;4021:18;;:::i;:::-;4050:97;4140:6;4100:38;4132:4;4126:11;4100:38;:::i;:::-;4094:4;4050:97;:::i;:::-;4202:4;;4266:2;4255:14;;4283:1;4278:663;;;;4985:1;5002:6;4999:89;;;-1:-1:-1;5054:19:9;;;5048:26;4999:89;-1:-1:-1;;3803:1:9;3799:11;;;3795:24;3791:29;3781:40;3827:1;3823:11;;;3778:57;5101:81;;4248:944;;4278:663;3072:1;3065:14;;;3109:4;3096:18;;-1:-1:-1;;4314:20:9;;;4432:236;4446:7;4443:1;4440:14;4432:236;;;4535:19;;;4529:26;4514:42;;4627:27;;;;4595:1;4583:14;;;;4462:19;;4432:236;;;4436:3;4696:6;4687:7;4684:19;4681:201;;;4757:19;;;4751:26;-1:-1:-1;;4840:1:9;4836:14;;;4852:3;4832:24;4828:37;4824:42;4809:58;4794:74;;4681:201;-1:-1:-1;;;;;4928:1:9;4912:14;;;4908:22;4895:36;;-1:-1:-1;3846:1352:9:o;5203:127::-;5264:10;5259:3;5255:20;5252:1;5245:31;5295:4;5292:1;5285:15;5319:4;5316:1;5309:15;5335:232;5374:3;5395:17;;;5392:140;;5454:10;5449:3;5445:20;5442:1;5435:31;5489:4;5486:1;5479:15;5517:4;5514:1;5507:15;5392:140;-1:-1:-1;5559:1:9;5548:13;;5335:232::o;5572:375::-;1014:17147:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1098": {
									"entryPoint": 2512,
									"id": 1098,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1214": {
									"entryPoint": null,
									"id": 1214,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_988": {
									"entryPoint": 4150,
									"id": 988,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_callTokensReceived_1201": {
									"entryPoint": 3470,
									"id": 1201,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_callTokensToSend_1143": {
									"entryPoint": 2807,
									"id": 1143,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_move_1053": {
									"entryPoint": 3103,
									"id": 1053,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1721": {
									"entryPoint": null,
									"id": 1721,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_send_896": {
									"entryPoint": 3923,
									"id": 896,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@allowance_608": {
									"entryPoint": null,
									"id": 608,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_633": {
									"entryPoint": 923,
									"id": 633,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@authorizeOperator_470": {
									"entryPoint": 1466,
									"id": 470,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOf_294": {
									"entryPoint": null,
									"id": 294,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_391": {
									"entryPoint": 2481,
									"id": 391,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@defaultOperators_526": {
									"entryPoint": 688,
									"id": 526,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@granularity_266": {
									"entryPoint": null,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_1434": {
									"entryPoint": null,
									"id": 1434,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isOperatorFor_425": {
									"entryPoint": 1980,
									"id": 425,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_237": {
									"entryPoint": 786,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@operatorBurn_590": {
									"entryPoint": 2425,
									"id": 590,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@operatorSend_560": {
									"entryPoint": 1406,
									"id": 560,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@revokeOperator_515": {
									"entryPoint": 2142,
									"id": 515,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@send_316": {
									"entryPoint": 1766,
									"id": 316,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@symbol_247": {
									"entryPoint": 1751,
									"id": 247,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_725": {
									"entryPoint": 949,
									"id": 725,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_373": {
									"entryPoint": 1801,
									"id": 373,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 4916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 5821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 4672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5959,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5704,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4894,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 4761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15090:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "165:507:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "175:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "185:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "179:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "214:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "225:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "210:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:18:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "200:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "244:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "255:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "237:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "237:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "267:17:9",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "278:6:9"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "271:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "293:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "313:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "307:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "297:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "336:6:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "344:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "329:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "329:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "329:22:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "360:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "371:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "382:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "367:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "367:18:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "360:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "394:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "412:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "420:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:15:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "398:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "432:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "441:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "436:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "500:146:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "536:6:9"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "530:5:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "530:13:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "553:3:9",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "558:1:9",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "549:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "549:11:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "562:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "545:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "545:19:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "526:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "526:39:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "514:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "514:52:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "514:52:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "579:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "590:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "595:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "586:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "586:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "579:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "611:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "625:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "633:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "621:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "621:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "611:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "462:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "465:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "459:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "459:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "473:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "475:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "484:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "487:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "480:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "480:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "475:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "455:3:9",
																"statements": []
															},
															"src": "451:195:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "655:11:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "663:3:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "655:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "134:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "145:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "156:4:9",
														"type": ""
													}
												],
												"src": "14:658:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "727:373:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "737:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "757:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "751:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:12:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "741:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "779:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "772:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "772:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "772:19:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "800:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "809:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "804:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "871:110:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "885:14:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "895:4:9",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "889:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "927:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "932:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "923:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "923:11:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "936:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "919:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "919:20:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "955:5:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "962:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "951:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "951:13:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "966:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "947:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "947:22:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "941:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "941:29:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "912:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "912:59:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "912:59:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "830:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "833:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "827:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "841:21:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "843:17:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "852:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "855:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "848:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "848:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "843:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "823:3:9",
																"statements": []
															},
															"src": "819:162:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1005:3:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1010:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1001:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1019:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:27:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1026:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "990:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "990:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "990:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1037:57:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1052:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1065:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1073:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1061:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1061:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1082:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1078:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1078:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1048:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1048:39:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1089:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1044:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1044:50:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1037:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "704:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "711:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "719:3:9",
														"type": ""
													}
												],
												"src": "677:423:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1226:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1243:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1236:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1236:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1266:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1292:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1304:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1315:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1300:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1300:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1274:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:45:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1266:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1195:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1206:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1217:4:9",
														"type": ""
													}
												],
												"src": "1105:220:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1375:86:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1439:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1448:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1451:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1441:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1441:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1441:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1398:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1409:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1424:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1429:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1420:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1420:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1433:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1416:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1416:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1405:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1395:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1395:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1388:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:50:9"
															},
															"nodeType": "YulIf",
															"src": "1385:70:9"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1364:5:9",
														"type": ""
													}
												],
												"src": "1330:131:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:228:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1599:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1608:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1611:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1601:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1601:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1601:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1574:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1583:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1570:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1570:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1595:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1566:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1566:32:9"
															},
															"nodeType": "YulIf",
															"src": "1563:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1624:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1650:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1637:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1637:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1628:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1694:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1669:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1669:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1709:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1719:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1733:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1760:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1771:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1756:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1756:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1743:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1743:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1733:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1511:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1522:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1534:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1542:6:9",
														"type": ""
													}
												],
												"src": "1466:315:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1881:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1891:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1903:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1914:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1899:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1899:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1891:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1933:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1958:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1951:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1951:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1944:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1944:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1926:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1926:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1850:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1861:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1872:4:9",
														"type": ""
													}
												],
												"src": "1786:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2079:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2089:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2112:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2097:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2097:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2089:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2131:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2142:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2124:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2124:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2048:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2059:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2070:4:9",
														"type": ""
													}
												],
												"src": "1978:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2264:352:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2310:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2319:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2322:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2312:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2312:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2312:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2285:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2294:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2281:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2281:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2306:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2277:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:32:9"
															},
															"nodeType": "YulIf",
															"src": "2274:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2335:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2361:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2348:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2348:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2339:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2405:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2380:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2380:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2420:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2430:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2444:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2476:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2487:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2472:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2472:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2459:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2459:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2448:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2525:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2500:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2500:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2500:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2542:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2552:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2542:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2568:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2595:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2591:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2578:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2578:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2568:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2214:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2225:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2237:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2245:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2253:6:9",
														"type": ""
													}
												],
												"src": "2160:456:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2718:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2728:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2740:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2751:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2736:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2736:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2728:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2770:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2785:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2793:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2781:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2781:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2763:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2763:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2763:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2687:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2698:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2709:4:9",
														"type": ""
													}
												],
												"src": "2621:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2842:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2859:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2866:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2871:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2862:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2862:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2852:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2852:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2899:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2902:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2892:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2923:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2926:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2916:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2916:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2810:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2994:666:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3022:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3030:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3018:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3018:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3037:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3014:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3014:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3007:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3007:35:9"
															},
															"nodeType": "YulIf",
															"src": "3004:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3068:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3091:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3078:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3072:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3107:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3111:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3158:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3160:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3160:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3160:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3150:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3154:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3147:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3147:10:9"
															},
															"nodeType": "YulIf",
															"src": "3144:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3189:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3203:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3199:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:7:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3193:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3215:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3235:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3229:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3219:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3247:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3269:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "3293:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3297:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3289:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3289:13:9"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "3304:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3285:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3285:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3309:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3281:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3281:31:9"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3314:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3277:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3277:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3265:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3265:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3251:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3377:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3379:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3379:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3379:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3336:10:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3348:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3333:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3333:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3356:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3368:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3353:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3353:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3330:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:46:9"
															},
															"nodeType": "YulIf",
															"src": "3327:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3415:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3419:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3408:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3408:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3408:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3446:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3454:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3439:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3505:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3514:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3517:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3507:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3507:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3507:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3480:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3488:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3476:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3476:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3493:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3472:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:26:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3500:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3469:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:35:9"
															},
															"nodeType": "YulIf",
															"src": "3466:55:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3555:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3543:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3543:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3566:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3574:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3562:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3562:17:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3581:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3530:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3530:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3530:54:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3608:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3616:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3604:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3604:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3621:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3600:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3600:26:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3593:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3593:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3593:37:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3639:15:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3648:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3639:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2968:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2976:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2984:5:9",
														"type": ""
													}
												],
												"src": "2942:718:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3821:729:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3868:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3877:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3880:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3870:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3870:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3870:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3842:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3851:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3838:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3838:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3863:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3834:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3834:33:9"
															},
															"nodeType": "YulIf",
															"src": "3831:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3893:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3919:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3906:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3906:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3897:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3963:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3938:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3938:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3938:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3978:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3988:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3978:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4002:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4034:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4045:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4030:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4030:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4017:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4017:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4006:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4083:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4058:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4058:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4058:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4100:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4110:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4100:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4126:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4153:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4164:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4149:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4149:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4136:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4136:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4126:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4177:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4208:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4219:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4204:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4204:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4191:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4191:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4181:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4232:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4242:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4236:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4287:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4296:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4299:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4289:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4289:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4289:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4275:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4283:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4272:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4272:14:9"
															},
															"nodeType": "YulIf",
															"src": "4269:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4312:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4343:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4354:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4339:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4339:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4363:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4322:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4322:49:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4312:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4380:49:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4413:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4424:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4409:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4409:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4396:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:33:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4384:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4458:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4467:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4470:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4460:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4460:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4460:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4444:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4454:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4441:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4441:16:9"
															},
															"nodeType": "YulIf",
															"src": "4438:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4483:61:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4514:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4525:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4536:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4493:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4493:51:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4483:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3755:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3766:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3778:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3786:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3794:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3802:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3810:6:9",
														"type": ""
													}
												],
												"src": "3665:885:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4625:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4671:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4680:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4683:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4673:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4673:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4673:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4646:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4655:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4642:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4667:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4638:32:9"
															},
															"nodeType": "YulIf",
															"src": "4635:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4696:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4722:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4709:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4709:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4700:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4766:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4741:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4741:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4781:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4791:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4781:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4591:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4602:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4614:6:9",
														"type": ""
													}
												],
												"src": "4555:247:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4920:410:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4966:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4975:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4978:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4968:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4968:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4968:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4941:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4950:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4937:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4937:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4962:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4933:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4933:32:9"
															},
															"nodeType": "YulIf",
															"src": "4930:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4991:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5017:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5004:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4995:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5061:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5036:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5036:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5036:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5076:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5086:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5076:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5100:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5127:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5138:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5123:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5123:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5110:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5110:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5100:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5151:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5182:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5193:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5178:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5178:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5165:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5165:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5155:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5240:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5249:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5252:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5242:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5242:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5242:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5212:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5220:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5209:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5209:30:9"
															},
															"nodeType": "YulIf",
															"src": "5206:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5265:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5296:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5307:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5292:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5292:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5316:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5275:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5275:49:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5265:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4870:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4881:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4893:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4901:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4909:6:9",
														"type": ""
													}
												],
												"src": "4807:523:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5422:301:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5468:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5477:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5480:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5470:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5470:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5470:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5443:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5452:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5439:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5439:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5464:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5435:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5435:32:9"
															},
															"nodeType": "YulIf",
															"src": "5432:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5493:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5519:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5506:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5506:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5497:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5563:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5538:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5538:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5538:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5578:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5588:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5578:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5602:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5634:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5645:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5630:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5630:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5617:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5617:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5606:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5683:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5658:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5658:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5658:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5700:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5710:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5700:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5380:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5391:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5403:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5411:6:9",
														"type": ""
													}
												],
												"src": "5335:388:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5867:604:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5914:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5923:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5926:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5916:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5916:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5916:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5888:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5897:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5884:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5884:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5909:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5880:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:33:9"
															},
															"nodeType": "YulIf",
															"src": "5877:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5939:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5965:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5952:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5943:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6009:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5984:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5984:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5984:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6024:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6034:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6024:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6048:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6075:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6086:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6071:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6071:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6058:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6099:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6130:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6141:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6126:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6113:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6113:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6103:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6154:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6164:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6158:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6209:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6218:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6221:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6211:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6211:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6211:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6197:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6205:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6194:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6194:14:9"
															},
															"nodeType": "YulIf",
															"src": "6191:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6234:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6265:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6276:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6261:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6261:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6285:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6244:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6244:49:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6234:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6302:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6335:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6346:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6331:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6331:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6318:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6318:32:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6306:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6379:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6388:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6391:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6381:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6381:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6381:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6365:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6375:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6362:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:16:9"
															},
															"nodeType": "YulIf",
															"src": "6359:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6404:61:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6435:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6446:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6431:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6431:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6457:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6414:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6414:51:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6404:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5809:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5820:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5832:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5840:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5848:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5856:6:9",
														"type": ""
													}
												],
												"src": "5728:743:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6572:292:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6618:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6627:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6630:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6620:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6620:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6620:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6593:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6602:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6589:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6589:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6614:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6585:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6585:32:9"
															},
															"nodeType": "YulIf",
															"src": "6582:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6643:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6666:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6653:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6653:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6643:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6685:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6716:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6727:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6712:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6712:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6699:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6699:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6689:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6774:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6783:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6786:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6776:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6776:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6776:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6746:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6754:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6743:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6743:30:9"
															},
															"nodeType": "YulIf",
															"src": "6740:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6799:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6830:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6841:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6826:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6826:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6850:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6809:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6809:49:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6799:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6530:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6541:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6553:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6561:6:9",
														"type": ""
													}
												],
												"src": "6476:388:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6924:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6934:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6948:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6951:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6944:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6934:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6965:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6995:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7001:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6991:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6991:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6969:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7042:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7044:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7058:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7066:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7054:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7054:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7044:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7022:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7015:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7015:26:9"
															},
															"nodeType": "YulIf",
															"src": "7012:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7132:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7153:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7160:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7165:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7156:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7156:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7146:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7146:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7146:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7197:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7200:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7190:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7190:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7190:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7225:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7228:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7218:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7218:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7218:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7088:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7111:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7119:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7108:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7108:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7085:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7085:38:9"
															},
															"nodeType": "YulIf",
															"src": "7082:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6904:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6913:6:9",
														"type": ""
													}
												],
												"src": "6869:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7428:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7445:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7456:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7438:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7438:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7438:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7479:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7490:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7475:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7475:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7495:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7468:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7468:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7468:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7518:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7529:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7514:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7514:18:9"
																	},
																	{
																		"hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7534:34:9",
																		"type": "",
																		"value": "ERC777: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7507:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7507:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7507:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7589:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7600:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7585:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7585:18:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7605:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7578:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7578:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7578:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7621:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7633:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7644:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7629:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7629:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7621:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7405:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7419:4:9",
														"type": ""
													}
												],
												"src": "7254:400:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7833:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7850:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7861:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7843:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7843:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7843:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7884:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7895:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7880:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7880:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7900:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7873:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7873:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7873:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7923:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7934:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7919:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7919:18:9"
																	},
																	{
																		"hexValue": "4552433737373a207472616e736665722066726f6d20746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7939:34:9",
																		"type": "",
																		"value": "ERC777: transfer from the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7912:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7912:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7912:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7994:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8005:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7990:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7990:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8010:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7983:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7983:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7983:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8028:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8040:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8051:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8036:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8036:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8028:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7810:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7824:4:9",
														"type": ""
													}
												],
												"src": "7659:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8240:231:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8257:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8268:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8250:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8250:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8250:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8291:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8302:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8287:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8287:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8307:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8280:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8280:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8280:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8330:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8341:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8326:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8326:18:9"
																	},
																	{
																		"hexValue": "4552433737373a207472616e7366657220616d6f756e74206578636565647320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8346:34:9",
																		"type": "",
																		"value": "ERC777: transfer amount exceeds "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8319:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8319:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8319:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8401:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8412:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8397:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8397:18:9"
																	},
																	{
																		"hexValue": "616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8417:11:9",
																		"type": "",
																		"value": "allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8390:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8390:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8390:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8438:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8450:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8461:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8446:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8446:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8438:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8217:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8231:4:9",
														"type": ""
													}
												],
												"src": "8066:405:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8508:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8525:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8532:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8537:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8528:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8528:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8518:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8518:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8518:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8565:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8568:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8558:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8558:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8558:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8589:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8592:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8582:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8582:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8582:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8476:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8657:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8667:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8679:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8682:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8675:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8675:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8667:4:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8708:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8710:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8710:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8710:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "8699:4:9"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8705:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8696:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8696:11:9"
															},
															"nodeType": "YulIf",
															"src": "8693:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8639:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8642:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8648:4:9",
														"type": ""
													}
												],
												"src": "8608:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8915:234:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8932:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8943:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8925:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8925:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8925:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8966:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8977:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8962:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8962:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8982:2:9",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8955:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8955:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8955:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9005:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9016:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9001:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9001:18:9"
																	},
																	{
																		"hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9021:34:9",
																		"type": "",
																		"value": "ERC777: caller is not an operato"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8994:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8994:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8994:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9076:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9087:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9072:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9072:18:9"
																	},
																	{
																		"hexValue": "7220666f7220686f6c646572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9092:14:9",
																		"type": "",
																		"value": "r for holder"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9065:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9065:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9065:42:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9116:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9128:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9139:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9124:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9124:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9116:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8892:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8906:4:9",
														"type": ""
													}
												],
												"src": "8741:408:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9328:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9345:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9356:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9338:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9338:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9338:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9379:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9390:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9375:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9375:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9395:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9368:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9368:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9368:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9418:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9429:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9414:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9414:18:9"
																	},
																	{
																		"hexValue": "4552433737373a20617574686f72697a696e672073656c66206173206f706572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9434:34:9",
																		"type": "",
																		"value": "ERC777: authorizing self as oper"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9407:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9407:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9407:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9489:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9500:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9485:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9485:18:9"
																	},
																	{
																		"hexValue": "61746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9505:6:9",
																		"type": "",
																		"value": "ator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9478:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9478:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9478:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9521:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9533:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9544:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9529:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9529:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9521:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9305:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9319:4:9",
														"type": ""
													}
												],
												"src": "9154:400:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9733:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9750:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9761:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9743:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9743:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9743:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9784:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9795:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9780:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9780:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9800:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9773:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9773:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9773:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9823:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9834:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9819:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9819:18:9"
																	},
																	{
																		"hexValue": "4552433737373a207265766f6b696e672073656c66206173206f70657261746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9839:34:9",
																		"type": "",
																		"value": "ERC777: revoking self as operato"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9812:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9812:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9812:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9894:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9905:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9890:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9890:18:9"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9910:3:9",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9883:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9883:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9883:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9923:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9935:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9946:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9931:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9931:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9923:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9710:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9724:4:9",
														"type": ""
													}
												],
												"src": "9559:397:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10135:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10152:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10163:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10145:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10145:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10145:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10186:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10197:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10182:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10182:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10202:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10175:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10175:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10175:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10225:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10236:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10221:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10221:18:9"
																	},
																	{
																		"hexValue": "4552433737373a20617070726f76652066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10241:34:9",
																		"type": "",
																		"value": "ERC777: approve from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10214:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10214:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10214:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10296:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10307:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10292:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10292:18:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10312:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10285:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10285:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10285:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10329:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10341:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10352:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10337:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10337:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10329:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10112:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10126:4:9",
														"type": ""
													}
												],
												"src": "9961:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10541:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10558:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10569:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10551:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10551:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10551:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10592:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10603:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10588:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10588:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10608:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10581:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10581:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10581:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10631:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10642:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10627:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10627:18:9"
																	},
																	{
																		"hexValue": "4552433737373a20617070726f766520746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10647:34:9",
																		"type": "",
																		"value": "ERC777: approve to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10620:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10620:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10620:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10702:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10713:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10698:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10698:18:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10718:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10691:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10691:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10691:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10733:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10745:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10756:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10741:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10741:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10733:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10518:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10532:4:9",
														"type": ""
													}
												],
												"src": "10367:399:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10900:145:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10910:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10922:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10933:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10918:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10918:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10910:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10952:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10967:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10983:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10988:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10979:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10979:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10992:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10975:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10975:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10963:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10963:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10945:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10945:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10945:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11016:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11027:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11012:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11012:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11032:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11005:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11005:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11005:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10861:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10872:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10880:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10891:4:9",
														"type": ""
													}
												],
												"src": "10771:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11131:170:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11177:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11186:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11189:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11179:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11179:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11179:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11152:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11161:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11148:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11148:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11173:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11144:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11144:32:9"
															},
															"nodeType": "YulIf",
															"src": "11141:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11202:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11221:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11215:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11215:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11206:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11265:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "11240:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11240:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11240:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11280:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11290:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11280:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11097:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11108:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11120:6:9",
														"type": ""
													}
												],
												"src": "11050:251:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11583:455:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11593:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11611:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11616:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11607:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11607:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11620:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11603:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11603:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11597:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11638:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11653:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11661:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11649:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11649:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11631:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11631:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11631:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11685:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11696:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11681:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11681:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11705:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11713:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11701:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11701:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11674:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11674:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11674:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11737:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11748:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11733:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11733:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "11757:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11765:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11753:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11753:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11726:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11726:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11726:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11789:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11800:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11785:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11785:18:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11805:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11778:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11778:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11778:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11832:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11843:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11828:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11828:19:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11849:3:9",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11821:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11821:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11821:32:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11862:60:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "11894:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11906:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11917:3:9",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11902:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11902:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "11876:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11876:46:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11866:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11942:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11953:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11938:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11938:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "11963:6:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11971:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11959:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11959:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11931:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11931:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11931:51:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11991:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "12017:6:9"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "12025:6:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "11999:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11999:33:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11991:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11512:9:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "11523:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11531:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11539:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11547:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11555:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11563:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11574:4:9",
														"type": ""
													}
												],
												"src": "11306:732:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12217:229:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12234:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12245:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12227:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12227:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12227:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12268:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12279:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12264:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12264:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12284:2:9",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12257:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12257:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12257:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12307:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12318:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12303:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12303:18:9"
																	},
																	{
																		"hexValue": "4552433737373a207472616e7366657220616d6f756e74206578636565647320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12323:34:9",
																		"type": "",
																		"value": "ERC777: transfer amount exceeds "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12296:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12296:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12296:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12378:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12389:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12374:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12374:18:9"
																	},
																	{
																		"hexValue": "62616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12394:9:9",
																		"type": "",
																		"value": "balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12367:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12367:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12367:37:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12413:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12425:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12436:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12421:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12421:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12413:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12194:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12208:4:9",
														"type": ""
													}
												],
												"src": "12043:403:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12499:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12509:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12520:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12523:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12516:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12516:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12509:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12548:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12550:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12550:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12550:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12540:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12543:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12537:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12537:10:9"
															},
															"nodeType": "YulIf",
															"src": "12534:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12482:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12485:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12491:3:9",
														"type": ""
													}
												],
												"src": "12451:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12774:257:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12791:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12802:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12784:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12784:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12784:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12829:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12840:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12825:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12825:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12845:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12818:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12818:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12818:30:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12857:59:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12889:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12901:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12912:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12897:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12897:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "12871:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12871:45:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "12861:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12936:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12947:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12932:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12932:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "12956:6:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12964:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12952:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12952:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12925:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12925:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12925:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12984:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13010:6:9"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13018:6:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "12992:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12992:33:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12984:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12727:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12738:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12746:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12754:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12765:4:9",
														"type": ""
													}
												],
												"src": "12581:450:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13210:307:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13227:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13238:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13220:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13220:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13220:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13261:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13272:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13257:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13257:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13277:2:9",
																		"type": "",
																		"value": "77"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13250:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13250:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13250:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13300:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13311:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13296:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13296:18:9"
																	},
																	{
																		"hexValue": "4552433737373a20746f6b656e20726563697069656e7420636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13316:34:9",
																		"type": "",
																		"value": "ERC777: token recipient contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13289:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13289:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13289:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13371:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13382:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13367:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13367:18:9"
																	},
																	{
																		"hexValue": "20686173206e6f20696d706c656d656e74657220666f7220455243373737546f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13387:34:9",
																		"type": "",
																		"value": " has no implementer for ERC777To"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13360:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13360:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13360:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13442:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13453:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13438:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13438:19:9"
																	},
																	{
																		"hexValue": "6b656e73526563697069656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13459:15:9",
																		"type": "",
																		"value": "kensRecipient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13431:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13431:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13431:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13484:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13496:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13507:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13492:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13492:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13484:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13187:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13201:4:9",
														"type": ""
													}
												],
												"src": "13036:481:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13696:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13713:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13724:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13706:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13706:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13706:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13747:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13758:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13743:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13743:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13763:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13736:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13736:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13736:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13786:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13797:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13782:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13782:18:9"
																	},
																	{
																		"hexValue": "4552433737373a2073656e642066726f6d20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13802:34:9",
																		"type": "",
																		"value": "ERC777: send from the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13775:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13775:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13775:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13857:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13868:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13853:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13853:18:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13873:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13846:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13846:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13846:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13887:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13899:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13910:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13895:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13895:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13887:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13673:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13687:4:9",
														"type": ""
													}
												],
												"src": "13522:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14099:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14116:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14127:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14109:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14109:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14109:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14150:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14161:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14146:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14146:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14166:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14139:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14139:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14139:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14189:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14200:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14185:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14185:18:9"
																	},
																	{
																		"hexValue": "4552433737373a2073656e6420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14205:34:9",
																		"type": "",
																		"value": "ERC777: send to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14178:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14178:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14178:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14249:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14261:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14272:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14257:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14257:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14249:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14076:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14090:4:9",
														"type": ""
													}
												],
												"src": "13925:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14460:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14477:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14488:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14470:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14470:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14470:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14511:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14522:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14507:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14507:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14527:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14500:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14500:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14500:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14550:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14561:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14546:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14546:18:9"
																	},
																	{
																		"hexValue": "4552433737373a206275726e2066726f6d20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14566:34:9",
																		"type": "",
																		"value": "ERC777: burn from the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14539:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14539:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14539:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14621:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14632:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14617:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14617:18:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14637:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14610:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14610:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14610:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14651:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14663:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14674:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14659:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14659:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14651:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14437:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14451:4:9",
														"type": ""
													}
												],
												"src": "14286:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14863:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14880:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14891:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14873:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14873:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14873:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14914:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14925:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14910:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14910:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14930:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14903:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14903:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14903:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14953:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14964:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14949:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14949:18:9"
																	},
																	{
																		"hexValue": "4552433737373a206275726e20616d6f756e7420657863656564732062616c61",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14969:34:9",
																		"type": "",
																		"value": "ERC777: burn amount exceeds bala"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14942:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14942:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14942:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15024:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15035:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15020:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15020:18:9"
																	},
																	{
																		"hexValue": "6e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15040:5:9",
																		"type": "",
																		"value": "nce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15013:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15013:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15013:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15055:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15067:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15078:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15063:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15063:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15055:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14840:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14854:4:9",
														"type": ""
													}
												],
												"src": "14689:399:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC777: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC777: transfer from the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC777: transfer amount exceeds \")\n        mstore(add(headStart, 96), \"allowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC777: caller is not an operato\")\n        mstore(add(headStart, 96), \"r for holder\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC777: authorizing self as oper\")\n        mstore(add(headStart, 96), \"ator\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC777: revoking self as operato\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC777: approve from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC777: approve to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 192)\n        let tail_1 := abi_encode_string(value4, add(headStart, 192))\n        mstore(add(headStart, 160), sub(tail_1, headStart))\n        tail := abi_encode_string(value5, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"ERC777: transfer amount exceeds \")\n        mstore(add(headStart, 96), \"balance\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        let tail_1 := abi_encode_string(value1, add(headStart, 96))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string(value2, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 77)\n        mstore(add(headStart, 64), \"ERC777: token recipient contract\")\n        mstore(add(headStart, 96), \" has no implementer for ERC777To\")\n        mstore(add(headStart, 128), \"kensRecipient\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC777: send from the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC777: send to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC777: burn from the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC777: burn amount exceeds bala\")\n        mstore(add(headStart, 96), \"nce\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b63711461022b578063dd62ed3e1461023e578063fad8b32a14610277578063fc673c4f1461028a578063fe9d93031461029d57600080fd5b8063959b8c3f146101ea57806395d89b41146101fd5780639bd9bbc614610205578063a9059cbb1461021857600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce56714610196578063556f0dc7146101a557806362ad1b83146101ac57806370a08231146101c157600080fd5b806306e485381461011b57806306fdde0314610139578063095ea7b31461014e57806318160ddd14610171575b600080fd5b6101236102b0565b60405161013091906111f3565b60405180910390f35b610141610312565b6040516101309190611286565b61016161015c3660046112b1565b61039b565b6040519015158152602001610130565b6001545b604051908152602001610130565b6101616101913660046112dd565b6103b5565b60405160128152602001610130565b6001610175565b6101bf6101ba3660046113c1565b61057e565b005b6101756101cf366004611454565b6001600160a01b031660009081526020819052604090205490565b6101bf6101f8366004611454565b6105ba565b6101416106d7565b6101bf610213366004611471565b6106e6565b6101616102263660046112b1565b610709565b6101616102393660046114ca565b6107bc565b61017561024c3660046114ca565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101bf610285366004611454565b61085e565b6101bf610298366004611503565b610979565b6101bf6102ab366004611583565b6109b1565b6060600480548060200260200160405190810160405280929190818152602001828054801561030857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ea575b5050505050905090565b606060028054610321906115ca565b80601f016020809104026020016040519081016040528092919081815260200182805461034d906115ca565b80156103085780601f1061036f57610100808354040283529160200191610308565b820191906000526020600020905b81548152906001019060200180831161037d57509395945050505050565b6000336103a98185856109d0565b60019150505b92915050565b60006001600160a01b0383166103e65760405162461bcd60e51b81526004016103dd90611604565b60405180910390fd5b6001600160a01b03841661044b5760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016103dd565b600033905061047c818686866040518060200160405280600081525060405180602001604052806000815250610af7565b6104a8818686866040518060200160405280600081525060405180602001604052806000815250610c1f565b6001600160a01b03808616600090815260086020908152604080832093851683529290522054838110156105305760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084016103dd565b610544868361053f878561165e565b6109d0565b6105728287878760405180602001604052806000815250604051806020016040528060008152506000610d8e565b50600195945050505050565b61058833866107bc565b6105a45760405162461bcd60e51b81526004016103dd90611671565b6105b385858585856001610f53565b5050505050565b6001600160a01b038116330361061e5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b60648201526084016103dd565b6001600160a01b03811660009081526005602052604090205460ff161561066f573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561069e565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b606060038054610321906115ca565b61070433848484604051806020016040528060008152506001610f53565b505050565b60006001600160a01b0383166107315760405162461bcd60e51b81526004016103dd90611604565b6000339050610762818286866040518060200160405280600081525060405180602001604052806000815250610af7565b61078e818286866040518060200160405280600081525060405180602001604052806000815250610c1f565b6103a98182868660405180602001604052806000815250604051806020016040528060008152506000610d8e565b6000816001600160a01b0316836001600160a01b0316148061082757506001600160a01b03831660009081526005602052604090205460ff16801561082757506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061085757506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b336001600160a01b038216036108c05760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b60648201526084016103dd565b6001600160a01b03811660009081526005602052604090205460ff1615610914573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610940565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61098333856107bc565b61099f5760405162461bcd60e51b81526004016103dd90611671565b6109ab84848484611036565b50505050565b6109cc33838360405180602001604052806000815250611036565b5050565b6001600160a01b038316610a345760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dd565b6001600160a01b038216610a965760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dd565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9c91906116bd565b90506001600160a01b03811615610c1657604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610be3908a908a908a908a908a908a906004016116da565b600060405180830381600087803b158015610bfd57600080fd5b505af1158015610c11573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610c985760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b60648201526084016103dd565b610ca2848261165e565b6001600160a01b038088166000908152602081905260408082209390935590871681529081208054869290610cd8908490611734565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610d3093929190611747565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610d7d91815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610e0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3391906116bd565b90506001600160a01b03811615610eaf576040516223de2960e01b81526001600160a01b038216906223de2990610e78908b908b908b908b908b908b906004016116da565b600060405180830381600087803b158015610e9257600080fd5b505af1158015610ea6573d6000803e3d6000fd5b50505050610f49565b8115610f49576001600160a01b0386163b15610f495760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a4016103dd565b5050505050505050565b6001600160a01b038616610fb45760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b03851661100a5760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f206164647265737360448201526064016103dd565b33611019818888888888610af7565b611027818888888888610c1f565b610c1681888888888888610d8e565b6001600160a01b0384166110975760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b336110a781866000878787610af7565b6001600160a01b0385166000908152602081905260409020548481101561111c5760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016103dd565b611126858261165e565b6001600160a01b0387166000908152602081905260408120919091556001805487929061115490849061165e565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a40988787876040516111a293929190611747565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b6020808252825182820181905260009190848201906040850190845b818110156112345783516001600160a01b03168352928401929184019160010161120f565b50909695505050505050565b6000815180845260005b818110156112665760208185018101518683018201520161124a565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006108576020830184611240565b6001600160a01b03811681146112ae57600080fd5b50565b600080604083850312156112c457600080fd5b82356112cf81611299565b946020939093013593505050565b6000806000606084860312156112f257600080fd5b83356112fd81611299565b9250602084013561130d81611299565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261134557600080fd5b813567ffffffffffffffff808211156113605761136061131e565b604051601f8301601f19908116603f011681019082821181831017156113885761138861131e565b816040528381528660208588010111156113a157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156113d957600080fd5b85356113e481611299565b945060208601356113f481611299565b935060408601359250606086013567ffffffffffffffff8082111561141857600080fd5b61142489838a01611334565b9350608088013591508082111561143a57600080fd5b5061144788828901611334565b9150509295509295909350565b60006020828403121561146657600080fd5b813561085781611299565b60008060006060848603121561148657600080fd5b833561149181611299565b925060208401359150604084013567ffffffffffffffff8111156114b457600080fd5b6114c086828701611334565b9150509250925092565b600080604083850312156114dd57600080fd5b82356114e881611299565b915060208301356114f881611299565b809150509250929050565b6000806000806080858703121561151957600080fd5b843561152481611299565b935060208501359250604085013567ffffffffffffffff8082111561154857600080fd5b61155488838901611334565b9350606087013591508082111561156a57600080fd5b5061157787828801611334565b91505092959194509250565b6000806040838503121561159657600080fd5b82359150602083013567ffffffffffffffff8111156115b457600080fd5b6115c085828601611334565b9150509250929050565b600181811c908216806115de57607f821691505b6020821081036115fe57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156103af576103af611648565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b6000602082840312156116cf57600080fd5b815161085781611299565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c06080820181905260009061171590830185611240565b82810360a08401526117278185611240565b9998505050505050505050565b808201808211156103af576103af611648565b8381526060602082015260006117606060830185611240565b82810360408401526117728185611240565b969550505050505056fea26469706673582212209269d2ab00a61e3dce882c580b024fcfde8035f3a20c6c206d5e62432193465b64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x959B8C3F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD95B6371 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DD JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1454 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x141 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x175 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1454 JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1583 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x15CA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0x15CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x308 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x308 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37D JUMPI POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3A9 DUP2 DUP6 DUP6 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x47C DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x4A8 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x616C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x544 DUP7 DUP4 PUSH2 0x53F DUP8 DUP6 PUSH2 0x165E JUMP JUMPDEST PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x572 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD8E JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x588 CALLER DUP7 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x5B3 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0xF53 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x66F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x69E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x704 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0xF53 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x762 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x78E DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x3A9 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x827 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x827 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x857 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x914 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x940 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x983 CALLER DUP6 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x9AB DUP5 DUP5 DUP5 DUP5 PUSH2 0x1036 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9CC CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1036 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB9C SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xC16 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AD5CBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x75AB9782 SWAP1 PUSH2 0xBE3 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0xCA2 DUP5 DUP3 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xCD8 SWAP1 DUP5 SWAP1 PUSH2 0x1734 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD30 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0xD7D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE33 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xEAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x23DE29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH3 0x23DE29 SWAP1 PUSH2 0xE78 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xF49 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF49 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EXTCODESIZE ISZERO PUSH2 0xF49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x64 DUP3 ADD MSTORE PUSH13 0x1AD95B9CD49958DA5C1A595B9D PUSH1 0x9A SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x3DD JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0xFB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x100A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST CALLER PUSH2 0x1019 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x1027 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0xC16 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST CALLER PUSH2 0x10A7 DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x1126 DUP6 DUP3 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1154 SWAP1 DUP5 SWAP1 PUSH2 0x165E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1234 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x120F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1266 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x124A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x857 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12CF DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x12FD DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x130D DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1360 JUMPI PUSH2 0x1360 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1388 JUMPI PUSH2 0x1388 PUSH2 0x131E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x13E4 DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x13F4 DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1424 DUP10 DUP4 DUP11 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x143A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1447 DUP9 DUP3 DUP10 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x857 DUP2 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1491 DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C0 DUP7 DUP3 DUP8 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14E8 DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14F8 DUP2 PUSH2 0x1299 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1524 DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1554 DUP9 DUP4 DUP10 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x156A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1577 DUP8 DUP3 DUP9 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15C0 DUP6 DUP3 DUP7 ADD PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15DE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3AF JUMPI PUSH2 0x3AF PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x857 DUP2 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1715 SWAP1 DUP4 ADD DUP6 PUSH2 0x1240 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1727 DUP2 DUP6 PUSH2 0x1240 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3AF JUMPI PUSH2 0x3AF PUSH2 0x1648 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1760 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1240 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1772 DUP2 DUP6 PUSH2 0x1240 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH10 0xD2AB00A61E3DCE882C58 SIGNEXTEND MUL 0x4F 0xCF 0xDE DUP1 CALLDATALOAD RETURN LOG2 0xC PUSH13 0x206D5E62432193465B64736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "1014:17147:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6674:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2910:98;;;:::i;:::-;;;;;;;:::i;8253:197::-;;;;;;:::i;:::-;;:::i;:::-;;;1951:14:9;;1944:22;1926:41;;1914:2;1899:18;8253:197:2;1786:187:9;3703:123:2;3807:12;;3703:123;;;2124:25:9;;;2112:2;2097:18;3703:123:2;1978:177:9;8815:776:2;;;;;;:::i;:::-;;:::i;3350:82::-;;;3423:2;2763:36:9;;2751:2;2736:18;3350:82:2;2621:184:9;3547:95:2;3634:1;3547:95;;6923:394;;;;;;:::i;:::-;;:::i;:::-;;3926:150;;;;;;:::i;:::-;-1:-1:-1;;;;;4047:22:2;4021:7;4047:22;;;;;;;;;;;;3926:150;5727:413;;;;;;:::i;:::-;;:::i;3064:102::-;;;:::i;4206:164::-;;;;;;:::i;:::-;;:::i;4601:439::-;;;;;;:::i;:::-;;:::i;5361:299::-;;;;;;:::i;:::-;;:::i;7964:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8080:19:2;;;8054:7;8080:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;7964:151;6204:404;;;;;;:::i;:::-;;:::i;7438:287::-;;;;;;:::i;:::-;;:::i;5170:128::-;;;;;;:::i;:::-;;:::i;6674:130::-;6740:16;6775:22;6768:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6768:29:2;;;;;;;;;;;;;;;;;;;;;;;6674:130;:::o;2910:98::-;2964:13;2996:5;2989:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2989:12:2;;2910:98;-1:-1:-1;;;;;2910:98:2:o;8253:197::-;8335:4;665:10:7;8390:32:2;665:10:7;8407:7:2;8416:5;8390:8;:32::i;:::-;8439:4;8432:11;;;8253:197;;;;;:::o;8815:776::-;8921:4;-1:-1:-1;;;;;8945:23:2;;8937:72;;;;-1:-1:-1;;;8937:72:2;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;9027:20:2;;9019:71;;;;-1:-1:-1;;;9019:71:2;;7861:2:9;9019:71:2;;;7843:21:9;7900:2;7880:18;;;7873:30;7939:34;7919:18;;;7912:62;-1:-1:-1;;;7990:18:9;;;7983:36;8036:19;;9019:71:2;7659:402:9;9019:71:2;9101:15;665:10:7;9101:30:2;;9142:61;9160:7;9169:6;9177:9;9188:6;9142:61;;;;;;;;;;;;;;;;;;;;;;;;:17;:61::i;:::-;9214:49;9220:7;9229:6;9237:9;9248:6;9214:49;;;;;;;;;;;;;;;;;;;;;;;;:5;:49::i;:::-;-1:-1:-1;;;;;9301:19:2;;;9274:24;9301:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;9347:26;;;;9339:80;;;;-1:-1:-1;;;9339:80:2;;8268:2:9;9339:80:2;;;8250:21:9;8307:2;8287:18;;;8280:30;8346:34;8326:18;;;8319:62;-1:-1:-1;;;8397:18:9;;;8390:39;8446:19;;9339:80:2;8066:405:9;9339:80:2;9429:52;9438:6;9446:7;9455:25;9474:6;9455:16;:25;:::i;:::-;9429:8;:52::i;:::-;9492:70;9512:7;9521:6;9529:9;9540:6;9492:70;;;;;;;;;;;;;;;;;;;;;;;;9556:5;9492:19;:70::i;:::-;-1:-1:-1;9580:4:2;;8815:776;-1:-1:-1;;;;;8815:776:2:o;6923:394::-;7158:35;665:10:7;7186:6:2;7158:13;:35::i;:::-;7150:92;;;;-1:-1:-1;;;7150:92:2;;;;;;;:::i;:::-;7252:58;7258:6;7266:9;7277:6;7285:4;7291:12;7305:4;7252:5;:58::i;:::-;6923:394;;;;;:::o;5727:413::-;-1:-1:-1;;;;;5815:24:2;;665:10:7;5815:24:2;5807:73;;;;-1:-1:-1;;;5807:73:2;;9356:2:9;5807:73:2;;;9338:21:9;9395:2;9375:18;;;9368:30;9434:34;9414:18;;;9407:62;-1:-1:-1;;;9485:18:9;;;9478:34;9529:19;;5807:73:2;9154:400:9;5807:73:2;-1:-1:-1;;;;;5895:27:2;;;;;;:17;:27;;;;;;;;5891:185;;;665:10:7;5945:38:2;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;5945:48:2;;;;;;;;;5938:55;;-1:-1:-1;;5938:55:2;;;5891:185;;;665:10:7;6024:24:2;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6024:34:2;;;;;;;;;:41;;-1:-1:-1;;6024:41:2;6061:4;6024:41;;;5891:185;6091:42;;665:10:7;;-1:-1:-1;;;;;6091:42:2;;;;;;;;5727:413;:::o;3064:102::-;3120:13;3152:7;3145:14;;;;;:::i;4206:164::-;4309:54;665:10:7;4329:9:2;4340:6;4348:4;4309:54;;;;;;;;;;;;4358:4;4309:5;:54::i;:::-;4206:164;;;:::o;4601:439::-;4687:4;-1:-1:-1;;;;;4711:23:2;;4703:72;;;;-1:-1:-1;;;4703:72:2;;;;;;;:::i;:::-;4786:12;665:10:7;4786:27:2;;4824:56;4842:4;4848;4854:9;4865:6;4824:56;;;;;;;;;;;;;;;;;;;;;;;;:17;:56::i;:::-;4891:44;4897:4;4903;4909:9;4920:6;4891:44;;;;;;;;;;;;;;;;;;;;;;;;:5;:44::i;:::-;4946:65;4966:4;4972;4978:9;4989:6;4946:65;;;;;;;;;;;;;;;;;;;;;;;;5005:5;4946:19;:65::i;5361:299::-;5461:4;5496:11;-1:-1:-1;;;;;5484:23:2;:8;-1:-1:-1;;;;;5484:23:2;;:120;;;-1:-1:-1;;;;;;5524:27:2;;;;;;:17;:27;;;;;;;;:79;;;;-1:-1:-1;;;;;;5556:37:2;;;;;;;:24;:37;;;;;;;;:47;;;;;;;;;;;;5555:48;5524:79;5484:169;;;-1:-1:-1;;;;;;5620:23:2;;;;;;;:10;:23;;;;;;;;:33;;;;;;;;;;;;5484:169;5477:176;5361:299;-1:-1:-1;;;5361:299:2:o;6204:404::-;665:10:7;-1:-1:-1;;;;;6289:24:2;;;6281:70;;;;-1:-1:-1;;;6281:70:2;;9761:2:9;6281:70:2;;;9743:21:9;9800:2;9780:18;;;9773:30;9839:34;9819:18;;;9812:62;-1:-1:-1;;;9890:18:9;;;9883:31;9931:19;;6281:70:2;9559:397:9;6281:70:2;-1:-1:-1;;;;;6366:27:2;;;;;;:17;:27;;;;;;;;6362:185;;;665:10:7;6409:38:2;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;6409:48:2;;;;;;;;;:55;;-1:-1:-1;;6409:55:2;6460:4;6409:55;;;6362:185;;;665:10:7;6502:24:2;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6502:34:2;;;;;;;;;6495:41;;-1:-1:-1;;6495:41:2;;;6362:185;6562:39;;665:10:7;;-1:-1:-1;;;;;6562:39:2;;;;;;;;6204:404;:::o;7438:287::-;7581:36;665:10:7;7609:7:2;7581:13;:36::i;:::-;7573:93;;;;-1:-1:-1;;;7573:93:2;;;;;;;:::i;:::-;7676:42;7682:7;7691:6;7699:4;7705:12;7676:5;:42::i;:::-;7438:287;;;;:::o;5170:128::-;5254:37;665:10:7;5274:6:2;5282:4;5254:37;;;;;;;;;;;;:5;:37::i;:::-;5170:128;;:::o;14752:335::-;-1:-1:-1;;;;;14845:20:2;;14837:70;;;;-1:-1:-1;;;14837:70:2;;10163:2:9;14837:70:2;;;10145:21:9;10202:2;10182:18;;;10175:30;10241:34;10221:18;;;10214:62;-1:-1:-1;;;10292:18:9;;;10285:35;10337:19;;14837:70:2;9961:401:9;14837:70:2;-1:-1:-1;;;;;14925:21:2;;14917:69;;;;-1:-1:-1;;;14917:69:2;;10569:2:9;14917:69:2;;;10551:21:9;10608:2;10588:18;;;10581:30;10647:34;10627:18;;;10620:62;-1:-1:-1;;;10698:18:9;;;10691:33;10741:19;;14917:69:2;10367:399:9;14917:69:2;-1:-1:-1;;;;;14997:19:2;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:36;;;15048:32;;2124:25:9;;;15048:32:2;;2097:18:9;15048:32:2;;;;;;;14752:335;;;:::o;15560:484::-;15803:78;;-1:-1:-1;;;15803:78:2;;-1:-1:-1;;;;;10963:32:9;;15803:78:2;;;10945:51:9;1417:31:2;11012:18:9;;;11005:34;15781:19:2;;1168:42;;15803:41;;10918:18:9;;15803:78:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15781:100;-1:-1:-1;;;;;;15895:25:2;;;15891:147;;15936:91;;-1:-1:-1;;;15936:91:2;;-1:-1:-1;;;;;15936:39:2;;;;;:91;;15976:8;;15986:4;;15992:2;;15996:6;;16004:8;;16014:12;;15936:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15891:147;15771:273;15560:484;;;;;;:::o;14025:589::-;-1:-1:-1;;;;;14315:15:2;;14293:19;14315:15;;;;;;;;;;;14348:21;;;;14340:73;;;;-1:-1:-1;;;14340:73:2;;12245:2:9;14340:73:2;;;12227:21:9;12284:2;12264:18;;;12257:30;12323:34;12303:18;;;12296:62;-1:-1:-1;;;12374:18:9;;;12367:37;12421:19;;14340:73:2;12043:403:9;14340:73:2;14441:20;14455:6;14441:11;:20;:::i;:::-;-1:-1:-1;;;;;14423:15:2;;;:9;:15;;;;;;;;;;;:38;;;;14471:13;;;;;;;;:23;;14488:6;;14423:9;14471:23;;14488:6;;14471:23;:::i;:::-;;;;;;;;14531:2;-1:-1:-1;;;;;14510:56:2;14525:4;-1:-1:-1;;;;;14510:56:2;14515:8;-1:-1:-1;;;;;14510:56:2;;14535:6;14543:8;14553:12;14510:56;;;;;;;;:::i;:::-;;;;;;;;14596:2;-1:-1:-1;;;;;14581:26:2;14590:4;-1:-1:-1;;;;;14581:26:2;;14600:6;14581:26;;;;2124:25:9;;2112:2;2097:18;;1978:177;14581:26:2;;;;;;;;14224:390;14025:589;;;;;;:::o;16733:688::-;17012:79;;-1:-1:-1;;;17012:79:2;;-1:-1:-1;;;;;10963:32:9;;17012:79:2;;;10945:51:9;1514:34:2;11012:18:9;;;11005:34;16990:19:2;;1168:42;;17012:41;;10918:18:9;;17012:79:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16990:101;-1:-1:-1;;;;;;17105:25:2;;;17101:314;;17146:96;;-1:-1:-1;;;17146:96:2;;-1:-1:-1;;;;;17146:44:2;;;;;:96;;17191:8;;17201:4;;17207:2;;17211:6;;17219:8;;17229:12;;17146:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17101:314;;;17263:19;17259:156;;;-1:-1:-1;;;;;17307:13:2;;1078:20:6;1116:8;17298:106:2;;;;-1:-1:-1;;;17298:106:2;;13238:2:9;17298:106:2;;;13220:21:9;13277:2;13257:18;;;13250:30;13316:34;13296:18;;;13289:62;13387:34;13367:18;;;13360:62;-1:-1:-1;;;13438:19:9;;;13431:44;13492:19;;17298:106:2;13036:481:9;17298:106:2;16980:441;16733:688;;;;;;;:::o;12247:670::-;-1:-1:-1;;;;;12489:18:2;;12481:65;;;;-1:-1:-1;;;12481:65:2;;13724:2:9;12481:65:2;;;13706:21:9;13763:2;13743:18;;;13736:30;13802:34;13782:18;;;13775:62;-1:-1:-1;;;13853:18:9;;;13846:32;13895:19;;12481:65:2;13522:398:9;12481:65:2;-1:-1:-1;;;;;12564:16:2;;12556:61;;;;-1:-1:-1;;;12556:61:2;;14127:2:9;12556:61:2;;;14109:21:9;;;14146:18;;;14139:30;14205:34;14185:18;;;14178:62;14257:18;;12556:61:2;13925:356:9;12556:61:2;665:10:7;12670:69:2;665:10:7;12698:4:2;12704:2;12708:6;12716:8;12726:12;12670:17;:69::i;:::-;12750:57;12756:8;12766:4;12772:2;12776:6;12784:8;12794:12;12750:5;:57::i;:::-;12818:92;12838:8;12848:4;12854:2;12858:6;12866:8;12876:12;12890:19;12818;:92::i;13222:797::-;-1:-1:-1;;;;;13406:18:2;;13398:65;;;;-1:-1:-1;;;13398:65:2;;14488:2:9;13398:65:2;;;14470:21:9;14527:2;14507:18;;;14500:30;14566:34;14546:18;;;14539:62;-1:-1:-1;;;14617:18:9;;;14610:32;14659:19;;13398:65:2;14286:398:9;13398:65:2;665:10:7;13516:73:2;665:10:7;13544:4:2;13474:16;13562:6;13570:4;13576:12;13516:17;:73::i;:::-;-1:-1:-1;;;;;13723:15:2;;13701:19;13723:15;;;;;;;;;;;13756:21;;;;13748:69;;;;-1:-1:-1;;;13748:69:2;;14891:2:9;13748:69:2;;;14873:21:9;14930:2;14910:18;;;14903:30;14969:34;14949:18;;;14942:62;-1:-1:-1;;;15020:18:9;;;15013:33;15063:19;;13748:69:2;14689:399:9;13748:69:2;13845:20;13859:6;13845:11;:20;:::i;:::-;-1:-1:-1;;;;;13827:15:2;;:9;:15;;;;;;;;;;:38;;;;13875:12;:22;;13891:6;;13827:9;13875:22;;13891:6;;13875:22;:::i;:::-;;;;;;;;13930:4;-1:-1:-1;;;;;13913:50:2;13920:8;-1:-1:-1;;;;;13913:50:2;;13936:6;13944:4;13950:12;13913:50;;;;;;;;:::i;:::-;;;;;;;;13978:34;;2124:25:9;;;14001:1:2;;-1:-1:-1;;;;;13978:34:2;;;;;2112:2:9;2097:18;13978:34:2;;;;;;;13388:631;;13222:797;;;;:::o;14:658:9:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:9;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:9;;14:658;-1:-1:-1;;;;;;14:658:9:o;677:423::-;719:3;757:5;751:12;784:6;779:3;772:19;809:1;819:162;833:6;830:1;827:13;819:162;;;895:4;951:13;;;947:22;;941:29;923:11;;;919:20;;912:59;848:12;819:162;;;823:3;1026:1;1019:4;1010:6;1005:3;1001:16;997:27;990:38;1089:4;1082:2;1078:7;1073:2;1065:6;1061:15;1057:29;1052:3;1048:39;1044:50;1037:57;;;677:423;;;;:::o;1105:220::-;1254:2;1243:9;1236:21;1217:4;1274:45;1315:2;1304:9;1300:18;1292:6;1274:45;:::i;1330:131::-;-1:-1:-1;;;;;1405:31:9;;1395:42;;1385:70;;1451:1;1448;1441:12;1385:70;1330:131;:::o;1466:315::-;1534:6;1542;1595:2;1583:9;1574:7;1570:23;1566:32;1563:52;;;1611:1;1608;1601:12;1563:52;1650:9;1637:23;1669:31;1694:5;1669:31;:::i;:::-;1719:5;1771:2;1756:18;;;;1743:32;;-1:-1:-1;;;1466:315:9:o;2160:456::-;2237:6;2245;2253;2306:2;2294:9;2285:7;2281:23;2277:32;2274:52;;;2322:1;2319;2312:12;2274:52;2361:9;2348:23;2380:31;2405:5;2380:31;:::i;:::-;2430:5;-1:-1:-1;2487:2:9;2472:18;;2459:32;2500:33;2459:32;2500:33;:::i;:::-;2160:456;;2552:7;;-1:-1:-1;;;2606:2:9;2591:18;;;;2578:32;;2160:456::o;2810:127::-;2871:10;2866:3;2862:20;2859:1;2852:31;2902:4;2899:1;2892:15;2926:4;2923:1;2916:15;2942:718;2984:5;3037:3;3030:4;3022:6;3018:17;3014:27;3004:55;;3055:1;3052;3045:12;3004:55;3091:6;3078:20;3117:18;3154:2;3150;3147:10;3144:36;;;3160:18;;:::i;:::-;3235:2;3229:9;3203:2;3289:13;;-1:-1:-1;;3285:22:9;;;3309:2;3281:31;3277:40;3265:53;;;3333:18;;;3353:22;;;3330:46;3327:72;;;3379:18;;:::i;:::-;3419:10;3415:2;3408:22;3454:2;3446:6;3439:18;3500:3;3493:4;3488:2;3480:6;3476:15;3472:26;3469:35;3466:55;;;3517:1;3514;3507:12;3466:55;3581:2;3574:4;3566:6;3562:17;3555:4;3547:6;3543:17;3530:54;3628:1;3621:4;3616:2;3608:6;3604:15;3600:26;3593:37;3648:6;3639:15;;;;;;2942:718;;;;:::o;3665:885::-;3778:6;3786;3794;3802;3810;3863:3;3851:9;3842:7;3838:23;3834:33;3831:53;;;3880:1;3877;3870:12;3831:53;3919:9;3906:23;3938:31;3963:5;3938:31;:::i;:::-;3988:5;-1:-1:-1;4045:2:9;4030:18;;4017:32;4058:33;4017:32;4058:33;:::i;:::-;4110:7;-1:-1:-1;4164:2:9;4149:18;;4136:32;;-1:-1:-1;4219:2:9;4204:18;;4191:32;4242:18;4272:14;;;4269:34;;;4299:1;4296;4289:12;4269:34;4322:49;4363:7;4354:6;4343:9;4339:22;4322:49;:::i;:::-;4312:59;;4424:3;4413:9;4409:19;4396:33;4380:49;;4454:2;4444:8;4441:16;4438:36;;;4470:1;4467;4460:12;4438:36;;4493:51;4536:7;4525:8;4514:9;4510:24;4493:51;:::i;:::-;4483:61;;;3665:885;;;;;;;;:::o;4555:247::-;4614:6;4667:2;4655:9;4646:7;4642:23;4638:32;4635:52;;;4683:1;4680;4673:12;4635:52;4722:9;4709:23;4741:31;4766:5;4741:31;:::i;4807:523::-;4893:6;4901;4909;4962:2;4950:9;4941:7;4937:23;4933:32;4930:52;;;4978:1;4975;4968:12;4930:52;5017:9;5004:23;5036:31;5061:5;5036:31;:::i;:::-;5086:5;-1:-1:-1;5138:2:9;5123:18;;5110:32;;-1:-1:-1;5193:2:9;5178:18;;5165:32;5220:18;5209:30;;5206:50;;;5252:1;5249;5242:12;5206:50;5275:49;5316:7;5307:6;5296:9;5292:22;5275:49;:::i;:::-;5265:59;;;4807:523;;;;;:::o;5335:388::-;5403:6;5411;5464:2;5452:9;5443:7;5439:23;5435:32;5432:52;;;5480:1;5477;5470:12;5432:52;5519:9;5506:23;5538:31;5563:5;5538:31;:::i;:::-;5588:5;-1:-1:-1;5645:2:9;5630:18;;5617:32;5658:33;5617:32;5658:33;:::i;:::-;5710:7;5700:17;;;5335:388;;;;;:::o;5728:743::-;5832:6;5840;5848;5856;5909:3;5897:9;5888:7;5884:23;5880:33;5877:53;;;5926:1;5923;5916:12;5877:53;5965:9;5952:23;5984:31;6009:5;5984:31;:::i;:::-;6034:5;-1:-1:-1;6086:2:9;6071:18;;6058:32;;-1:-1:-1;6141:2:9;6126:18;;6113:32;6164:18;6194:14;;;6191:34;;;6221:1;6218;6211:12;6191:34;6244:49;6285:7;6276:6;6265:9;6261:22;6244:49;:::i;:::-;6234:59;;6346:2;6335:9;6331:18;6318:32;6302:48;;6375:2;6365:8;6362:16;6359:36;;;6391:1;6388;6381:12;6359:36;;6414:51;6457:7;6446:8;6435:9;6431:24;6414:51;:::i;:::-;6404:61;;;5728:743;;;;;;;:::o;6476:388::-;6553:6;6561;6614:2;6602:9;6593:7;6589:23;6585:32;6582:52;;;6630:1;6627;6620:12;6582:52;6666:9;6653:23;6643:33;;6727:2;6716:9;6712:18;6699:32;6754:18;6746:6;6743:30;6740:50;;;6786:1;6783;6776:12;6740:50;6809:49;6850:7;6841:6;6830:9;6826:22;6809:49;:::i;:::-;6799:59;;;6476:388;;;;;:::o;6869:380::-;6948:1;6944:12;;;;6991;;;7012:61;;7066:4;7058:6;7054:17;7044:27;;7012:61;7119:2;7111:6;7108:14;7088:18;7085:38;7082:161;;7165:10;7160:3;7156:20;7153:1;7146:31;7200:4;7197:1;7190:15;7228:4;7225:1;7218:15;7082:161;;6869:380;;;:::o;7254:400::-;7456:2;7438:21;;;7495:2;7475:18;;;7468:30;7534:34;7529:2;7514:18;;7507:62;-1:-1:-1;;;7600:2:9;7585:18;;7578:34;7644:3;7629:19;;7254:400::o;8476:127::-;8537:10;8532:3;8528:20;8525:1;8518:31;8568:4;8565:1;8558:15;8592:4;8589:1;8582:15;8608:128;8675:9;;;8696:11;;;8693:37;;;8710:18;;:::i;8741:408::-;8943:2;8925:21;;;8982:2;8962:18;;;8955:30;9021:34;9016:2;9001:18;;8994:62;-1:-1:-1;;;9087:2:9;9072:18;;9065:42;9139:3;9124:19;;8741:408::o;11050:251::-;11120:6;11173:2;11161:9;11152:7;11148:23;11144:32;11141:52;;;11189:1;11186;11179:12;11141:52;11221:9;11215:16;11240:31;11265:5;11240:31;:::i;11306:732::-;-1:-1:-1;;;;;11649:15:9;;;11631:34;;11701:15;;;11696:2;11681:18;;11674:43;11753:15;;11748:2;11733:18;;11726:43;11800:2;11785:18;;11778:34;;;11849:3;11843;11828:19;;11821:32;;;11574:4;;11876:46;;11902:19;;11894:6;11876:46;:::i;:::-;11971:9;11963:6;11959:22;11953:3;11942:9;11938:19;11931:51;11999:33;12025:6;12017;11999:33;:::i;:::-;11991:41;11306:732;-1:-1:-1;;;;;;;;;11306:732:9:o;12451:125::-;12516:9;;;12537:10;;;12534:36;;;12550:18;;:::i;12581:450::-;12802:6;12791:9;12784:25;12845:2;12840;12829:9;12825:18;12818:30;12765:4;12871:45;12912:2;12901:9;12897:18;12889:6;12871:45;:::i;:::-;12964:9;12956:6;12952:22;12947:2;12936:9;12932:18;12925:50;12992:33;13018:6;13010;12992:33;:::i;:::-;12984:41;12581:450;-1:-1:-1;;;;;;12581:450:9:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1213200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24667",
								"authorizeOperator(address)": "28508",
								"balanceOf(address)": "2645",
								"burn(uint256,bytes)": "infinite",
								"decimals()": "222",
								"defaultOperators()": "infinite",
								"granularity()": "259",
								"isOperatorFor(address,address)": "infinite",
								"name()": "infinite",
								"operatorBurn(address,uint256,bytes,bytes)": "infinite",
								"operatorSend(address,address,uint256,bytes,bytes)": "infinite",
								"revokeOperator(address)": "28557",
								"send(address,uint256,bytes)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2371",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256)": "infinite",
								"_burn(address,uint256,bytes memory,bytes memory)": "infinite",
								"_callTokensReceived(address,address,address,uint256,bytes memory,bytes memory,bool)": "infinite",
								"_callTokensToSend(address,address,address,uint256,bytes memory,bytes memory)": "infinite",
								"_mint(address,uint256,bytes memory,bytes memory)": "infinite",
								"_mint(address,uint256,bytes memory,bytes memory,bool)": "infinite",
								"_move(address,address,address,uint256,bytes memory,bytes memory)": "infinite",
								"_send(address,address,uint256,bytes memory,bytes memory,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2244,
									"end": 2856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2376,
									"end": 2381,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2384,
									"end": 2389,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2376,
									"end": 2381,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2376,
									"end": 2389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2399,
									"end": 2406,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2409,
									"end": 2416,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2399,
									"end": 2406,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2399,
									"end": 2416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2427,
									"end": 2449,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2427,
									"end": 2449,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2427,
									"end": 2469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2484,
									"end": 2493,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2503,
									"end": 2520,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2503,
									"end": 2527,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2499,
									"end": 2500,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2499,
									"end": 2527,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2590,
									"end": 2594,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2548,
									"end": 2565,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2566,
									"end": 2583,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2584,
									"end": 2585,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2566,
									"end": 2586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2529,
									"end": 2532,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "29965A1D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5812,
									"end": 5846,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5812,
									"end": 5846,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5812,
									"end": 5846,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2703,
									"end": 2727,
									"name": "PUSH",
									"source": 2,
									"value": "AC7FBAB5F54A3CA8194167523C6753BFEB96A445279294B6125B68CCE2177054"
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5855,
									"end": 5889,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 5941,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1168,
									"end": 1210,
									"name": "PUSH",
									"source": 2,
									"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
								},
								{
									"begin": 1168,
									"end": 1210,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2687,
									"name": "PUSH",
									"source": 2,
									"value": "29965A1D"
								},
								{
									"begin": 2646,
									"end": 2687,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5747,
									"end": 5765,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5747,
									"end": 5765,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "EXTCODESIZE",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "CALL",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "29965A1D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2803,
									"end": 2807,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5812,
									"end": 5846,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5812,
									"end": 5846,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5812,
									"end": 5846,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2810,
									"end": 2833,
									"name": "PUSH",
									"source": 2,
									"value": "AEA199E31A596269B42CDAFD93407F14436DB6E4CAD65417994C2EB37381E05A"
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5855,
									"end": 5889,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 5941,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1168,
									"end": 1210,
									"name": "PUSH",
									"source": 2,
									"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
								},
								{
									"begin": 1168,
									"end": 1210,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2753,
									"end": 2794,
									"name": "PUSH",
									"source": 2,
									"value": "29965A1D"
								},
								{
									"begin": 2753,
									"end": 2794,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5747,
									"end": 5765,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5747,
									"end": 5765,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "EXTCODESIZE",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "CALL",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 1014,
									"end": 18161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 146,
									"end": 421,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 146,
									"end": 421,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 217,
									"end": 219,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 211,
									"end": 220,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 282,
									"end": 284,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 263,
									"end": 276,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 263,
									"end": 276,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 259,
									"end": 286,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 247,
									"end": 287,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 247,
									"end": 287,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 302,
									"end": 336,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 302,
									"end": 336,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 338,
									"end": 360,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 338,
									"end": 360,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 338,
									"end": 360,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 299,
									"end": 361,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 296,
									"end": 384,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 296,
									"end": 384,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 296,
									"end": 384,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 364,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 364,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 364,
									"end": 382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 364,
									"end": 382,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 364,
									"end": 382,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 400,
									"end": 402,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 393,
									"end": 415,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 146,
									"end": 421,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 146,
									"end": 421,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 426,
									"end": 1076,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 426,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 480,
									"end": 485,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 526,
									"end": 530,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 518,
									"end": 524,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 514,
									"end": 531,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 510,
									"end": 537,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 500,
									"end": 555,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 500,
									"end": 555,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 551,
									"end": 552,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 548,
									"end": 549,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 553,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 500,
									"end": 555,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 500,
									"end": 555,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 574,
									"end": 587,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 574,
									"end": 587,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 599,
									"end": 625,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 599,
									"end": 625,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 596,
									"end": 648,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 596,
									"end": 648,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 596,
									"end": 648,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 628,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 628,
									"end": 646,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 628,
									"end": 646,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 667,
									"end": 671,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 695,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 738,
									"end": 740,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 719,
									"end": 732,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 719,
									"end": 732,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 715,
									"end": 742,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 711,
									"end": 747,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 711,
									"end": 747,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 695,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 695,
									"end": 748,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 695,
									"end": 748,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 695,
									"end": 748,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 775,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 764,
									"end": 771,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 757,
									"end": 776,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 817,
									"end": 820,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 812,
									"end": 814,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 807,
									"end": 809,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 799,
									"end": 805,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 795,
									"end": 810,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 791,
									"end": 815,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 788,
									"end": 821,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 785,
									"end": 838,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 785,
									"end": 838,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 785,
									"end": 838,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 834,
									"end": 835,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 831,
									"end": 832,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 824,
									"end": 836,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 785,
									"end": 838,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 785,
									"end": 838,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 856,
									"end": 857,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 880,
									"end": 882,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 877,
									"end": 878,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 874,
									"end": 883,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 969,
									"end": 983,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 969,
									"end": 983,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 969,
									"end": 983,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 965,
									"end": 988,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 965,
									"end": 988,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 959,
									"end": 989,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 937,
									"end": 952,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 937,
									"end": 952,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 937,
									"end": 952,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 933,
									"end": 957,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 933,
									"end": 957,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 926,
									"end": 990,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 891,
									"end": 901,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 891,
									"end": 901,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1043,
									"end": 1044,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1020,
									"end": 1036,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1020,
									"end": 1036,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1020,
									"end": 1036,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1016,
									"end": 1041,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1016,
									"end": 1041,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1016,
									"end": 1041,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1009,
									"end": 1045,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1009,
									"end": 1045,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1009,
									"end": 1045,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1009,
									"end": 1045,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1024,
									"end": 1031,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 426,
									"end": 1076,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 426,
									"end": 1076,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1081,
									"end": 2609,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1081,
									"end": 2609,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1214,
									"end": 1220,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1228,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1230,
									"end": 1236,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1285,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1271,
									"end": 1280,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1262,
									"end": 1269,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1258,
									"end": 1281,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1254,
									"end": 1286,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1303,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1303,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1303,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1299,
									"end": 1300,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 1297,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1289,
									"end": 1301,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1303,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1303,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1326,
									"end": 1342,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1326,
									"end": 1342,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1391,
									"end": 1405,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1391,
									"end": 1405,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1391,
									"end": 1405,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1388,
									"end": 1422,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1388,
									"end": 1422,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1388,
									"end": 1422,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1418,
									"end": 1419,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1415,
									"end": 1416,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1420,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1388,
									"end": 1422,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1388,
									"end": 1422,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1441,
									"end": 1502,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1494,
									"end": 1501,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1485,
									"end": 1491,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1483,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1492,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1441,
									"end": 1502,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1441,
									"end": 1502,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1441,
									"end": 1502,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1441,
									"end": 1502,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1431,
									"end": 1502,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1431,
									"end": 1502,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1523,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1569,
									"end": 1571,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1567,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1554,
									"end": 1572,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1548,
									"end": 1573,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1598,
									"end": 1600,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1588,
									"end": 1596,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1585,
									"end": 1601,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1618,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1618,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1582,
									"end": 1618,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1614,
									"end": 1615,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1611,
									"end": 1612,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1604,
									"end": 1616,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1618,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1582,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1637,
									"end": 1700,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1692,
									"end": 1699,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1681,
									"end": 1689,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1670,
									"end": 1679,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 1666,
									"end": 1690,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1637,
									"end": 1700,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1637,
									"end": 1700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1637,
									"end": 1700,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1637,
									"end": 1700,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1627,
									"end": 1700,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1627,
									"end": 1700,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1627,
									"end": 1700,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1746,
									"end": 1748,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1735,
									"end": 1744,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1731,
									"end": 1749,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1725,
									"end": 1750,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1775,
									"end": 1777,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1765,
									"end": 1773,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1762,
									"end": 1778,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1795,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1759,
									"end": 1795,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1788,
									"end": 1789,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1781,
									"end": 1793,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1795,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1759,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1814,
									"end": 1838,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1814,
									"end": 1838,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1861,
									"end": 1874,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1861,
									"end": 1874,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1857,
									"end": 1884,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SGT",
									"source": -1
								},
								{
									"begin": 1847,
									"end": 1902,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1847,
									"end": 1902,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1898,
									"end": 1899,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 1896,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1888,
									"end": 1900,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1847,
									"end": 1902,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1847,
									"end": 1902,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1927,
									"end": 1929,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1921,
									"end": 1930,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1949,
									"end": 1951,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1945,
									"end": 1947,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 1952,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1939,
									"end": 1975,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1939,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1939,
									"end": 1975,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1955,
									"end": 1973,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1955,
									"end": 1973,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 1955,
									"end": 1973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1955,
									"end": 1973,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1955,
									"end": 1973,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2001,
									"end": 2003,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1998,
									"end": 1999,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1994,
									"end": 2004,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1984,
									"end": 2004,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1984,
									"end": 2004,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2052,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2048,
									"end": 2050,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2044,
									"end": 2046,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2040,
									"end": 2051,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2052,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 2024,
									"end": 2052,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2052,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2024,
									"end": 2052,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2086,
									"end": 2101,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2086,
									"end": 2101,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2086,
									"end": 2101,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2156,
									"end": 2167,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2156,
									"end": 2167,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2156,
									"end": 2167,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2172,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2172,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2172,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2129,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2129,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2129,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2129,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2184,
									"end": 2203,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 2184,
									"end": 2203,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2184,
									"end": 2203,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2181,
									"end": 2220,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2181,
									"end": 2220,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2181,
									"end": 2220,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2216,
									"end": 2217,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2213,
									"end": 2214,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2206,
									"end": 2218,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2181,
									"end": 2220,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2181,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2240,
									"end": 2251,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2240,
									"end": 2251,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2240,
									"end": 2251,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2240,
									"end": 2251,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2276,
									"end": 2282,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2271,
									"end": 2274,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2268,
									"end": 2283,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2343,
									"end": 2353,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2343,
									"end": 2353,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2343,
									"end": 2353,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2386,
									"end": 2417,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2386,
									"end": 2417,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2376,
									"end": 2418,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2376,
									"end": 2418,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2506,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2366,
									"end": 2506,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2489,
									"end": 2491,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2485,
									"end": 2487,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2478,
									"end": 2492,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2506,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2366,
									"end": 2506,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2519,
									"end": 2537,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2519,
									"end": 2537,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2519,
									"end": 2537,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2293,
									"end": 2305,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2293,
									"end": 2305,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2293,
									"end": 2305,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2293,
									"end": 2305,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2598,
									"end": 2603,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1081,
									"end": 2609,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1081,
									"end": 2609,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1081,
									"end": 2609,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1081,
									"end": 2609,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1081,
									"end": 2609,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1081,
									"end": 2609,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2994,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 2614,
									"end": 2994,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2693,
									"end": 2694,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2689,
									"end": 2701,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2689,
									"end": 2701,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2689,
									"end": 2701,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2689,
									"end": 2701,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2736,
									"end": 2748,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2736,
									"end": 2748,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2736,
									"end": 2748,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2757,
									"end": 2818,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2757,
									"end": 2818,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2811,
									"end": 2815,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 2803,
									"end": 2809,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2799,
									"end": 2816,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2789,
									"end": 2816,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2789,
									"end": 2816,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2757,
									"end": 2818,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2757,
									"end": 2818,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2864,
									"end": 2866,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2856,
									"end": 2862,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2853,
									"end": 2867,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2833,
									"end": 2851,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2830,
									"end": 2868,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2827,
									"end": 2988,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2827,
									"end": 2988,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 2905,
									"end": 2908,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 2901,
									"end": 2921,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2898,
									"end": 2899,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2891,
									"end": 2922,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2945,
									"end": 2949,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2942,
									"end": 2943,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2935,
									"end": 2950,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2973,
									"end": 2977,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2970,
									"end": 2971,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2963,
									"end": 2978,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2827,
									"end": 2988,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2827,
									"end": 2988,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2827,
									"end": 2988,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2994,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2994,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2994,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3125,
									"end": 3670,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3125,
									"end": 3670,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3227,
									"end": 3229,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3222,
									"end": 3225,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3219,
									"end": 3230,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3664,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3664,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3216,
									"end": 3664,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3263,
									"end": 3264,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3288,
									"end": 3293,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3284,
									"end": 3286,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3277,
									"end": 3294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3333,
									"end": 3337,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3329,
									"end": 3331,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3319,
									"end": 3338,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 3403,
									"end": 3405,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3391,
									"end": 3401,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3387,
									"end": 3406,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3384,
									"end": 3385,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 3380,
									"end": 3407,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3374,
									"end": 3378,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3370,
									"end": 3408,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3439,
									"end": 3443,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3427,
									"end": 3437,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3424,
									"end": 3444,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3421,
									"end": 3468,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3421,
									"end": 3468,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3421,
									"end": 3468,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3421,
									"end": 3468,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3421,
									"end": 3468,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3517,
									"end": 3519,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3512,
									"end": 3515,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3508,
									"end": 3520,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3505,
									"end": 3506,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 3501,
									"end": 3521,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3495,
									"end": 3499,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3491,
									"end": 3522,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3481,
									"end": 3522,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3481,
									"end": 3522,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3590,
									"end": 3592,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3583,
									"end": 3588,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3580,
									"end": 3593,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3635,
									"end": 3652,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3635,
									"end": 3652,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3635,
									"end": 3652,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3616,
									"end": 3617,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3605,
									"end": 3618,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3576,
									"end": 3579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3576,
									"end": 3579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3576,
									"end": 3579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3664,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3216,
									"end": 3664,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3125,
									"end": 3670,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3125,
									"end": 3670,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3125,
									"end": 3670,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3125,
									"end": 3670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3846,
									"end": 5198,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 3846,
									"end": 5198,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3966,
									"end": 3976,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3966,
									"end": 3976,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3988,
									"end": 4018,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3988,
									"end": 4018,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3985,
									"end": 4041,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3985,
									"end": 4041,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 3985,
									"end": 4041,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 4021,
									"end": 4039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4050,
									"end": 4147,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 4140,
									"end": 4146,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4100,
									"end": 4138,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 4132,
									"end": 4136,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4137,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4100,
									"end": 4138,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 4100,
									"end": 4138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4100,
									"end": 4138,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 4100,
									"end": 4138,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4098,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4050,
									"end": 4147,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 4050,
									"end": 4147,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4050,
									"end": 4147,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 4050,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4266,
									"end": 4268,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4255,
									"end": 4269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4255,
									"end": 4269,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4283,
									"end": 4284,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4278,
									"end": 4941,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4278,
									"end": 4941,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 4278,
									"end": 4941,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 4278,
									"end": 4941,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4985,
									"end": 4986,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5002,
									"end": 5008,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4999,
									"end": 5088,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4999,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 4999,
									"end": 5088,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5054,
									"end": 5073,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5054,
									"end": 5073,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5054,
									"end": 5073,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5048,
									"end": 5074,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4999,
									"end": 5088,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 4999,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3803,
									"end": 3804,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3799,
									"end": 3810,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3799,
									"end": 3810,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3799,
									"end": 3810,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3795,
									"end": 3819,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3791,
									"end": 3820,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3781,
									"end": 3821,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 3828,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3823,
									"end": 3834,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3823,
									"end": 3834,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3823,
									"end": 3834,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3778,
									"end": 3835,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 5101,
									"end": 5182,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5101,
									"end": 5182,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4248,
									"end": 5192,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 4248,
									"end": 5192,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4278,
									"end": 4941,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 4278,
									"end": 4941,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3072,
									"end": 3073,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3065,
									"end": 3079,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3065,
									"end": 3079,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3065,
									"end": 3079,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3109,
									"end": 3113,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3096,
									"end": 3114,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3096,
									"end": 3114,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4314,
									"end": 4334,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4314,
									"end": 4334,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4314,
									"end": 4334,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4446,
									"end": 4453,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4443,
									"end": 4444,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4440,
									"end": 4454,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4535,
									"end": 4554,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4535,
									"end": 4554,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4535,
									"end": 4554,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4529,
									"end": 4555,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4514,
									"end": 4556,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4514,
									"end": 4556,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4627,
									"end": 4654,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 4627,
									"end": 4654,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4627,
									"end": 4654,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4627,
									"end": 4654,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 4595,
									"end": 4596,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4583,
									"end": 4597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4583,
									"end": 4597,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4583,
									"end": 4597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4583,
									"end": 4597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4462,
									"end": 4481,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4462,
									"end": 4481,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4436,
									"end": 4439,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4696,
									"end": 4702,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4687,
									"end": 4694,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4684,
									"end": 4703,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4681,
									"end": 4882,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4681,
									"end": 4882,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 4681,
									"end": 4882,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4757,
									"end": 4776,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4757,
									"end": 4776,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4757,
									"end": 4776,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4751,
									"end": 4777,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4840,
									"end": 4841,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 4836,
									"end": 4850,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4836,
									"end": 4850,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4836,
									"end": 4850,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 4852,
									"end": 4855,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4828,
									"end": 4865,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 4824,
									"end": 4866,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4809,
									"end": 4867,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4794,
									"end": 4868,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4794,
									"end": 4868,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4681,
									"end": 4882,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 4681,
									"end": 4882,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4928,
									"end": 4929,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4912,
									"end": 4926,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4912,
									"end": 4926,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4912,
									"end": 4926,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 4908,
									"end": 4930,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4895,
									"end": 4931,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4895,
									"end": 4931,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3846,
									"end": 5198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5203,
									"end": 5330,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 5203,
									"end": 5330,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5264,
									"end": 5274,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 5259,
									"end": 5262,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 5255,
									"end": 5275,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 5252,
									"end": 5253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5245,
									"end": 5276,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5295,
									"end": 5299,
									"name": "PUSH",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 5292,
									"end": 5293,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 5285,
									"end": 5300,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5319,
									"end": 5323,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 5316,
									"end": 5317,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5309,
									"end": 5324,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 5335,
									"end": 5567,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 5335,
									"end": 5567,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5374,
									"end": 5377,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5395,
									"end": 5412,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5395,
									"end": 5412,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5395,
									"end": 5412,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5392,
									"end": 5532,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 5392,
									"end": 5532,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5454,
									"end": 5464,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 5449,
									"end": 5452,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 5445,
									"end": 5465,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 5442,
									"end": 5443,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5435,
									"end": 5466,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5489,
									"end": 5493,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 5486,
									"end": 5487,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 5479,
									"end": 5494,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5517,
									"end": 5521,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 5514,
									"end": 5515,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5507,
									"end": 5522,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 5392,
									"end": 5532,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 5392,
									"end": 5532,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5559,
									"end": 5560,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5548,
									"end": 5561,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5548,
									"end": 5561,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5335,
									"end": 5567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5572,
									"end": 5947,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 5572,
									"end": 5947,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209269d2ab00a61e3dce882c580b024fcfde8035f3a20c6c206d5e62432193465b64736f6c63430008130033",
									".code": [
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "959B8C3F"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "D95B6371"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "D95B6371"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "FAD8B32A"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "FC673C4F"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "FE9D9303"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "959B8C3F"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "9BD9BBC6"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "556F0DC7"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "62AD1B83"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "6E48538"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6674,
											"end": 6804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 6674,
											"end": 6804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2910,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2910,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 8253,
											"end": 8450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 8253,
											"end": 8450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1951,
											"end": 1965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1951,
											"end": 1965,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1966,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1967,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1914,
											"end": 1916,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1917,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1786,
											"end": 1973,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3703,
											"end": 3826,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3703,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3807,
											"end": 3819,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3807,
											"end": 3819,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3826,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3703,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3826,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3703,
											"end": 3826,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2149,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2149,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3703,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1978,
											"end": 2155,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 8815,
											"end": 9591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 8815,
											"end": 9591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3432,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3350,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3432,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3432,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3425,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2763,
											"end": 2799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2751,
											"end": 2753,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3350,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2621,
											"end": 2805,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3547,
											"end": 3642,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3547,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3547,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3547,
											"end": 3642,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 6923,
											"end": 7317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6923,
											"end": 7317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3926,
											"end": 4076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4021,
											"end": 4028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5727,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5727,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3064,
											"end": 3166,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3064,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3064,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3064,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3064,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4206,
											"end": 4370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4206,
											"end": 4370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4601,
											"end": 5040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4601,
											"end": 5040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5361,
											"end": 5660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5361,
											"end": 5660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 7964,
											"end": 8115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8091,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6204,
											"end": 6608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6204,
											"end": 6608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 7438,
											"end": 7725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 7438,
											"end": 7725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 5170,
											"end": 5298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5170,
											"end": 5298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6740,
											"end": 6756,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6775,
											"end": 6797,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2996,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2989,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2989,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2910,
											"end": 3008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8339,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8407,
											"end": 8414,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8416,
											"end": 8421,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8390,
											"end": 8398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 8390,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8439,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8432,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8432,
											"end": 8443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8432,
											"end": 8443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8921,
											"end": 8925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8945,
											"end": 8968,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8945,
											"end": 8968,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 8937,
											"end": 9009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9027,
											"end": 9047,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9027,
											"end": 9047,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7861,
											"end": 7863,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7843,
											"end": 7864,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7900,
											"end": 7902,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 7880,
											"end": 7898,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7880,
											"end": 7898,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7880,
											"end": 7898,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7873,
											"end": 7903,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7939,
											"end": 7973,
											"name": "PUSH",
											"source": 9,
											"value": "4552433737373A207472616E736665722066726F6D20746865207A65726F2061"
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7912,
											"end": 7974,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7983,
											"end": 8019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8036,
											"end": 8055,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8036,
											"end": 8055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 7659,
											"end": 8061,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9101,
											"end": 9116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9101,
											"end": 9131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9101,
											"end": 9131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 9160,
											"end": 9167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9175,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9186,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 9142,
											"end": 9203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 9220,
											"end": 9227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9229,
											"end": 9235,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9237,
											"end": 9246,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9248,
											"end": 9254,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 9214,
											"end": 9263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9274,
											"end": 9298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9312,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9347,
											"end": 9373,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9347,
											"end": 9373,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9347,
											"end": 9373,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9347,
											"end": 9373,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8268,
											"end": 8270,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8250,
											"end": 8271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8307,
											"end": 8309,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 8287,
											"end": 8305,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8287,
											"end": 8305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8287,
											"end": 8305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8280,
											"end": 8310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8346,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "4552433737373A207472616E7366657220616D6F756E74206578636565647320"
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8319,
											"end": 8381,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8429,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8446,
											"end": 8465,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8446,
											"end": 8465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 8066,
											"end": 8471,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9429,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 9438,
											"end": 9444,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9453,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9455,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 9474,
											"end": 9480,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9455,
											"end": 9471,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9455,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 9455,
											"end": 9480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9455,
											"end": 9480,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 9455,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9429,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 9429,
											"end": 9481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9429,
											"end": 9481,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 9429,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 9512,
											"end": 9519,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9521,
											"end": 9527,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9529,
											"end": 9538,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9546,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9556,
											"end": 9561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9492,
											"end": 9511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 9492,
											"end": 9562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9580,
											"end": 9584,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9580,
											"end": 9584,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8815,
											"end": 9591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7158,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7186,
											"end": 7192,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7158,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7158,
											"end": 7193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7158,
											"end": 7193,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7158,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7150,
											"end": 7242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7258,
											"end": 7264,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7266,
											"end": 7275,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7283,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7289,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7291,
											"end": 7303,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7305,
											"end": 7309,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 7252,
											"end": 7310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7310,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7252,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 7317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5815,
											"end": 5839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5815,
											"end": 5839,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5839,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9356,
											"end": 9358,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9338,
											"end": 9359,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9395,
											"end": 9397,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9375,
											"end": 9393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9375,
											"end": 9393,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9375,
											"end": 9393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9368,
											"end": 9398,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9434,
											"end": 9468,
											"name": "PUSH",
											"source": 9,
											"value": "4552433737373A20617574686F72697A696E672073656C66206173206F706572"
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9469,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9478,
											"end": 9512,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9529,
											"end": 9548,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9529,
											"end": 9548,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 9154,
											"end": 9554,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5895,
											"end": 5912,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5969,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 5993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 5993,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5938,
											"end": 5993,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 5993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 5993,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6034,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6065,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6065,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6024,
											"end": 6065,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6061,
											"end": 6065,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6024,
											"end": 6065,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6024,
											"end": 6065,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 665,
											"end": 675,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "PUSH",
											"source": 2,
											"value": "F4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9"
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 6140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3064,
											"end": 3166,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3064,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3133,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3152,
											"end": 3159,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3145,
											"end": 3159,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3159,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3145,
											"end": 3159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3145,
											"end": 3159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4338,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4346,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4352,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4358,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4309,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4309,
											"end": 4363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4687,
											"end": 4691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4711,
											"end": 4734,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4711,
											"end": 4734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4703,
											"end": 4775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4786,
											"end": 4813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4813,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4842,
											"end": 4846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4852,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4854,
											"end": 4863,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4824,
											"end": 4880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4897,
											"end": 4901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4903,
											"end": 4907,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4909,
											"end": 4918,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4920,
											"end": 4926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4891,
											"end": 4935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4966,
											"end": 4970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4972,
											"end": 4976,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4978,
											"end": 4987,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 4995,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5005,
											"end": 5010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4946,
											"end": 5011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5461,
											"end": 5465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5496,
											"end": 5507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5484,
											"end": 5507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5492,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5484,
											"end": 5507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5507,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5484,
											"end": 5604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5541,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5580,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5555,
											"end": 5603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5653,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5484,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5630,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5484,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5653,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5361,
											"end": 5660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6289,
											"end": 6313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6289,
											"end": 6313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6289,
											"end": 6313,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9761,
											"end": 9763,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9743,
											"end": 9764,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9802,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9773,
											"end": 9803,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9839,
											"end": 9873,
											"name": "PUSH",
											"source": 9,
											"value": "4552433737373A207265766F6B696E672073656C66206173206F70657261746F"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9812,
											"end": 9874,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9890,
											"end": 9908,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9890,
											"end": 9908,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9890,
											"end": 9908,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9883,
											"end": 9914,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9950,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9931,
											"end": 9950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 9559,
											"end": 9956,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6433,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6409,
											"end": 6464,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6460,
											"end": 6464,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6409,
											"end": 6464,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6464,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6536,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6536,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6495,
											"end": 6536,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6536,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 665,
											"end": 675,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "PUSH",
											"source": 2,
											"value": "50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1"
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7581,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7616,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7581,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7581,
											"end": 7617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7581,
											"end": 7617,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 7581,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7573,
											"end": 7666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7676,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7682,
											"end": 7689,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7691,
											"end": 7697,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7703,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7705,
											"end": 7717,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7676,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7676,
											"end": 7718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7676,
											"end": 7718,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7676,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5274,
											"end": 5280,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5286,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5254,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14752,
											"end": 15087,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 14752,
											"end": 15087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14845,
											"end": 14865,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14845,
											"end": 14865,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10165,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10202,
											"end": 10204,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10241,
											"end": 10275,
											"name": "PUSH",
											"source": 9,
											"value": "4552433737373A20617070726F76652066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10221,
											"end": 10239,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10221,
											"end": 10239,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10221,
											"end": 10239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10276,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10292,
											"end": 10310,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10292,
											"end": 10310,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10292,
											"end": 10310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10285,
											"end": 10320,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10337,
											"end": 10356,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10337,
											"end": 10356,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 9961,
											"end": 10362,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14925,
											"end": 14946,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14925,
											"end": 14946,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10569,
											"end": 10571,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10551,
											"end": 10572,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10608,
											"end": 10610,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 10588,
											"end": 10606,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10588,
											"end": 10606,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10588,
											"end": 10606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10581,
											"end": 10611,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10647,
											"end": 10681,
											"name": "PUSH",
											"source": 9,
											"value": "4552433737373A20617070726F766520746F20746865207A65726F2061646472"
										},
										{
											"begin": 10627,
											"end": 10645,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10627,
											"end": 10645,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10627,
											"end": 10645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10620,
											"end": 10682,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10698,
											"end": 10716,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10698,
											"end": 10716,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10698,
											"end": 10716,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10691,
											"end": 10724,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10741,
											"end": 10760,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10741,
											"end": 10760,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10367,
											"end": 10766,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15008,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15033,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15033,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2149,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2149,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 14752,
											"end": 15087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14752,
											"end": 15087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14752,
											"end": 15087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14752,
											"end": 15087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "555DDC65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10963,
											"end": 10995,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 10995,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 10996,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
										},
										{
											"begin": 11012,
											"end": 11030,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11012,
											"end": 11030,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11012,
											"end": 11030,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11005,
											"end": 11039,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15781,
											"end": 15800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15781,
											"end": 15800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1210,
											"name": "PUSH",
											"source": 2,
											"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
										},
										{
											"begin": 1168,
											"end": 1210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15844,
											"name": "PUSH",
											"source": 2,
											"value": "AABBB8CA"
										},
										{
											"begin": 15803,
											"end": 15844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10918,
											"end": 10936,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10918,
											"end": 10936,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 15803,
											"end": 15881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15895,
											"end": 15920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15895,
											"end": 15920,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15895,
											"end": 15920,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15891,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 15891,
											"end": 16038,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3AD5CBC1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15936,
											"end": 15975,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 15975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 15975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 15975,
											"name": "PUSH",
											"source": 2,
											"value": "75AB9782"
										},
										{
											"begin": 15936,
											"end": 15975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15976,
											"end": 15984,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 15976,
											"end": 15984,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15992,
											"end": 15994,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 15992,
											"end": 15994,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16002,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16004,
											"end": 16012,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 16004,
											"end": 16012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16014,
											"end": 16026,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 16014,
											"end": 16026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 15936,
											"end": 16027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15891,
											"end": 16038,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 15891,
											"end": 16038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15771,
											"end": 16044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15560,
											"end": 16044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14293,
											"end": 14312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14348,
											"end": 14369,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14348,
											"end": 14369,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14348,
											"end": 14369,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14348,
											"end": 14369,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12245,
											"end": 12247,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12227,
											"end": 12248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12284,
											"end": 12286,
											"name": "PUSH",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 12264,
											"end": 12282,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12264,
											"end": 12282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12264,
											"end": 12282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12257,
											"end": 12287,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12323,
											"end": 12357,
											"name": "PUSH",
											"source": 9,
											"value": "4552433737373A207472616E7366657220616D6F756E74206578636565647320"
										},
										{
											"begin": 12303,
											"end": 12321,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12303,
											"end": 12321,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12303,
											"end": 12321,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12296,
											"end": 12358,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12374,
											"end": 12392,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12374,
											"end": 12392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12374,
											"end": 12392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12367,
											"end": 12404,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12421,
											"end": 12440,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 12421,
											"end": 12440,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 12043,
											"end": 12446,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14441,
											"end": 14461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 14455,
											"end": 14461,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14441,
											"end": 14452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14441,
											"end": 14461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 14441,
											"end": 14461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14441,
											"end": 14461,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 14441,
											"end": 14461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14461,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14461,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14461,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14461,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14488,
											"end": 14494,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14488,
											"end": 14494,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14488,
											"end": 14494,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14488,
											"end": 14494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 14471,
											"end": 14494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14531,
											"end": 14533,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14525,
											"end": 14529,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14515,
											"end": 14523,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "PUSH",
											"source": 2,
											"value": "6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987"
										},
										{
											"begin": 14535,
											"end": 14541,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14543,
											"end": 14551,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14553,
											"end": 14565,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 14510,
											"end": 14566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 14596,
											"end": 14598,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14590,
											"end": 14594,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14600,
											"end": 14606,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2149,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1978,
											"end": 2155,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 14224,
											"end": 14614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14025,
											"end": 14614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "555DDC65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10963,
											"end": 10995,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 10995,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10945,
											"end": 10996,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "B281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
										},
										{
											"begin": 11012,
											"end": 11030,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11012,
											"end": 11030,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11012,
											"end": 11030,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11005,
											"end": 11039,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16990,
											"end": 17009,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16990,
											"end": 17009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1210,
											"name": "PUSH",
											"source": 2,
											"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
										},
										{
											"begin": 1168,
											"end": 1210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17053,
											"name": "PUSH",
											"source": 2,
											"value": "AABBB8CA"
										},
										{
											"begin": 17012,
											"end": 17053,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10918,
											"end": 10936,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10918,
											"end": 10936,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 17012,
											"end": 17091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16990,
											"end": 17091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17101,
											"end": 17415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 17101,
											"end": 17415,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23DE29"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17146,
											"end": 17190,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17190,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17190,
											"name": "PUSH",
											"source": 2,
											"value": "23DE29"
										},
										{
											"begin": 17146,
											"end": 17190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17191,
											"end": 17199,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 17191,
											"end": 17199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17201,
											"end": 17205,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 17201,
											"end": 17205,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17207,
											"end": 17209,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 17207,
											"end": 17209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17217,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17217,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17219,
											"end": 17227,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 17219,
											"end": 17227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17229,
											"end": 17241,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 17229,
											"end": 17241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 17146,
											"end": 17242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17101,
											"end": 17415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 17101,
											"end": 17415,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17101,
											"end": 17415,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 17101,
											"end": 17415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17263,
											"end": 17282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17259,
											"end": 17415,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17259,
											"end": 17415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 17259,
											"end": 17415,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17307,
											"end": 17320,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17307,
											"end": 17320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13238,
											"end": 13240,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13220,
											"end": 13241,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13277,
											"end": 13279,
											"name": "PUSH",
											"source": 9,
											"value": "4D"
										},
										{
											"begin": 13257,
											"end": 13275,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13257,
											"end": 13275,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13257,
											"end": 13275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13250,
											"end": 13280,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13316,
											"end": 13350,
											"name": "PUSH",
											"source": 9,
											"value": "4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13289,
											"end": 13351,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13387,
											"end": 13421,
											"name": "PUSH",
											"source": 9,
											"value": "20686173206E6F20696D706C656D656E74657220666F7220455243373737546F"
										},
										{
											"begin": 13367,
											"end": 13385,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13367,
											"end": 13385,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13367,
											"end": 13385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13360,
											"end": 13422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AD95B9CD49958DA5C1A595B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13438,
											"end": 13457,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 13438,
											"end": 13457,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13438,
											"end": 13457,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13431,
											"end": 13475,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13492,
											"end": 13511,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 13492,
											"end": 13511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 13036,
											"end": 13517,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16733,
											"end": 17421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12247,
											"end": 12917,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 12247,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12489,
											"end": 12507,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12489,
											"end": 12507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13724,
											"end": 13726,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13706,
											"end": 13727,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13763,
											"end": 13765,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13736,
											"end": 13766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13802,
											"end": 13836,
											"name": "PUSH",
											"source": 9,
											"value": "4552433737373A2073656E642066726F6D20746865207A65726F206164647265"
										},
										{
											"begin": 13782,
											"end": 13800,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13782,
											"end": 13800,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13782,
											"end": 13800,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13775,
											"end": 13837,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13853,
											"end": 13871,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13853,
											"end": 13871,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13853,
											"end": 13871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13846,
											"end": 13878,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13895,
											"end": 13914,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 13895,
											"end": 13914,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 13522,
											"end": 13920,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14127,
											"end": 14129,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14109,
											"end": 14130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14109,
											"end": 14130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14109,
											"end": 14130,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14146,
											"end": 14164,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14146,
											"end": 14164,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14146,
											"end": 14164,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14139,
											"end": 14169,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14205,
											"end": 14239,
											"name": "PUSH",
											"source": 9,
											"value": "4552433737373A2073656E6420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 14185,
											"end": 14203,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14185,
											"end": 14203,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14185,
											"end": 14203,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14178,
											"end": 14240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14257,
											"end": 14275,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14257,
											"end": 14275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 13925,
											"end": 14281,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 12670,
											"end": 12739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12698,
											"end": 12702,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12704,
											"end": 12706,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12708,
											"end": 12714,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12716,
											"end": 12724,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12726,
											"end": 12738,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12670,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12670,
											"end": 12739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12670,
											"end": 12739,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 12670,
											"end": 12739,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12750,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 12756,
											"end": 12764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12766,
											"end": 12770,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12772,
											"end": 12774,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12782,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12784,
											"end": 12792,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12794,
											"end": 12806,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12750,
											"end": 12755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 12750,
											"end": 12807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12750,
											"end": 12807,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 12750,
											"end": 12807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12818,
											"end": 12910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 12838,
											"end": 12846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12848,
											"end": 12852,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12854,
											"end": 12856,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12864,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12866,
											"end": 12874,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12876,
											"end": 12888,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12890,
											"end": 12909,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12818,
											"end": 12837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 12818,
											"end": 12910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13222,
											"end": 14019,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 13222,
											"end": 14019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13406,
											"end": 13424,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13406,
											"end": 13424,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14488,
											"end": 14490,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14470,
											"end": 14491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14527,
											"end": 14529,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14500,
											"end": 14530,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14566,
											"end": 14600,
											"name": "PUSH",
											"source": 9,
											"value": "4552433737373A206275726E2066726F6D20746865207A65726F206164647265"
										},
										{
											"begin": 14546,
											"end": 14564,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14546,
											"end": 14564,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14546,
											"end": 14564,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14539,
											"end": 14601,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14617,
											"end": 14635,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14617,
											"end": 14635,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14617,
											"end": 14635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14610,
											"end": 14642,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14659,
											"end": 14678,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 14659,
											"end": 14678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 14286,
											"end": 14684,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 13516,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13544,
											"end": 13548,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13562,
											"end": 13568,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13570,
											"end": 13574,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13576,
											"end": 13588,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13516,
											"end": 13533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 13516,
											"end": 13589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13516,
											"end": 13589,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 13516,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13701,
											"end": 13720,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13756,
											"end": 13777,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13756,
											"end": 13777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13756,
											"end": 13777,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13756,
											"end": 13777,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14891,
											"end": 14893,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14873,
											"end": 14894,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14930,
											"end": 14932,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 14910,
											"end": 14928,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14910,
											"end": 14928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14910,
											"end": 14928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14903,
											"end": 14933,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14969,
											"end": 15003,
											"name": "PUSH",
											"source": 9,
											"value": "4552433737373A206275726E20616D6F756E7420657863656564732062616C61"
										},
										{
											"begin": 14949,
											"end": 14967,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14949,
											"end": 14967,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14949,
											"end": 14967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14942,
											"end": 15004,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15020,
											"end": 15038,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 15020,
											"end": 15038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15020,
											"end": 15038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15013,
											"end": 15046,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15063,
											"end": 15082,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 15063,
											"end": 15082,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 14689,
											"end": 15088,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 13859,
											"end": 13865,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 13856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 13845,
											"end": 13865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 13865,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 13845,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13827,
											"end": 13836,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13827,
											"end": 13865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13827,
											"end": 13865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13827,
											"end": 13865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13827,
											"end": 13865,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13875,
											"end": 13887,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13891,
											"end": 13897,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13891,
											"end": 13897,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13827,
											"end": 13836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13891,
											"end": 13897,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13891,
											"end": 13897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 13875,
											"end": 13897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13930,
											"end": 13934,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13920,
											"end": 13928,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "PUSH",
											"source": 2,
											"value": "A78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098"
										},
										{
											"begin": 13936,
											"end": 13942,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13944,
											"end": 13948,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13950,
											"end": 13962,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 13913,
											"end": 13963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2149,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2149,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14001,
											"end": 14002,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13388,
											"end": 14019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13388,
											"end": 14019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13222,
											"end": 14019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13222,
											"end": 14019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13222,
											"end": 14019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13222,
											"end": 14019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13222,
											"end": 14019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 672,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 14,
											"end": 672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 185,
											"end": 187,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 237,
											"end": 258,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 237,
											"end": 258,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 237,
											"end": 258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 307,
											"end": 320,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 307,
											"end": 320,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 210,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 210,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 210,
											"end": 228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 329,
											"end": 351,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 329,
											"end": 351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 329,
											"end": 351,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 156,
											"end": 160,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 160,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 185,
											"end": 187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 408,
											"end": 423,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 408,
											"end": 423,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 408,
											"end": 423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 408,
											"end": 423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 382,
											"end": 384,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 385,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 367,
											"end": 385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 367,
											"end": 385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 156,
											"end": 160,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 451,
											"end": 646,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 451,
											"end": 646,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 465,
											"end": 471,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 462,
											"end": 463,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 459,
											"end": 472,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 451,
											"end": 646,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 451,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 451,
											"end": 646,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 530,
											"end": 543,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 530,
											"end": 543,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 526,
											"end": 565,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 514,
											"end": 566,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 514,
											"end": 566,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 621,
											"end": 636,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 621,
											"end": 636,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 621,
											"end": 636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 621,
											"end": 636,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 586,
											"end": 598,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 586,
											"end": 598,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 586,
											"end": 598,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 586,
											"end": 598,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 562,
											"end": 563,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 480,
											"end": 489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 451,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 451,
											"end": 646,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 451,
											"end": 646,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 451,
											"end": 646,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 663,
											"end": 666,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 663,
											"end": 666,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 14,
											"end": 672,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 677,
											"end": 1100,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 677,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 719,
											"end": 722,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 751,
											"end": 763,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 784,
											"end": 790,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 782,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 772,
											"end": 791,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 809,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 981,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 819,
											"end": 981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 833,
											"end": 839,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 830,
											"end": 831,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 827,
											"end": 840,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 819,
											"end": 981,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 819,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 819,
											"end": 981,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 895,
											"end": 899,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 951,
											"end": 964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 951,
											"end": 964,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 951,
											"end": 964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 947,
											"end": 969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 947,
											"end": 969,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 941,
											"end": 970,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 923,
											"end": 934,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 923,
											"end": 934,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 923,
											"end": 934,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 919,
											"end": 939,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 919,
											"end": 939,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 912,
											"end": 971,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 848,
											"end": 860,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 819,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 819,
											"end": 981,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 819,
											"end": 981,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 819,
											"end": 981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 823,
											"end": 826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1023,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1008,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1017,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1028,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1089,
											"end": 1093,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1082,
											"end": 1084,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1078,
											"end": 1085,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1075,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1061,
											"end": 1076,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 1086,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1055,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1048,
											"end": 1087,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1037,
											"end": 1094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1037,
											"end": 1094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1037,
											"end": 1094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 677,
											"end": 1100,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 677,
											"end": 1100,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 677,
											"end": 1100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 677,
											"end": 1100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 677,
											"end": 1100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1325,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1105,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1243,
											"end": 1252,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1257,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1313,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1318,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 1274,
											"end": 1319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1461,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 1330,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1405,
											"end": 1436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1405,
											"end": 1436,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1437,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1385,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 1385,
											"end": 1455,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1452,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1441,
											"end": 1453,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1385,
											"end": 1455,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 1385,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1781,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1466,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1548,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1597,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1592,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1581,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1570,
											"end": 1593,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1566,
											"end": 1598,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1615,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 1563,
											"end": 1615,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1612,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1609,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1615,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 1563,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1637,
											"end": 1660,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 1694,
											"end": 1699,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 1669,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1700,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 1669,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1773,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1774,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1774,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1775,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1775,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1466,
											"end": 1781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2616,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2160,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2253,
											"end": 2259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2308,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2285,
											"end": 2292,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2281,
											"end": 2304,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2309,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2326,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2274,
											"end": 2326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 2323,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2320,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2326,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2274,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2370,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2348,
											"end": 2371,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 2380,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2411,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2380,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2435,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2487,
											"end": 2489,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2472,
											"end": 2490,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2490,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2491,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 2459,
											"end": 2491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 2500,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2533,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 2500,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2616,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2616,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2559,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2559,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2609,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2591,
											"end": 2609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2591,
											"end": 2609,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2591,
											"end": 2609,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2610,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2937,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 2810,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2881,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2866,
											"end": 2869,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2862,
											"end": 2882,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2883,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 2906,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2899,
											"end": 2900,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2930,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2923,
											"end": 2924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2931,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2942,
											"end": 3660,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2942,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2984,
											"end": 2989,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3040,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3030,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3041,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 3004,
											"end": 3059,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3059,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 3004,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3098,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3117,
											"end": 3135,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3154,
											"end": 3156,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3157,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3180,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3144,
											"end": 3180,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3160,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3160,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 3160,
											"end": 3178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3160,
											"end": 3178,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3160,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3235,
											"end": 3237,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3229,
											"end": 3238,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3205,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3289,
											"end": 3302,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3285,
											"end": 3307,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3307,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3307,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3311,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3317,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3318,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3318,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3318,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3351,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3351,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3351,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3375,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3375,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3375,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3327,
											"end": 3399,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3327,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 3327,
											"end": 3399,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3379,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 3379,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 3379,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3379,
											"end": 3397,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 3379,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3419,
											"end": 3429,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3415,
											"end": 3417,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3439,
											"end": 3457,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3503,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3497,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3490,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3480,
											"end": 3486,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3476,
											"end": 3491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3504,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3521,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 3466,
											"end": 3521,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3515,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3519,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3521,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 3466,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3583,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3578,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3566,
											"end": 3572,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3579,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3555,
											"end": 3559,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3560,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3530,
											"end": 3584,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 3628,
											"end": 3629,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3621,
											"end": 3625,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3618,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3608,
											"end": 3614,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3626,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3593,
											"end": 3630,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3648,
											"end": 3654,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2942,
											"end": 3660,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2942,
											"end": 3660,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2942,
											"end": 3660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2942,
											"end": 3660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2942,
											"end": 3660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 4550,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 3665,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3792,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3810,
											"end": 3816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3866,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3851,
											"end": 3860,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3842,
											"end": 3849,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 3861,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3834,
											"end": 3867,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3884,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 3831,
											"end": 3884,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3880,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3870,
											"end": 3882,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3884,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 3831,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3919,
											"end": 3928,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3929,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3938,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 3963,
											"end": 3968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3938,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 3938,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3938,
											"end": 3969,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 3938,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 3993,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4045,
											"end": 4047,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4030,
											"end": 4048,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4030,
											"end": 4048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4017,
											"end": 4049,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 4017,
											"end": 4049,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 4058,
											"end": 4091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4091,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 4058,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4117,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4164,
											"end": 4166,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4167,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4149,
											"end": 4167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4136,
											"end": 4168,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4136,
											"end": 4168,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4219,
											"end": 4221,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4204,
											"end": 4222,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4222,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4191,
											"end": 4223,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4242,
											"end": 4260,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4272,
											"end": 4286,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4286,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4303,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 4269,
											"end": 4303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4300,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4297,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4289,
											"end": 4301,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4303,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 4269,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4363,
											"end": 4370,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4354,
											"end": 4360,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4343,
											"end": 4352,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4322,
											"end": 4371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4371,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4322,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4312,
											"end": 4371,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4312,
											"end": 4371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4427,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4413,
											"end": 4422,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4396,
											"end": 4429,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4380,
											"end": 4429,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4380,
											"end": 4429,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4454,
											"end": 4456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4441,
											"end": 4457,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4474,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4438,
											"end": 4474,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4470,
											"end": 4471,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4467,
											"end": 4468,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4460,
											"end": 4472,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4474,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4438,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4493,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 4536,
											"end": 4543,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4533,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4523,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4534,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4493,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4493,
											"end": 4544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4493,
											"end": 4544,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 4493,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 4550,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 4550,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 4550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 4550,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 4550,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 4550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 4550,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 4550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 4550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4802,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4555,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4614,
											"end": 4620,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4655,
											"end": 4664,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4646,
											"end": 4653,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4665,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4670,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4687,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4635,
											"end": 4687,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4673,
											"end": 4685,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4687,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4635,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4731,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4709,
											"end": 4732,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4741,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 4766,
											"end": 4771,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4741,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 4741,
											"end": 4772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4807,
											"end": 5330,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 4807,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4893,
											"end": 4899,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4901,
											"end": 4907,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4909,
											"end": 4915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 4964,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4950,
											"end": 4959,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 4960,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4933,
											"end": 4965,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4930,
											"end": 4982,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4930,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 4930,
											"end": 4982,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4978,
											"end": 4979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4976,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4968,
											"end": 4980,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4930,
											"end": 4982,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 4930,
											"end": 4982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5004,
											"end": 5027,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 5061,
											"end": 5066,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5036,
											"end": 5067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5067,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 5036,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5091,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5138,
											"end": 5140,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5123,
											"end": 5141,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5123,
											"end": 5141,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5110,
											"end": 5142,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5110,
											"end": 5142,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5193,
											"end": 5195,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5196,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5165,
											"end": 5197,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5209,
											"end": 5239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5239,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5256,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 5206,
											"end": 5256,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5252,
											"end": 5253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5250,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5254,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5256,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 5206,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5275,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5316,
											"end": 5323,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5296,
											"end": 5305,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5292,
											"end": 5314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5275,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 5275,
											"end": 5324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5275,
											"end": 5324,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5275,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5265,
											"end": 5324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5265,
											"end": 5324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5265,
											"end": 5324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4807,
											"end": 5330,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4807,
											"end": 5330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4807,
											"end": 5330,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4807,
											"end": 5330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4807,
											"end": 5330,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4807,
											"end": 5330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5723,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 5335,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5417,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5464,
											"end": 5466,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5452,
											"end": 5461,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5450,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5439,
											"end": 5462,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5467,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5484,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 5432,
											"end": 5484,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5480,
											"end": 5481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5478,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5482,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5484,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 5432,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5519,
											"end": 5528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5529,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5538,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 5563,
											"end": 5568,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5538,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5538,
											"end": 5569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5538,
											"end": 5569,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 5538,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5588,
											"end": 5593,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5645,
											"end": 5647,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5648,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5630,
											"end": 5648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5649,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5658,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 5617,
											"end": 5649,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5658,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5658,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5658,
											"end": 5691,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 5658,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5710,
											"end": 5717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5700,
											"end": 5717,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5700,
											"end": 5717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5700,
											"end": 5717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5723,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5723,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 6471,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5728,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5838,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5840,
											"end": 5846,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5848,
											"end": 5854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5909,
											"end": 5912,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5897,
											"end": 5906,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 5895,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 5907,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5880,
											"end": 5913,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5877,
											"end": 5930,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5877,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 5877,
											"end": 5930,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5926,
											"end": 5927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5924,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5916,
											"end": 5928,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5877,
											"end": 5930,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 5877,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5965,
											"end": 5974,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5952,
											"end": 5975,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5984,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 6009,
											"end": 6014,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5984,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5984,
											"end": 6015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5984,
											"end": 6015,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 5984,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6034,
											"end": 6039,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6086,
											"end": 6088,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6071,
											"end": 6089,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6090,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6090,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6126,
											"end": 6144,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6144,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6145,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6194,
											"end": 6208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6194,
											"end": 6208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6194,
											"end": 6208,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6225,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 6191,
											"end": 6225,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6219,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6211,
											"end": 6223,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6225,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 6191,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 6285,
											"end": 6292,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6282,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6265,
											"end": 6274,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6261,
											"end": 6283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6244,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6244,
											"end": 6293,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 6244,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6293,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6346,
											"end": 6348,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6335,
											"end": 6344,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6331,
											"end": 6349,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6350,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6375,
											"end": 6377,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6365,
											"end": 6373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6362,
											"end": 6378,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 6359,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6391,
											"end": 6392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6388,
											"end": 6389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6381,
											"end": 6393,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 6359,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 6457,
											"end": 6464,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6446,
											"end": 6454,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6435,
											"end": 6444,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6414,
											"end": 6465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6465,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 6414,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6404,
											"end": 6465,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6404,
											"end": 6465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6404,
											"end": 6465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 6471,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 6471,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 6471,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 6471,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 6471,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 6471,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 6471,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6864,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 6476,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6553,
											"end": 6559,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6561,
											"end": 6567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6616,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6602,
											"end": 6611,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6600,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6589,
											"end": 6612,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6585,
											"end": 6617,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6634,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 6582,
											"end": 6634,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6627,
											"end": 6628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6620,
											"end": 6632,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6634,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 6582,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6666,
											"end": 6675,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6676,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6643,
											"end": 6676,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6643,
											"end": 6676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6727,
											"end": 6729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6716,
											"end": 6725,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6712,
											"end": 6730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6699,
											"end": 6731,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6772,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6746,
											"end": 6752,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6787,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6784,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6776,
											"end": 6788,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6809,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 6850,
											"end": 6857,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6841,
											"end": 6847,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6830,
											"end": 6839,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6848,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6809,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6809,
											"end": 6858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6809,
											"end": 6858,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 6809,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6858,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6864,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6864,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6864,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 7249,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 6869,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6949,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6944,
											"end": 6956,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6944,
											"end": 6956,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6944,
											"end": 6956,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 6944,
											"end": 6956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7003,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7003,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7003,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7012,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 7012,
											"end": 7073,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7070,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 7058,
											"end": 7064,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7054,
											"end": 7071,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7071,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7071,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7012,
											"end": 7073,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 7012,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7108,
											"end": 7122,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7085,
											"end": 7123,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7082,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 7082,
											"end": 7243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7165,
											"end": 7175,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 7160,
											"end": 7163,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 7156,
											"end": 7176,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 7153,
											"end": 7154,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7146,
											"end": 7177,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7200,
											"end": 7204,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 7197,
											"end": 7198,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7228,
											"end": 7232,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7225,
											"end": 7226,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7082,
											"end": 7243,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 7082,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7082,
											"end": 7243,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 7249,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 7249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 7249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 7249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7254,
											"end": 7654,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 7254,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7456,
											"end": 7458,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7438,
											"end": 7459,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7459,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7459,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7495,
											"end": 7497,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7475,
											"end": 7493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7475,
											"end": 7493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7475,
											"end": 7493,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7498,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7568,
											"name": "PUSH",
											"source": 9,
											"value": "4552433737373A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 7529,
											"end": 7531,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7514,
											"end": 7532,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7514,
											"end": 7532,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7569,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7600,
											"end": 7602,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7578,
											"end": 7612,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 7647,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7629,
											"end": 7648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7648,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7254,
											"end": 7654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8476,
											"end": 8603,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 8476,
											"end": 8603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8537,
											"end": 8547,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 8532,
											"end": 8535,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 8528,
											"end": 8548,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8525,
											"end": 8526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8518,
											"end": 8549,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8568,
											"end": 8572,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8565,
											"end": 8566,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8558,
											"end": 8573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8592,
											"end": 8596,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8589,
											"end": 8590,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8582,
											"end": 8597,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8736,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 8608,
											"end": 8736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8675,
											"end": 8684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8675,
											"end": 8684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8675,
											"end": 8684,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8696,
											"end": 8707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8696,
											"end": 8707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8696,
											"end": 8707,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8693,
											"end": 8730,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8693,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 8693,
											"end": 8730,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8710,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 8710,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 8710,
											"end": 8728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8741,
											"end": 9149,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 8741,
											"end": 9149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8943,
											"end": 8945,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8925,
											"end": 8946,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8946,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 8984,
											"name": "PUSH",
											"source": 9,
											"value": "2C"
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8955,
											"end": 8985,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9021,
											"end": 9055,
											"name": "PUSH",
											"source": 9,
											"value": "4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F"
										},
										{
											"begin": 9016,
											"end": 9018,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9001,
											"end": 9019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9001,
											"end": 9019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8994,
											"end": 9056,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103337B9103437B63232B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9087,
											"end": 9089,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9072,
											"end": 9090,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9072,
											"end": 9090,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9065,
											"end": 9107,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9142,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9124,
											"end": 9143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9124,
											"end": 9143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8741,
											"end": 9149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11301,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 11050,
											"end": 11301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11120,
											"end": 11126,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11173,
											"end": 11175,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11161,
											"end": 11170,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11159,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11148,
											"end": 11171,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 11176,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 11141,
											"end": 11193,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11141,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 11141,
											"end": 11193,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11189,
											"end": 11190,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11186,
											"end": 11187,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11179,
											"end": 11191,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11141,
											"end": 11193,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 11141,
											"end": 11193,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11221,
											"end": 11230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11215,
											"end": 11231,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11240,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 11265,
											"end": 11270,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11240,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 11240,
											"end": 11271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11306,
											"end": 12038,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 11306,
											"end": 12038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11649,
											"end": 11664,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 11664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 11664,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11631,
											"end": 11665,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11631,
											"end": 11665,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11716,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11716,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11698,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11699,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11681,
											"end": 11699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 11717,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11753,
											"end": 11768,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11753,
											"end": 11768,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11748,
											"end": 11750,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11733,
											"end": 11751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11733,
											"end": 11751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11726,
											"end": 11769,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11800,
											"end": 11802,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11785,
											"end": 11803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11785,
											"end": 11803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 11812,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 11812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 11812,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11849,
											"end": 11852,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 11843,
											"end": 11846,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 11828,
											"end": 11847,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11828,
											"end": 11847,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11574,
											"end": 11578,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11574,
											"end": 11578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11876,
											"end": 11922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 11876,
											"end": 11922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11902,
											"end": 11921,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11902,
											"end": 11921,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11894,
											"end": 11900,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11876,
											"end": 11922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 11876,
											"end": 11922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11876,
											"end": 11922,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 11876,
											"end": 11922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11971,
											"end": 11980,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11963,
											"end": 11969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11959,
											"end": 11981,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11953,
											"end": 11956,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 11942,
											"end": 11951,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11938,
											"end": 11957,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11931,
											"end": 11982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11999,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 12025,
											"end": 12031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12017,
											"end": 12023,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11999,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 11999,
											"end": 12032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11999,
											"end": 12032,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 11999,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11991,
											"end": 12032,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 11306,
											"end": 12038,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11306,
											"end": 12038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12451,
											"end": 12576,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 12451,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12516,
											"end": 12525,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12516,
											"end": 12525,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12516,
											"end": 12525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12537,
											"end": 12547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12537,
											"end": 12547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12537,
											"end": 12547,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12534,
											"end": 12570,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12534,
											"end": 12570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 12534,
											"end": 12570,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12550,
											"end": 12568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 12550,
											"end": 12568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 12550,
											"end": 12568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12581,
											"end": 13031,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 12581,
											"end": 13031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12802,
											"end": 12808,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12791,
											"end": 12800,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12784,
											"end": 12809,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12845,
											"end": 12847,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12840,
											"end": 12842,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12829,
											"end": 12838,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12825,
											"end": 12843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12818,
											"end": 12848,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12871,
											"end": 12916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 12912,
											"end": 12914,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12901,
											"end": 12910,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12897,
											"end": 12915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12889,
											"end": 12895,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12871,
											"end": 12916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 12871,
											"end": 12916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12871,
											"end": 12916,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 12871,
											"end": 12916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12964,
											"end": 12973,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12956,
											"end": 12962,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12974,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12947,
											"end": 12949,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12936,
											"end": 12945,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12932,
											"end": 12950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12925,
											"end": 12975,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12992,
											"end": 13025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 13018,
											"end": 13024,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13010,
											"end": 13016,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12992,
											"end": 13025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 12992,
											"end": 13025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12992,
											"end": 13025,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 12992,
											"end": 13025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12984,
											"end": 13025,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 12581,
											"end": 13031,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12581,
											"end": 13031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								".contracts/Garetto.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"authorizeOperator(address)": "959b8c3f",
							"balanceOf(address)": "70a08231",
							"burn(uint256,bytes)": "fe9d9303",
							"decimals()": "313ce567",
							"defaultOperators()": "06e48538",
							"granularity()": "556f0dc7",
							"isOperatorFor(address,address)": "d95b6371",
							"name()": "06fdde03",
							"operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
							"operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
							"revokeOperator(address)": "fad8b32a",
							"send(address,uint256,bytes)": "9bd9bbc6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultOperators_\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC777} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. Support for ERC20 is included in this contract, as specified by the EIP: both the ERC777 and ERC20 interfaces can be safely used when interacting with it. Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token movements. Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there are no special restrictions in the amount of tokens that created, moved, or destroyed. This makes integration with ERC20 applications seamless.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Note that accounts cannot have allowance issued by their operators.\"},\"authorizeOperator(address)\":{\"details\":\"See {IERC777-authorizeOperator}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`tokenHolder`).\"},\"burn(uint256,bytes)\":{\"details\":\"See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility.\"},\"constructor\":{\"details\":\"`defaultOperators` may be an empty array.\"},\"decimals()\":{\"details\":\"See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\"},\"defaultOperators()\":{\"details\":\"See {IERC777-defaultOperators}.\"},\"granularity()\":{\"details\":\"See {IERC777-granularity}. This implementation always returns `1`.\"},\"isOperatorFor(address,address)\":{\"details\":\"See {IERC777-isOperatorFor}.\"},\"name()\":{\"details\":\"See {IERC777-name}.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events.\"},\"revokeOperator(address)\":{\"details\":\"See {IERC777-revokeOperator}.\"},\"send(address,uint256,bytes)\":{\"details\":\"See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility.\"},\"symbol()\":{\"details\":\"See {IERC777-symbol}.\"},\"totalSupply()\":{\"details\":\"See {IERC777-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":\"ERC777\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":{\"keccak256\":\"0x980233ba96c42246563843d9310b79622f25f35dcde217bfec2305e90bb42c31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://401408feace106381f3ff1f9bcf508d253aeaeb50a457f1ab6d2ff33e48e0c7d\",\"dweb:/ipfs/QmaJYp98aGGyHRm3au42YHKH1pXTtu5UnSp6kmGB6aDfsi\"]},\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x180af7df8832ffcba53dae0c5450b062d2c571a8eaec22619fcaef5758503d7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6232d44d9a11c9764c655bb481213a0a92afd27f6b5a1083343d512f04063735\",\"dweb:/ipfs/QmSfSAzCgcMMaXVc7EnoC98opUjizqx6svmJNotiBWaGbc\"]},\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x0fd59f83d16f090c27a8105db0f4ad05b0f5d127f9878b82ebf0ad2bbc4e3f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0f20fa38853a7b046933b0c905b6e021b081712032ee395c3ecca01998047ff\",\"dweb:/ipfs/QmRDRgthGgc9XTfQKKN29KZF8BYanfcE5XP9cvAdh1E146\"]},\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x54230ad917ef5075db47e57ac43655f1197ac913686d5ced13062c2da0cce857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e198d3b0abb92a8ac98583349c07a653714a581dbd587f17ea7bff17b460e09\",\"dweb:/ipfs/QmR1TtTSFZkTAH6QdXj4eFCtfMnThmBKhroDqsWtzU65SJ\"]},\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xd2df74f95cc1d14b07a93d913993cf17285ee037e9bd1cac4ac4d38b846eaeda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://836120f9dad7d6bfeebe0d80541ad8753286e132f80f134af618901eb98ecc89\",\"dweb:/ipfs/QmVWRvvX2kW8Des3SfB23UwYsiDrMd4aYRpwsjyu7FSVjA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 109,
								"contract": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 111,
								"contract": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 113,
								"contract": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 115,
								"contract": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 128,
								"contract": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_defaultOperatorsArray",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 132,
								"contract": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_defaultOperators",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 138,
								"contract": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_operators",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 144,
								"contract": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_revokedDefaultOperators",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 150,
								"contract": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_allowances",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
				"IERC777": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "AuthorizedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "RevokedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultOperators",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "granularity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "isOperatorFor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.",
						"kind": "dev",
						"methods": {
							"authorizeOperator(address)": {
								"details": "Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by an account (`owner`)."
							},
							"burn(uint256,bytes)": {
								"details": "Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens."
							},
							"defaultOperators()": {
								"details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
							},
							"granularity()": {
								"details": "Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1."
							},
							"isOperatorFor(address,address)": {
								"details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"operatorBurn(address,uint256,bytes,bytes)": {
								"details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`."
							},
							"operatorSend(address,address,uint256,bytes,bytes)": {
								"details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"revokeOperator(address)": {
								"details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"send(address,uint256,bytes)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"authorizeOperator(address)": "959b8c3f",
							"balanceOf(address)": "70a08231",
							"burn(uint256,bytes)": "fe9d9303",
							"defaultOperators()": "06e48538",
							"granularity()": "556f0dc7",
							"isOperatorFor(address,address)": "d95b6371",
							"name()": "06fdde03",
							"operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
							"operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
							"revokeOperator(address)": "fad8b32a",
							"send(address,uint256,bytes)": "9bd9bbc6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1.\"},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":\"IERC777\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x180af7df8832ffcba53dae0c5450b062d2c571a8eaec22619fcaef5758503d7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6232d44d9a11c9764c655bb481213a0a92afd27f6b5a1083343d512f04063735\",\"dweb:/ipfs/QmSfSAzCgcMMaXVc7EnoC98opUjizqx6svmJNotiBWaGbc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
				"IERC777Recipient": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.",
						"kind": "dev",
						"methods": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":\"IERC777Recipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x0fd59f83d16f090c27a8105db0f4ad05b0f5d127f9878b82ebf0ad2bbc4e3f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0f20fa38853a7b046933b0c905b6e021b081712032ee395c3ecca01998047ff\",\"dweb:/ipfs/QmRDRgthGgc9XTfQKKN29KZF8BYanfcE5XP9cvAdh1E146\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
				"IERC777Sender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensToSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777TokensSender standard as defined in the EIP. {IERC777} Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be  their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.",
						"kind": "dev",
						"methods": {
							"tokensToSend(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensToSend(address,address,address,uint256,bytes,bytes)": "75ab9782"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensToSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensSender standard as defined in the EIP. {IERC777} Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be  their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensToSend(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":\"IERC777Sender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x54230ad917ef5075db47e57ac43655f1197ac913686d5ced13062c2da0cce857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e198d3b0abb92a8ac98583349c07a653714a581dbd587f17ea7bff17b460e09\",\"dweb:/ipfs/QmR1TtTSFZkTAH6QdXj4eFCtfMnThmBKhroDqsWtzU65SJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":126:7810  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":126:7810  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220492348633e9478a3fe7a372d06f7deab573a98fce4911d27d2232b9c5f33c49464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220492348633e9478a3fe7a372d06f7deab573a98fce4911d27d2232b9c5f33c49464736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0x23 BASEFEE PUSH4 0x3E9478A3 INVALID PUSH27 0x372D06F7DEAB573A98FCE4911D27D2232B9C5F33C49464736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "126:7684:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:7684:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220492348633e9478a3fe7a372d06f7deab573a98fce4911d27d2232b9c5f33c49464736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0x23 BASEFEE PUSH4 0x3E9478A3 INVALID PUSH27 0x372D06F7DEAB573A98FCE4911D27D2232B9C5F33C49464736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "126:7684:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220492348633e9478a3fe7a372d06f7deab573a98fce4911d27d2232b9c5f33c49464736f6c63430008130033",
									".code": [
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								".contracts/Garetto.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol",
								"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
				"IERC1820Registry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "interfaceHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "InterfaceImplementerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "ManagerChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_interfaceHash",
									"type": "bytes32"
								}
							],
							"name": "getInterfaceImplementer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "implementsERC165Interface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "implementsERC165InterfaceNoCache",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "interfaceName",
									"type": "string"
								}
							],
							"name": "interfaceHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_interfaceHash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "setInterfaceImplementer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "setManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "updateERC165Cache",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.",
						"kind": "dev",
						"methods": {
							"getInterfaceImplementer(address,bytes32)": {
								"details": "Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address."
							},
							"getManager(address)": {
								"details": "Returns the manager for `account`. See {setManager}."
							},
							"implementsERC165Interface(address,bytes4)": {
								"params": {
									"account": "Address of the contract to check.",
									"interfaceId": "ERC165 interface to check."
								},
								"returns": {
									"_0": "True if `account` implements `interfaceId`, false otherwise."
								}
							},
							"implementsERC165InterfaceNoCache(address,bytes4)": {
								"params": {
									"account": "Address of the contract to check.",
									"interfaceId": "ERC165 interface to check."
								},
								"returns": {
									"_0": "True if `account` implements `interfaceId`, false otherwise."
								}
							},
							"interfaceHash(string)": {
								"details": "Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
							},
							"setInterfaceImplementer(address,bytes32,address)": {
								"details": "Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}."
							},
							"setManager(address,address)": {
								"details": "Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`."
							},
							"updateERC165Cache(address,bytes4)": {
								"params": {
									"account": "Address of the contract for which to update the cache.",
									"interfaceId": "ERC165 interface for which to update the cache."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getInterfaceImplementer(address,bytes32)": "aabbb8ca",
							"getManager(address)": "3d584063",
							"implementsERC165Interface(address,bytes4)": "f712f3e8",
							"implementsERC165InterfaceNoCache(address,bytes4)": "b7056765",
							"interfaceHash(string)": "65ba36c1",
							"setInterfaceImplementer(address,bytes32,address)": "29965a1d",
							"setManager(address,address)": "5df8122f",
							"updateERC165Cache(address,bytes4)": "a41e7d51"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.\",\"kind\":\"dev\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address.\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`. See {setManager}.\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}.\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`.\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\",\"interfaceId\":\"ERC165 interface for which to update the cache.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":\"IERC1820Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xd2df74f95cc1d14b07a93d913993cf17285ee037e9bd1cac4ac4d38b846eaeda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://836120f9dad7d6bfeebe0d80541ad8753286e132f80f134af618901eb98ecc89\",\"dweb:/ipfs/QmVWRvvX2kW8Des3SfB23UwYsiDrMd4aYRpwsjyu7FSVjA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"implementsERC165Interface(address,bytes4)": {
								"notice": "Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address."
							},
							"implementsERC165InterfaceNoCache(address,bytes4)": {
								"notice": "Checks whether a contract implements an ERC165 interface or not without using nor updating the cache."
							},
							"updateERC165Cache(address,bytes4)": {
								"notice": "Updates the cache with whether the contract implements an ERC165 interface or not."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".contracts/Garetto.sol": {
				"ast": {
					"absolutePath": ".contracts/Garetto.sol",
					"exportedSymbols": {
						"Address": [
							1710
						],
						"Context": [
							1733
						],
						"ERC777": [
							1215
						],
						"IERC1820Registry": [
							1823
						],
						"IERC20": [
							80
						],
						"IERC777": [
							1374
						],
						"IERC777Recipient": [
							1394
						],
						"IERC777Sender": [
							1414
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
							"file": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3,
							"sourceUnit": 1216,
							"src": "60:93:0",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "33:128:0"
				},
				"id": 0
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							80
						]
					},
					"id": 81,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 80,
							"linearizedBaseContracts": [
								80
							],
							"name": "IERC20",
							"nameLocation": "139:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:1"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "269:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:1"
									},
									"scope": 80,
									"src": "223:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "380:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:1"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "420:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:1"
									},
									"scope": 80,
									"src": "361:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "667:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "686:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:1"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "720:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 26,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:1"
									},
									"scope": 80,
									"src": "649:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1020:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1035:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:1"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:1"
									},
									"scope": 80,
									"src": "1001:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1754:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1771:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:1"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1805:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:1"
									},
									"scope": 80,
									"src": "1737:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2148:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2140:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2164:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2156:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2183:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2175:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2175:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:51:1"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2209:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 58,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2209:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:6:1"
									},
									"scope": 80,
									"src": "2118:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "2221:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 70,
									"name": "Transfer",
									"nameLocation": "2390:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2415:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2399:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2437:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2421:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2449:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2441:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:57:1"
									},
									"src": "2384:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2462:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 79,
									"name": "Approval",
									"nameLocation": "2621:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2646:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2630:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2669:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2653:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2686:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2678:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2629:63:1"
									},
									"src": "2615:78:1"
								}
							],
							"scope": 81,
							"src": "129:2566:1",
							"usedErrors": []
						}
					],
					"src": "33:2663:1"
				},
				"id": 1
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol": {
				"ast": {
					"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
					"exportedSymbols": {
						"Address": [
							1710
						],
						"Context": [
							1733
						],
						"ERC777": [
							1215
						],
						"IERC1820Registry": [
							1823
						],
						"IERC20": [
							80
						],
						"IERC777": [
							1374
						],
						"IERC777Recipient": [
							1394
						],
						"IERC777Sender": [
							1414
						]
					},
					"id": 1216,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 82,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
							"file": "./IERC777.sol",
							"id": 83,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1216,
							"sourceUnit": 1375,
							"src": "58:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
							"file": "./IERC777Recipient.sol",
							"id": 84,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1216,
							"sourceUnit": 1395,
							"src": "82:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
							"file": "./IERC777Sender.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1216,
							"sourceUnit": 1415,
							"src": "115:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "../ERC20/IERC20.sol",
							"id": 86,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1216,
							"sourceUnit": 81,
							"src": "145:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 87,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1216,
							"sourceUnit": 1711,
							"src": "175:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 88,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1216,
							"sourceUnit": 1734,
							"src": "209:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
							"file": "../../utils/introspection/IERC1820Registry.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1216,
							"sourceUnit": 1824,
							"src": "243:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 91,
										"name": "Context",
										"nameLocations": [
											"1033:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1733,
										"src": "1033:7:2"
									},
									"id": 92,
									"nodeType": "InheritanceSpecifier",
									"src": "1033:7:2"
								},
								{
									"baseName": {
										"id": 93,
										"name": "IERC777",
										"nameLocations": [
											"1042:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1374,
										"src": "1042:7:2"
									},
									"id": 94,
									"nodeType": "InheritanceSpecifier",
									"src": "1042:7:2"
								},
								{
									"baseName": {
										"id": 95,
										"name": "IERC20",
										"nameLocations": [
											"1051:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 80,
										"src": "1051:6:2"
									},
									"id": 96,
									"nodeType": "InheritanceSpecifier",
									"src": "1051:6:2"
								}
							],
							"canonicalName": "ERC777",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "301:712:2",
								"text": " @dev Implementation of the {IERC777} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n Support for ERC20 is included in this contract, as specified by the EIP: both\n the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n movements.\n Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n are no special restrictions in the amount of tokens that created, moved, or\n destroyed. This makes integration with ERC20 applications seamless."
							},
							"fullyImplemented": true,
							"id": 1215,
							"linearizedBaseContracts": [
								1215,
								80,
								1374,
								1733
							],
							"name": "ERC777",
							"nameLocation": "1023:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 99,
									"libraryName": {
										"id": 97,
										"name": "Address",
										"nameLocations": [
											"1070:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1710,
										"src": "1070:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "1064:26:2",
									"typeName": {
										"id": 98,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1082:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"id": 105,
									"mutability": "constant",
									"name": "_ERC1820_REGISTRY",
									"nameLocation": "1131:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "1096:115:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1820Registry_$1823",
										"typeString": "contract IERC1820Registry"
									},
									"typeName": {
										"id": 101,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 100,
											"name": "IERC1820Registry",
											"nameLocations": [
												"1096:16:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1823,
											"src": "1096:16:2"
										},
										"referencedDeclaration": 1823,
										"src": "1096:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1820Registry_$1823",
											"typeString": "contract IERC1820Registry"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
												"id": 103,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1168:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 102,
											"name": "IERC1820Registry",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1823,
											"src": "1151:16:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$1823_$",
												"typeString": "type(contract IERC1820Registry)"
											}
										},
										"id": 104,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1151:60:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1820Registry_$1823",
											"typeString": "contract IERC1820Registry"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 109,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1254:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "1218:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 108,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 106,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1226:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1218:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 107,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1237:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 111,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1286:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "1270:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 110,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1270:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 113,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1320:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "1305:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 112,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1305:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 115,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1346:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "1331:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 114,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1331:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 120,
									"mutability": "constant",
									"name": "_TOKENS_SENDER_INTERFACE_HASH",
									"nameLocation": "1385:29:2",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "1360:88:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 116,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1360:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "455243373737546f6b656e7353656e646572",
												"id": 118,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1427:20:2",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
													"typeString": "literal_string \"ERC777TokensSender\""
												},
												"value": "ERC777TokensSender"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
													"typeString": "literal_string \"ERC777TokensSender\""
												}
											],
											"id": 117,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1417:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 119,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1417:31:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 125,
									"mutability": "constant",
									"name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
									"nameLocation": "1479:32:2",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "1454:94:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 121,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1454:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "455243373737546f6b656e73526563697069656e74",
												"id": 123,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1524:23:2",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
													"typeString": "literal_string \"ERC777TokensRecipient\""
												},
												"value": "ERC777TokensRecipient"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
													"typeString": "literal_string \"ERC777TokensRecipient\""
												}
											],
											"id": 122,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1514:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 124,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1514:34:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_defaultOperatorsArray",
									"nameLocation": "1665:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "1647:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 126,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1647:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 127,
										"nodeType": "ArrayTypeName",
										"src": "1647:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 132,
									"mutability": "mutable",
									"name": "_defaultOperators",
									"nameLocation": "1814:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "1781:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 131,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 129,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1789:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1781:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 130,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1800:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "_operators",
									"nameLocation": "1974:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "1921:63:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 137,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 133,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1929:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1921:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 136,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 134,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1948:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1940:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 135,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1959:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 144,
									"mutability": "mutable",
									"name": "_revokedDefaultOperators",
									"nameLocation": "2043:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "1990:77:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 143,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 139,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1998:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1990:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 142,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 140,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2017:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2009:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 141,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2028:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 150,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "2156:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "2098:69:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 149,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 145,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2107:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2098:49:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 148,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 146,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2127:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2118:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 147,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2138:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "2366:490:2",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2376:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2384:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2376:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "2376:13:2"
											},
											{
												"expression": {
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 165,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2399:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 166,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "2409:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2399:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "2399:17:2"
											},
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "_defaultOperatorsArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2427:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 170,
														"name": "defaultOperators_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2452:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "2427:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "2427:42:2"
											},
											{
												"body": {
													"id": 192,
													"nodeType": "Block",
													"src": "2534:71:2",
													"statements": [
														{
															"expression": {
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 184,
																		"name": "_defaultOperators",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "2548:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 188,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 185,
																			"name": "defaultOperators_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 158,
																			"src": "2566:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 187,
																		"indexExpression": {
																			"id": 186,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 174,
																			"src": "2584:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2566:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2548:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2590:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2548:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 191,
															"nodeType": "ExpressionStatement",
															"src": "2548:46:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 177,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "2499:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 178,
															"name": "defaultOperators_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "2503:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2521:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2503:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2499:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 193,
												"initializationExpression": {
													"assignments": [
														174
													],
													"declarations": [
														{
															"constant": false,
															"id": 174,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2492:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 193,
															"src": "2484:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 173,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2484:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 176,
													"initialValue": {
														"hexValue": "30",
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2496:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2484:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2529:3:2",
														"subExpression": {
															"id": 181,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2529:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 183,
													"nodeType": "ExpressionStatement",
													"src": "2529:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2479:126:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 199,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2696:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC777_$1215",
																		"typeString": "contract ERC777"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC777_$1215",
																		"typeString": "contract ERC777"
																	}
																],
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2688:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 197,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2688:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2688:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "455243373737546f6b656e",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2713:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
																		"typeString": "literal_string \"ERC777Token\""
																	},
																	"value": "ERC777Token"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
																		"typeString": "literal_string \"ERC777Token\""
																	}
																],
																"id": 201,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "2703:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2703:24:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 206,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2737:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC777_$1215",
																		"typeString": "contract ERC777"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC777_$1215",
																		"typeString": "contract ERC777"
																	}
																],
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2729:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 204,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2729:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2729:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 194,
															"name": "_ERC1820_REGISTRY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2646:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$1823",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2664:23:2",
														"memberName": "setInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1762,
														"src": "2646:41:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (address,bytes32,address) external"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2646:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2646:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 215,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2803:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC777_$1215",
																		"typeString": "contract ERC777"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC777_$1215",
																		"typeString": "contract ERC777"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2795:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 213,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2795:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2795:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "4552433230546f6b656e",
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2820:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
																		"typeString": "literal_string \"ERC20Token\""
																	},
																	"value": "ERC20Token"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
																		"typeString": "literal_string \"ERC20Token\""
																	}
																],
																"id": 217,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "2810:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2810:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 222,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2843:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC777_$1215",
																		"typeString": "contract ERC777"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC777_$1215",
																		"typeString": "contract ERC777"
																	}
																],
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2835:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 220,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2835:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2835:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 210,
															"name": "_ERC1820_REGISTRY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2753:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$1823",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2771:23:2",
														"memberName": "setInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1762,
														"src": "2753:41:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (address,bytes32,address) external"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2753:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "2753:96:2"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "2174:65:2",
										"text": " @dev `defaultOperators` may be an empty array."
									},
									"id": 227,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2279:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2265:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2265:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2308:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2294:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 154,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2294:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "defaultOperators_",
												"nameLocation": "2342:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2325:34:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 156,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2325:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 157,
													"nodeType": "ArrayTypeName",
													"src": "2325:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:110:2"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2366:0:2"
									},
									"scope": 1215,
									"src": "2244:612:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1224
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "2979:29:2",
										"statements": [
											{
												"expression": {
													"id": 234,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 113,
													"src": "2996:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 233,
												"id": 235,
												"nodeType": "Return",
												"src": "2989:12:2"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2862:43:2",
										"text": " @dev See {IERC777-name}."
									},
									"functionSelector": "06fdde03",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2919:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 230,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2946:8:2"
									},
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2923:2:2"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2964:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 231,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2964:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2963:15:2"
									},
									"scope": 1215,
									"src": "2910:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1230
									],
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "3135:31:2",
										"statements": [
											{
												"expression": {
													"id": 244,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 115,
													"src": "3152:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 243,
												"id": 245,
												"nodeType": "Return",
												"src": "3145:14:2"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3014:45:2",
										"text": " @dev See {IERC777-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3073:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 240,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3102:8:2"
									},
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3079:2:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "3120:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3120:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3119:15:2"
									},
									"scope": 1215,
									"src": "3064:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "3406:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3423:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 252,
												"id": 254,
												"nodeType": "Return",
												"src": "3416:9:2"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "3172:173:2",
										"text": " @dev See {ERC20-decimals}.\n Always returns 18, as per the\n [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
									},
									"functionSelector": "313ce567",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3359:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3367:2:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3399:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 250,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3399:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3398:7:2"
									},
									"scope": 1215,
									"src": "3350:82:2",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1236
									],
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "3617:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3634:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 262,
												"id": 264,
												"nodeType": "Return",
												"src": "3627:8:2"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "3438:104:2",
										"text": " @dev See {IERC777-granularity}.\n This implementation always returns `1`."
									},
									"functionSelector": "556f0dc7",
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "granularity",
									"nameLocation": "3556:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 259,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3590:8:2"
									},
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3567:2:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "3608:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3607:9:2"
									},
									"scope": 1215,
									"src": "3547:95:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										11,
										1242
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3790:36:2",
										"statements": [
											{
												"expression": {
													"id": 275,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 111,
													"src": "3807:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 274,
												"id": 276,
												"nodeType": "Return",
												"src": "3800:19:2"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "3648:50:2",
										"text": " @dev See {IERC777-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3712:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 271,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 269,
												"name": "IERC20",
												"nameLocations": [
													"3755:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 80,
												"src": "3755:6:2"
											},
											{
												"id": 270,
												"name": "IERC777",
												"nameLocations": [
													"3763:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1374,
												"src": "3763:7:2"
											}
										],
										"src": "3746:25:2"
									},
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3723:2:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3781:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3781:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3780:9:2"
									},
									"scope": 1215,
									"src": "3703:123:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										19,
										1250
									],
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "4030:46:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 289,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "4047:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 291,
													"indexExpression": {
														"id": 290,
														"name": "tokenHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "4057:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4047:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 288,
												"id": 292,
												"nodeType": "Return",
												"src": "4040:29:2"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3832:89:2",
										"text": " @dev Returns the amount of tokens owned by an account (`tokenHolder`)."
									},
									"functionSelector": "70a08231",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3935:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 285,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 283,
												"name": "IERC20",
												"nameLocations": [
													"3995:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 80,
												"src": "3995:6:2"
											},
											{
												"id": 284,
												"name": "IERC777",
												"nameLocations": [
													"4003:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1374,
												"src": "4003:7:2"
											}
										],
										"src": "3986:25:2"
									},
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "3953:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "3945:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3945:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:21:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4021:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4020:9:2"
									},
									"scope": 1215,
									"src": "3926:150:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1260
									],
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "4299:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 306,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1721,
																"src": "4315:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4315:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "4329:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 309,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "4340:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 310,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "4348:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4354:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "74727565",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4358:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 305,
														"name": "_send",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "4309:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4309:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "4309:54:2"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "4082:119:2",
										"text": " @dev See {IERC777-send}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
									},
									"functionSelector": "9bd9bbc6",
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "4215:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 303,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4289:8:2"
									},
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4228:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4220:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4220:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4247:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4239:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4268:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4255:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4255:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4219:54:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4299:0:2"
									},
									"scope": 1215,
									"src": "4206:164:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										29
									],
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "4693:347:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 328,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "4711:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4732:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4724:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 329,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4724:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4724:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4711:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4736:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
																"typeString": "literal_string \"ERC777: transfer to the zero address\""
															},
															"value": "ERC777: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
																"typeString": "literal_string \"ERC777: transfer to the zero address\""
															}
														],
														"id": 327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4703:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4703:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "4703:72:2"
											},
											{
												"assignments": [
													338
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "4794:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 372,
														"src": "4786:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 337,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4786:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 339,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "4801:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4786:27:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "4842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 344,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "4848:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 345,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "4854:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "4865:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4873:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 342,
														"name": "_callTokensToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "4824:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4824:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "4824:56:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "4897:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "4903:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "4909:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 355,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "4920:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4928:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4932:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 351,
														"name": "_move",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "4891:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4891:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "4891:44:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "4966:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "4972:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "4978:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "4989:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4997:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5001:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "66616c7365",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5005:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 360,
														"name": "_callTokensReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "4946:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4946:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "4946:65:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5029:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 326,
												"id": 371,
												"nodeType": "Return",
												"src": "5022:11:2"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "4376:220:2",
										"text": " @dev See {IERC20-transfer}.\n Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n interface if it is a contract.\n Also emits a {Sent} event."
									},
									"functionSelector": "a9059cbb",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4610:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 323,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4669:8:2"
									},
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4627:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "4619:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4646:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "4638:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:35:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "4687:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4687:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4686:6:2"
									},
									"scope": 1215,
									"src": "4601:439:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1268
									],
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "5244:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 383,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1721,
																"src": "5260:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5260:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "5274:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 386,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "5282:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "",
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5288:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 382,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "5254:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5254:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "5254:37:2"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "5046:119:2",
										"text": " @dev See {IERC777-burn}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
									},
									"functionSelector": "fe9d9303",
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "5179:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 380,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5234:8:2"
									},
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5192:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "5184:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5213:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "5200:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5200:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5183:35:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5244:0:2"
									},
									"scope": 1215,
									"src": "5170:128:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1278
									],
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "5467:193:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 402,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "5484:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 403,
																"name": "tokenHolder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "5496:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5484:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 405,
																			"name": "_defaultOperators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 132,
																			"src": "5524:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 407,
																		"indexExpression": {
																			"id": 406,
																			"name": "operator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "5542:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5524:27:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "5555:48:2",
																		"subExpression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 408,
																					"name": "_revokedDefaultOperators",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 144,
																					"src": "5556:24:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																						"typeString": "mapping(address => mapping(address => bool))"
																					}
																				},
																				"id": 410,
																				"indexExpression": {
																					"id": 409,
																					"name": "tokenHolder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 396,
																					"src": "5581:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5556:37:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 412,
																			"indexExpression": {
																				"id": 411,
																				"name": "operator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "5594:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5556:47:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5524:79:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 415,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5523:81:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5484:120:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 417,
																"name": "_operators",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "5620:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 419,
															"indexExpression": {
																"id": 418,
																"name": "tokenHolder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "5631:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5620:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "5644:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5620:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5484:169:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 401,
												"id": 423,
												"nodeType": "Return",
												"src": "5477:176:2"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "5304:52:2",
										"text": " @dev See {IERC777-isOperatorFor}."
									},
									"functionSelector": "d95b6371",
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOperatorFor",
									"nameLocation": "5370:13:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 398,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5443:8:2"
									},
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5392:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "5384:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5384:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "5410:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "5402:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5402:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5383:39:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "5461:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5461:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5460:6:2"
									},
									"scope": 1215,
									"src": "5361:299:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1284
									],
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "5797:343:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 433,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "5815:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5815:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 435,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "5831:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5815:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a20617574686f72697a696e672073656c66206173206f70657261746f72",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5841:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
																"typeString": "literal_string \"ERC777: authorizing self as operator\""
															},
															"value": "ERC777: authorizing self as operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
																"typeString": "literal_string \"ERC777: authorizing self as operator\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5807:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5807:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "5807:73:2"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 440,
														"name": "_defaultOperators",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "5895:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 442,
													"indexExpression": {
														"id": 441,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "5913:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5895:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 461,
													"nodeType": "Block",
													"src": "6010:66:2",
													"statements": [
														{
															"expression": {
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 452,
																			"name": "_operators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 138,
																			"src": "6024:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 456,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 453,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1721,
																				"src": "6035:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6035:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6024:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 457,
																	"indexExpression": {
																		"id": 455,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "6049:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6024:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6061:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6024:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 460,
															"nodeType": "ExpressionStatement",
															"src": "6024:41:2"
														}
													]
												},
												"id": 462,
												"nodeType": "IfStatement",
												"src": "5891:185:2",
												"trueBody": {
													"id": 451,
													"nodeType": "Block",
													"src": "5924:80:2",
													"statements": [
														{
															"expression": {
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "5938:55:2",
																"subExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 443,
																			"name": "_revokedDefaultOperators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 144,
																			"src": "5945:24:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 446,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 444,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1721,
																				"src": "5970:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5970:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5945:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 448,
																	"indexExpression": {
																		"id": 447,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "5984:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5945:48:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "5938:55:2"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 464,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "6110:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 465,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1721,
																"src": "6120:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6120:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 463,
														"name": "AuthorizedOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "6091:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6091:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "EmitStatement",
												"src": "6086:47:2"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "5666:56:2",
										"text": " @dev See {IERC777-authorizeOperator}."
									},
									"functionSelector": "959b8c3f",
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nameLocation": "5736:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 430,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5787:8:2"
									},
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5762:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "5754:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5753:18:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5797:0:2"
									},
									"scope": 1215,
									"src": "5727:413:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1290
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "6271:337:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 478,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "6289:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 479,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "6301:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6301:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6289:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207265766f6b696e672073656c66206173206f70657261746f72",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6315:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
																"typeString": "literal_string \"ERC777: revoking self as operator\""
															},
															"value": "ERC777: revoking self as operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
																"typeString": "literal_string \"ERC777: revoking self as operator\""
															}
														],
														"id": 477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6281:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6281:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "6281:70:2"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 485,
														"name": "_defaultOperators",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "6366:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 487,
													"indexExpression": {
														"id": 486,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "6384:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6366:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 506,
													"nodeType": "Block",
													"src": "6481:66:2",
													"statements": [
														{
															"expression": {
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "6495:41:2",
																"subExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 498,
																			"name": "_operators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 138,
																			"src": "6502:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 501,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 499,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1721,
																				"src": "6513:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6513:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6502:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 503,
																	"indexExpression": {
																		"id": 502,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "6527:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6502:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 505,
															"nodeType": "ExpressionStatement",
															"src": "6495:41:2"
														}
													]
												},
												"id": 507,
												"nodeType": "IfStatement",
												"src": "6362:185:2",
												"trueBody": {
													"id": 497,
													"nodeType": "Block",
													"src": "6395:80:2",
													"statements": [
														{
															"expression": {
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 488,
																			"name": "_revokedDefaultOperators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 144,
																			"src": "6409:24:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 492,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 489,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1721,
																				"src": "6434:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6434:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6409:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 493,
																	"indexExpression": {
																		"id": 491,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "6448:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6409:48:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6460:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6409:55:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "6409:55:2"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 509,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6578:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 510,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1721,
																"src": "6588:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6588:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 508,
														"name": "RevokedOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "6562:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6562:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "EmitStatement",
												"src": "6557:44:2"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "6146:53:2",
										"text": " @dev See {IERC777-revokeOperator}."
									},
									"functionSelector": "fad8b32a",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nameLocation": "6213:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 475,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6261:8:2"
									},
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6236:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6228:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6228:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6227:18:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6271:0:2"
									},
									"scope": 1215,
									"src": "6204:404:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1297
									],
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "6758:46:2",
										"statements": [
											{
												"expression": {
													"id": 523,
													"name": "_defaultOperatorsArray",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 128,
													"src": "6775:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 522,
												"id": 524,
												"nodeType": "Return",
												"src": "6768:29:2"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "6614:55:2",
										"text": " @dev See {IERC777-defaultOperators}."
									},
									"functionSelector": "06e48538",
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "defaultOperators",
									"nameLocation": "6683:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 518,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6722:8:2"
									},
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6699:2:2"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "6740:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 519,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6740:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 520,
													"nodeType": "ArrayTypeName",
													"src": "6740:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6739:18:2"
									},
									"scope": 1215,
									"src": "6674:130:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1311
									],
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "7140:177:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 543,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "7172:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7172:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 545,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "7186:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 542,
																"name": "isOperatorFor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "7158:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7158:35:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7195:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
																"typeString": "literal_string \"ERC777: caller is not an operator for holder\""
															},
															"value": "ERC777: caller is not an operator for holder"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
																"typeString": "literal_string \"ERC777: caller is not an operator for holder\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7150:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7150:92:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "7150:92:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 551,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "7258:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "7266:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "7277:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 554,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "7285:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 555,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "7291:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7305:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 550,
														"name": "_send",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "7252:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7252:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "7252:58:2"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "6810:108:2",
										"text": " @dev See {IERC777-operatorSend}.\n Emits {Sent} and {IERC20-Transfer} events."
									},
									"functionSelector": "62ad1b83",
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "operatorSend",
									"nameLocation": "6932:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 539,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7127:8:2"
									},
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6962:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "6954:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6954:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6986:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "6978:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6978:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7013:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "7005:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7005:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7042:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "7029:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7029:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "7069:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "7056:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7056:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6944:143:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7140:0:2"
									},
									"scope": 1215,
									"src": "6923:394:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1323
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "7563:162:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 575,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "7595:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7595:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 577,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "7609:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 574,
																"name": "isOperatorFor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "7581:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7581:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7619:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
																"typeString": "literal_string \"ERC777: caller is not an operator for holder\""
															},
															"value": "ERC777: caller is not an operator for holder"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
																"typeString": "literal_string \"ERC777: caller is not an operator for holder\""
															}
														],
														"id": 573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7573:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7573:93:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "7573:93:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 583,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "7682:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "7691:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 585,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "7699:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 586,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "7705:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 582,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "7676:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7676:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "7676:42:2"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "7323:110:2",
										"text": " @dev See {IERC777-operatorBurn}.\n Emits {Burned} and {IERC20-Transfer} events."
									},
									"functionSelector": "fc673c4f",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "operatorBurn",
									"nameLocation": "7447:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 571,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7554:8:2"
									},
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7468:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7460:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7460:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7485:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7477:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7477:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7506:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7493:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7493:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "7525:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7512:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7512:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7459:79:2"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7563:0:2"
									},
									"scope": 1215,
									"src": "7438:287:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										39
									],
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "8063:52:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 601,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "8080:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 603,
														"indexExpression": {
															"id": 602,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "8092:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8080:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 605,
													"indexExpression": {
														"id": 604,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "8100:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8080:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 600,
												"id": 606,
												"nodeType": "Return",
												"src": "8073:35:2"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "7731:228:2",
										"text": " @dev See {IERC20-allowance}.\n Note that operator and allowance concepts are orthogonal: operators may\n not have allowance, and accounts with allowance may not be operators\n themselves."
									},
									"functionSelector": "dd62ed3e",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "7973:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 597,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8036:8:2"
									},
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "7991:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "7983:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7983:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7982:33:2"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "8054:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8054:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8053:9:2"
									},
									"scope": 1215,
									"src": "7964:151:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										49
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "8341:109:2",
										"statements": [
											{
												"assignments": [
													620
												],
												"declarations": [
													{
														"constant": false,
														"id": 620,
														"mutability": "mutable",
														"name": "holder",
														"nameLocation": "8359:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "8351:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 619,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8351:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 623,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 621,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "8368:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8368:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8351:29:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 625,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "8399:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 626,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "8407:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "8416:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 624,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "8390:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8390:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "8390:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8439:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 618,
												"id": 631,
												"nodeType": "Return",
												"src": "8432:11:2"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "8121:127:2",
										"text": " @dev See {IERC20-approve}.\n Note that accounts cannot have allowance issued by their operators."
									},
									"functionSelector": "095ea7b3",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8262:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 615,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8317:8:2"
									},
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8278:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "8270:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8270:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8295:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "8287:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8287:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8269:32:2"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "8335:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 616,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8335:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8334:6:2"
									},
									"scope": 1215,
									"src": "8253:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										61
									],
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "8927:664:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 647,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "8945:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8966:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8958:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 648,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8958:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8958:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8945:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8970:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
																"typeString": "literal_string \"ERC777: transfer to the zero address\""
															},
															"value": "ERC777: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
																"typeString": "literal_string \"ERC777: transfer to the zero address\""
															}
														],
														"id": 646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8937:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8937:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "8937:72:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 657,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "9027:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9045:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9037:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 658,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9037:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9037:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9027:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9049:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
																"typeString": "literal_string \"ERC777: transfer from the zero address\""
															},
															"value": "ERC777: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
																"typeString": "literal_string \"ERC777: transfer from the zero address\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9019:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9019:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "9019:71:2"
											},
											{
												"assignments": [
													667
												],
												"declarations": [
													{
														"constant": false,
														"id": 667,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "9109:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "9101:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 666,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9101:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 668,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "9119:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9119:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9101:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 672,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "9160:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 673,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "9169:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "9177:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "9188:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9196:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9200:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 671,
														"name": "_callTokensToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "9142:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9142:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "9142:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 681,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "9220:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 682,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "9229:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 683,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "9237:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "9248:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9256:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9260:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 680,
														"name": "_move",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "9214:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9214:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9214:49:2"
											},
											{
												"assignments": [
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "9282:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "9274:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 689,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9274:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 691,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "9301:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 693,
														"indexExpression": {
															"id": 692,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "9313:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9301:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 695,
													"indexExpression": {
														"id": 694,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "9321:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9301:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9274:55:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 698,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "9347:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 699,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "9367:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9347:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9375:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c",
																"typeString": "literal_string \"ERC777: transfer amount exceeds allowance\""
															},
															"value": "ERC777: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c",
																"typeString": "literal_string \"ERC777: transfer amount exceeds allowance\""
															}
														],
														"id": 697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9339:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9339:80:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "9339:80:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "9438:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "9446:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 707,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "9455:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 708,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "9474:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9455:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "9429:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9429:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "9429:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 713,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "9512:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "9521:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 715,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "9529:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 716,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "9540:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9548:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9552:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "66616c7365",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9556:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 712,
														"name": "_callTokensReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "9492:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9492:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "9492:70:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9580:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 645,
												"id": 723,
												"nodeType": "Return",
												"src": "9573:11:2"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "8455:355:2",
										"text": " @dev See {IERC20-transferFrom}.\n Note that operator and allowance concepts are orthogonal: operators cannot\n call `transferFrom` (unless they have allowance), and accounts with\n allowance cannot call `operatorSend` (unless they are operators).\n Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
									},
									"functionSelector": "23b872dd",
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "8824:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 642,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8903:8:2"
									},
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "8845:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "8837:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8837:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8861:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "8853:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8880:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "8872:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8872:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8836:51:2"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "8921:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8921:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8920:6:2"
									},
									"scope": 1215,
									"src": "8815:776:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "10334:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 738,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "10350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "10359:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 740,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "10367:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 741,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "10377:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10391:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 737,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															746,
															826
														],
														"referencedDeclaration": 826,
														"src": "10344:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10344:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "10344:52:2"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "9597:559:2",
										"text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If a send hook is registered for `account`, the corresponding function\n will be called with `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10170:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10193:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "10185:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10185:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10218:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "10210:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10210:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "10247:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "10234:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 731,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "10278:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "10265:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 733,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10265:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10175:121:2"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10334:0:2"
									},
									"scope": 1215,
									"src": "10161:242:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "11232:539:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 761,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "11250:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11269:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11261:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 762,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11261:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11261:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11250:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11273:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
																"typeString": "literal_string \"ERC777: mint to the zero address\""
															},
															"value": "ERC777: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
																"typeString": "literal_string \"ERC777: mint to the zero address\""
															}
														],
														"id": 760,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11242:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11242:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "11242:66:2"
											},
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11327:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "11319:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 770,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11319:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 774,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 772,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "11338:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11338:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11319:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 776,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "11382:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11400:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11392:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 777,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11392:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11392:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "11404:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "11413:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 775,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "11361:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11361:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "11361:59:2"
											},
											{
												"expression": {
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 785,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "11465:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 786,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "11481:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11465:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "11465:22:2"
											},
											{
												"expression": {
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 789,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "11497:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 791,
														"indexExpression": {
															"id": 790,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "11507:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11497:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 792,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "11519:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11497:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "11497:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 796,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "11556:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 797,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 801,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "11578:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "11587:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 803,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "11595:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 804,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "11605:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 805,
															"name": "requireReceptionAck",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "11619:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 795,
														"name": "_callTokensReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "11536:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11536:103:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "11536:103:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 809,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "11662:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 810,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "11672:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "11681:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 812,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "11689:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 813,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "11699:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 808,
														"name": "Minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "11655:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11655:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "EmitStatement",
												"src": "11650:62:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11744:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11736:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 817,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11736:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11736:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "11748:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "11757:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 816,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "11727:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11727:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "EmitStatement",
												"src": "11722:42:2"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "10409:611:2",
										"text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If `requireReceptionAck` is set to true, and if a send hook is\n registered for `account`, the corresponding function will be called with\n `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "11034:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11057:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "11049:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11049:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11082:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "11074:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11074:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "11111:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "11098:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11098:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "11142:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "11129:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 754,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11129:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "requireReceptionAck",
												"nameLocation": "11169:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "11164:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11164:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11039:155:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11232:0:2"
									},
									"scope": 1215,
									"src": "11025:746:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "12471:446:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 843,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "12489:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12505:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12497:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 844,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12497:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12497:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12489:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a2073656e642066726f6d20746865207a65726f2061646472657373",
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12509:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401",
																"typeString": "literal_string \"ERC777: send from the zero address\""
															},
															"value": "ERC777: send from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401",
																"typeString": "literal_string \"ERC777: send from the zero address\""
															}
														],
														"id": 842,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12481:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12481:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "12481:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 853,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "12564:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12578:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12570:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 854,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12570:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12570:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12564:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a2073656e6420746f20746865207a65726f2061646472657373",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12582:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3",
																"typeString": "literal_string \"ERC777: send to the zero address\""
															},
															"value": "ERC777: send to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3",
																"typeString": "literal_string \"ERC777: send to the zero address\""
															}
														],
														"id": 852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12556:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12556:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "12556:61:2"
											},
											{
												"assignments": [
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12636:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "12628:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 862,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12628:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 866,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 864,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "12647:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12647:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12628:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 868,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "12688:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 869,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "12698:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 870,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "12704:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "12708:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 872,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "12716:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 873,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "12726:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 867,
														"name": "_callTokensToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "12670:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12670:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "12670:69:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 877,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "12756:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 878,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "12766:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "12772:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "12776:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 881,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "12784:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 882,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "12794:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 876,
														"name": "_move",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "12750:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12750:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "12750:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 886,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "12838:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "12848:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 888,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "12854:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "12858:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 890,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "12866:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 891,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "12876:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 892,
															"name": "requireReceptionAck",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "12890:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 885,
														"name": "_callTokensReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "12818:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12818:92:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "12818:92:2"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "11777:465:2",
										"text": " @dev Send tokens\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
									},
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_send",
									"nameLocation": "12256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12279:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "12271:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12271:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12301:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "12293:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12293:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12321:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "12313:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12313:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "12350:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "12337:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12337:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "12381:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "12368:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12368:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "requireReceptionAck",
												"nameLocation": "12408:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "12403:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12403:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12261:172:2"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12471:0:2"
									},
									"scope": 1215,
									"src": "12247:670:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "13388:631:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 909,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "13406:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13422:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13414:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 910,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13414:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13414:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13406:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13426:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
																"typeString": "literal_string \"ERC777: burn from the zero address\""
															},
															"value": "ERC777: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
																"typeString": "literal_string \"ERC777: burn from the zero address\""
															}
														],
														"id": 908,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13398:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13398:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "13398:65:2"
											},
											{
												"assignments": [
													919
												],
												"declarations": [
													{
														"constant": false,
														"id": 919,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "13482:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 987,
														"src": "13474:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 918,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13474:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 922,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 920,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "13493:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13493:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13474:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "13534:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "13544:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13558:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13550:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 926,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13550:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13550:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "13562:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 931,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "13570:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 932,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "13576:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 923,
														"name": "_callTokensToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "13516:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13516:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "13516:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 936,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "13621:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "13631:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13645:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13637:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 938,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13637:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13637:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "13649:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 935,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "13600:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13600:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "13600:56:2"
											},
											{
												"assignments": [
													946
												],
												"declarations": [
													{
														"constant": false,
														"id": 946,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "13709:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 987,
														"src": "13701:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 945,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13701:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 950,
												"initialValue": {
													"baseExpression": {
														"id": 947,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "13723:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 949,
													"indexExpression": {
														"id": 948,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "13733:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13723:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13701:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 952,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "13756:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 953,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "13771:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13756:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13779:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
																"typeString": "literal_string \"ERC777: burn amount exceeds balance\""
															},
															"value": "ERC777: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
																"typeString": "literal_string \"ERC777: burn amount exceeds balance\""
															}
														],
														"id": 951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13748:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13748:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "13748:69:2"
											},
											{
												"expression": {
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 958,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "13827:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 960,
														"indexExpression": {
															"id": 959,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "13837:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13827:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 961,
															"name": "fromBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "13845:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 962,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "13859:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13845:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13827:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "13827:38:2"
											},
											{
												"expression": {
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 966,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "13875:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 967,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "13891:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13875:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "13875:22:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 971,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "13920:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 972,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "13930:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 973,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "13936:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 974,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "13944:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 975,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "13950:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 970,
														"name": "Burned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "13913:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13913:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "EmitStatement",
												"src": "13908:55:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 979,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "13987:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14001:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13993:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 980,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13993:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13993:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "14005:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 978,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "13978:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13978:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "EmitStatement",
												"src": "13973:39:2"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "12923:294:2",
										"text": " @dev Burn tokens\n @param from address token holder address\n @param amount uint256 amount of tokens to burn\n @param data bytes extra information provided by the token holder\n @param operatorData bytes extra information provided by the operator (if any)"
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "13231:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13254:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "13246:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13246:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13276:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "13268:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13268:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13305:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "13292:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 902,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13292:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "13332:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "13319:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13319:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13236:114:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13388:0:2"
									},
									"scope": 1215,
									"src": "13222:797:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "14224:390:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "14255:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "14265:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "14271:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1007,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "14275:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1003,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "14234:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14234:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "14234:48:2"
											},
											{
												"assignments": [
													1011
												],
												"declarations": [
													{
														"constant": false,
														"id": 1011,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "14301:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "14293:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1010,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14293:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1015,
												"initialValue": {
													"baseExpression": {
														"id": 1012,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "14315:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1014,
													"indexExpression": {
														"id": 1013,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "14325:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14315:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14293:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1017,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "14348:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1018,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "14363:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14348:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14371:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
																"typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
															},
															"value": "ERC777: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
																"typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
															}
														],
														"id": 1016,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14340:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14340:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "14340:73:2"
											},
											{
												"expression": {
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1023,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "14423:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1025,
														"indexExpression": {
															"id": 1024,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "14433:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14423:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1026,
															"name": "fromBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "14441:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1027,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "14455:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14441:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14423:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "14423:38:2"
											},
											{
												"expression": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1031,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "14471:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1033,
														"indexExpression": {
															"id": 1032,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "14481:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14471:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1034,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "14488:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14471:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "14471:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1038,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "14515:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1039,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "14525:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1040,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "14531:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "14535:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1042,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "14543:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1043,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "14553:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1037,
														"name": "Sent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "14510:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14510:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "EmitStatement",
												"src": "14505:61:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1047,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "14590:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1048,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "14596:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "14600:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1046,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "14581:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14581:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "EmitStatement",
												"src": "14576:31:2"
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_move",
									"nameLocation": "14034:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14057:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "14049:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14049:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14083:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "14075:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14105:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "14097:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14097:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14125:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "14117:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14117:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "14154:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "14141:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 997,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14141:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "14185:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "14172:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 999,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14172:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14039:164:2"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14224:0:2"
									},
									"scope": 1215,
									"src": "14025:589:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "14827:260:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1064,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "14845:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14863:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14855:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1065,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14855:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14855:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14845:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14867:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
																"typeString": "literal_string \"ERC777: approve from the zero address\""
															},
															"value": "ERC777: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
																"typeString": "literal_string \"ERC777: approve from the zero address\""
															}
														],
														"id": 1063,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14837:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14837:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "14837:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1074,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1058,
																"src": "14925:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14944:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14936:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1075,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14936:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14936:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14925:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14948:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
																"typeString": "literal_string \"ERC777: approve to the zero address\""
															},
															"value": "ERC777: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
																"typeString": "literal_string \"ERC777: approve to the zero address\""
															}
														],
														"id": 1073,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14917:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14917:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "14917:69:2"
											},
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1083,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "14997:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1086,
															"indexExpression": {
																"id": 1084,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "15009:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14997:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1087,
														"indexExpression": {
															"id": 1085,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "15017:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14997:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1088,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "15028:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14997:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "14997:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1092,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "15057:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1093,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "15065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1094,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "15074:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1091,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "15048:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15048:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "EmitStatement",
												"src": "15043:37:2"
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "14620:127:2",
										"text": " @dev See {ERC20-_approve}.\n Note that accounts cannot have allowance issued by their operators."
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14761:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "14778:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "14770:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14770:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14794:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "14786:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14786:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14811:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "14803:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14803:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14769:48:2"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14827:0:2"
									},
									"scope": 1215,
									"src": "14752:335:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "15771:273:2",
										"statements": [
											{
												"assignments": [
													1115
												],
												"declarations": [
													{
														"constant": false,
														"id": 1115,
														"mutability": "mutable",
														"name": "implementer",
														"nameLocation": "15789:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "15781:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1114,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15781:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1121,
												"initialValue": {
													"arguments": [
														{
															"id": 1118,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "15845:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "_TOKENS_SENDER_INTERFACE_HASH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "15851:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1116,
															"name": "_ERC1820_REGISTRY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "15803:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$1823",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15821:23:2",
														"memberName": "getInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1772,
														"src": "15803:41:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (address,bytes32) view external returns (address)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15803:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15781:100:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1122,
														"name": "implementer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "15895:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15918:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15910:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1123,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15910:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15910:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15895:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "15891:147:2",
												"trueBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "15922:116:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1132,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "15976:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1133,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "15986:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1134,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "15992:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1135,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "15996:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1136,
																		"name": "userData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "16004:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1137,
																		"name": "operatorData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "16014:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1129,
																				"name": "implementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1115,
																				"src": "15950:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1128,
																			"name": "IERC777Sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1414,
																			"src": "15936:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC777Sender_$1414_$",
																				"typeString": "type(contract IERC777Sender)"
																			}
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15936:26:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC777Sender_$1414",
																			"typeString": "contract IERC777Sender"
																		}
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15963:12:2",
																	"memberName": "tokensToSend",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1413,
																	"src": "15936:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15936:91:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1139,
															"nodeType": "ExpressionStatement",
															"src": "15936:91:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "15093:462:2",
										"text": " @dev Call from.tokensToSend() if the interface is registered\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)"
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callTokensToSend",
									"nameLocation": "15569:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15604:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "15596:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15630:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "15622:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15622:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15652:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "15644:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15644:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15672:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "15664:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "15701:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "15688:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1108,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15688:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "15732:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "15719:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1110,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15719:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15586:164:2"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15771:0:2"
									},
									"scope": 1215,
									"src": "15560:484:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "16980:441:2",
										"statements": [
											{
												"assignments": [
													1162
												],
												"declarations": [
													{
														"constant": false,
														"id": 1162,
														"mutability": "mutable",
														"name": "implementer",
														"nameLocation": "16998:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "16990:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1161,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16990:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"arguments": [
														{
															"id": 1165,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "17054:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1166,
															"name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "17058:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1163,
															"name": "_ERC1820_REGISTRY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "17012:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$1823",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17030:23:2",
														"memberName": "getInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1772,
														"src": "17012:41:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (address,bytes32) view external returns (address)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17012:79:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16990:101:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1169,
														"name": "implementer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "17105:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17128:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17120:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1170,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17120:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17120:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17105:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1188,
														"name": "requireReceptionAck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "17263:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1198,
													"nodeType": "IfStatement",
													"src": "17259:156:2",
													"trueBody": {
														"id": 1197,
														"nodeType": "Block",
														"src": "17284:131:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "17306:16:2",
																			"subExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 1190,
																						"name": "to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1150,
																						"src": "17307:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 1191,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "17310:10:2",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1434,
																					"src": "17307:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 1192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17307:15:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "4552433737373a20746f6b656e20726563697069656e7420636f6e747261637420686173206e6f20696d706c656d656e74657220666f7220455243373737546f6b656e73526563697069656e74",
																			"id": 1194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17324:79:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
																				"typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
																			},
																			"value": "ERC777: token recipient contract has no implementer for ERC777TokensRecipient"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
																				"typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
																			}
																		],
																		"id": 1189,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "17298:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17298:106:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1196,
																"nodeType": "ExpressionStatement",
																"src": "17298:106:2"
															}
														]
													}
												},
												"id": 1199,
												"nodeType": "IfStatement",
												"src": "17101:314:2",
												"trueBody": {
													"id": 1187,
													"nodeType": "Block",
													"src": "17132:121:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "17191:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1180,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "17201:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1181,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1150,
																		"src": "17207:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1182,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "17211:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1183,
																		"name": "userData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "17219:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1184,
																		"name": "operatorData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "17229:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1176,
																				"name": "implementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1162,
																				"src": "17163:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1175,
																			"name": "IERC777Recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "17146:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC777Recipient_$1394_$",
																				"typeString": "type(contract IERC777Recipient)"
																			}
																		},
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17146:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC777Recipient_$1394",
																			"typeString": "contract IERC777Recipient"
																		}
																	},
																	"id": 1178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17176:14:2",
																	"memberName": "tokensReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1393,
																	"src": "17146:44:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
																	}
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17146:96:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1186,
															"nodeType": "ExpressionStatement",
															"src": "17146:96:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "16050:678:2",
										"text": " @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n tokensReceived() was not registered for the recipient\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
									},
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callTokensReceived",
									"nameLocation": "16742:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16779:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "16771:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16771:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16805:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "16797:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16797:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16827:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "16819:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16819:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16847:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "16839:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "16876:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "16863:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1153,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16863:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "16907:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "16894:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16894:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "requireReceptionAck",
												"nameLocation": "16934:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "16929:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16929:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16761:198:2"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16980:0:2"
									},
									"scope": 1215,
									"src": "16733:688:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "18156:3:2",
										"statements": []
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "17427:617:2",
										"text": " @dev Hook that is called before any token transfer. This includes\n calls to {send}, {transfer}, {operatorSend}, minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "18058:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18087:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "18079:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18105:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "18097:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18097:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18119:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "18111:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18111:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18131:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "18123:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18123:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18078:60:2"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18156:0:2"
									},
									"scope": 1215,
									"src": "18049:110:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1216,
							"src": "1014:17147:2",
							"usedErrors": []
						}
					],
					"src": "33:18129:2"
				},
				"id": 2
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
				"ast": {
					"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
					"exportedSymbols": {
						"IERC777": [
							1374
						]
					},
					"id": 1375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1217,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1218,
								"nodeType": "StructuredDocumentation",
								"src": "58:372:3",
								"text": " @dev Interface of the ERC777Token standard as defined in the EIP.\n This contract uses the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n token holders and recipients react to token movements by using setting implementers\n for the associated interfaces in said registry. See {IERC1820Registry} and\n {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 1374,
							"linearizedBaseContracts": [
								1374
							],
							"name": "IERC777",
							"nameLocation": "441:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "455:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "523:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "527:2:3"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "553:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1221,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "553:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "552:15:3"
									},
									"scope": 1374,
									"src": "514:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "574:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "690:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "696:2:3"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "722:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1227,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "722:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:15:3"
									},
									"scope": 1374,
									"src": "681:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "743:287:3",
										"text": " @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."
									},
									"functionSelector": "556f0dc7",
									"id": 1236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "granularity",
									"nameLocation": "1044:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:2:3"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1081:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:9:3"
									},
									"scope": 1374,
									"src": "1035:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "1096:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1242,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1176:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1187:2:3"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "1213:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:9:3"
									},
									"scope": 1374,
									"src": "1167:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "1228:83:3",
										"text": " @dev Returns the amount of tokens owned by an account (`owner`)."
									},
									"functionSelector": "70a08231",
									"id": 1250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1325:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1343:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "1335:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:15:3"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "1373:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:9:3"
									},
									"scope": 1374,
									"src": "1316:66:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "1388:585:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "9bd9bbc6",
									"id": 1260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "1987:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2000:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1992:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1992:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2019:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "2011:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2042:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "2027:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2027:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:56:3"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2056:0:3"
									},
									"scope": 1374,
									"src": "1978:79:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "2063:404:3",
										"text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."
									},
									"functionSelector": "fe9d9303",
									"id": 1268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2481:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2486:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2502:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2502:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:37:3"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2531:0:3"
									},
									"scope": 1374,
									"src": "2472:60:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "2538:249:3",
										"text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
									},
									"functionSelector": "d95b6371",
									"id": 1278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperatorFor",
									"nameLocation": "2801:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2823:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "2815:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2815:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "2841:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "2833:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2833:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2814:39:3"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "2877:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2877:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:6:3"
									},
									"scope": 1374,
									"src": "2792:91:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "2889:233:3",
										"text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "959b8c3f",
									"id": 1284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nameLocation": "3136:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3162:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "3154:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3154:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3153:18:3"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3180:0:3"
									},
									"scope": 1374,
									"src": "3127:54:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "3187:261:3",
										"text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "fad8b32a",
									"id": 1290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nameLocation": "3462:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3485:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3477:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3477:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3476:18:3"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3503:0:3"
									},
									"scope": 1374,
									"src": "3453:51:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "3510:338:3",
										"text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
									},
									"functionSelector": "06e48538",
									"id": 1297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "defaultOperators",
									"nameLocation": "3862:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3878:2:3"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "3904:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1293,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3904:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1294,
													"nodeType": "ArrayTypeName",
													"src": "3904:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3903:18:3"
									},
									"scope": 1374,
									"src": "3853:69:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "3928:714:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "62ad1b83",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorSend",
									"nameLocation": "4656:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4686:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "4678:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4710:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "4702:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4737:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "4729:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4729:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "4753:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4753:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "4797:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "4782:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4782:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4668:147:3"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4824:0:3"
									},
									"scope": 1374,
									"src": "4647:178:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "4831:532:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
									},
									"functionSelector": "fc673c4f",
									"id": 1323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorBurn",
									"nameLocation": "5377:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5407:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "5399:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5432:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "5424:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5424:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5463:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "5448:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5448:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "5492:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "5477:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5477:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5389:121:3"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5519:0:3"
									},
									"scope": 1374,
									"src": "5368:152:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987",
									"id": 1337,
									"name": "Sent",
									"nameLocation": "5532:4:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5562:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "5546:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5546:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5596:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "5580:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5580:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5626:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "5610:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5610:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5646:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "5638:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5638:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5668:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "5662:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1332,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5662:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "5688:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "5682:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1334,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5682:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5536:170:3"
									},
									"src": "5526:181:3"
								},
								{
									"anonymous": false,
									"eventSelector": "2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d",
									"id": 1349,
									"name": "Minted",
									"nameLocation": "5719:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5742:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "5726:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5768:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "5752:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5752:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5780:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "5772:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5772:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5794:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "5788:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5788:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "5806:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "5800:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5725:94:3"
									},
									"src": "5713:107:3"
								},
								{
									"anonymous": false,
									"eventSelector": "a78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098",
									"id": 1361,
									"name": "Burned",
									"nameLocation": "5832:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5855:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "5839:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5839:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5881:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "5865:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5895:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "5887:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5909:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "5903:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5903:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "5921:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "5915:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5915:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5838:96:3"
									},
									"src": "5826:109:3"
								},
								{
									"anonymous": false,
									"eventSelector": "f4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f9",
									"id": 1367,
									"name": "AuthorizedOperator",
									"nameLocation": "5947:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5982:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "5966:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5966:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "6008:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "5992:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5992:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5965:55:3"
									},
									"src": "5941:80:3"
								},
								{
									"anonymous": false,
									"eventSelector": "50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa1",
									"id": 1373,
									"name": "RevokedOperator",
									"nameLocation": "6033:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6065:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "6049:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6049:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "6091:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "6075:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6048:55:3"
									},
									"src": "6027:77:3"
								}
							],
							"scope": 1375,
							"src": "431:5675:3",
							"usedErrors": []
						}
					],
					"src": "33:6074:3"
				},
				"id": 3
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
				"ast": {
					"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
					"exportedSymbols": {
						"IERC777Recipient": [
							1394
						]
					},
					"id": 1395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1376,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777Recipient",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1377,
								"nodeType": "StructuredDocumentation",
								"src": "58:406:4",
								"text": " @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n Accounts can be notified of {IERC777} tokens being sent to them by having a\n contract implement this interface (contract holders can be their own\n implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 1394,
							"linearizedBaseContracts": [
								1394
							],
							"name": "IERC777Recipient",
							"nameLocation": "475:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "498:474:4",
										"text": " @dev Called by an {IERC777} token contract whenever tokens are being\n moved or created into a registered account (`to`). The type of operation\n is conveyed by `from` being the zero address or not.\n This call occurs _after_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n This function may revert to prevent the operation from being executed."
									},
									"functionSelector": "0023de29",
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "986:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1018:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1010:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1044:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1036:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1066:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1058:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1086:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1078:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1117:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1102:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1387,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1102:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1150:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1135:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1135:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1000:168:4"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:4"
									},
									"scope": 1394,
									"src": "977:201:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1395,
							"src": "465:715:4",
							"usedErrors": []
						}
					],
					"src": "33:1148:4"
				},
				"id": 4
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
				"ast": {
					"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
					"exportedSymbols": {
						"IERC777Sender": [
							1414
						]
					},
					"id": 1415,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777Sender",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1397,
								"nodeType": "StructuredDocumentation",
								"src": "58:420:5",
								"text": " @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n {IERC777} Token holders can be notified of operations performed on their\n tokens by having a contract implement this interface (contract holders can be\n  their own implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 1414,
							"linearizedBaseContracts": [
								1414
							],
							"name": "IERC777Sender",
							"nameLocation": "489:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "509:478:5",
										"text": " @dev Called by an {IERC777} token contract whenever a registered holder's\n (`from`) tokens are about to be moved or destroyed. The type of operation\n is conveyed by `to` being the zero address or not.\n This call occurs _before_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\n This function may revert to prevent the operation from being executed."
									},
									"functionSelector": "75ab9782",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensToSend",
									"nameLocation": "1001:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1031:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1023:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1057:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1049:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1079:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1071:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1099:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1091:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1130:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1115:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1115:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1163:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1148:27:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1409,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1148:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1013:168:5"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:0:5"
									},
									"scope": 1414,
									"src": "992:199:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1415,
							"src": "479:714:5",
							"usedErrors": []
						}
					],
					"src": "33:1161:5"
				},
				"id": 5
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1710
						]
					},
					"id": 1711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1416,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1417,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1710,
							"linearizedBaseContracts": [
								1710
							],
							"name": "Address",
							"nameLocation": "134:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "784:347:6",
										"statements": [
											{
												"assignments": [
													1426
												],
												"declarations": [
													{
														"constant": false,
														"id": 1426,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1433,
														"src": "981:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1425,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1427,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1068:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1070:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1090:7:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1078:11:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:20:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1070:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1420,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:7:6",
														"valueSize": 1
													},
													{
														"declaration": 1426,
														"isOffset": false,
														"isSlot": false,
														"src": "1070:4:6",
														"valueSize": 1
													}
												],
												"id": 1428,
												"nodeType": "InlineAssembly",
												"src": "1059:41:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1429,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "1116:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1123:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1116:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1424,
												"id": 1432,
												"nodeType": "Return",
												"src": "1109:15:6"
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "738:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:6"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "778:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:6"
									},
									"scope": 1710,
									"src": "718:413:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "2119:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1445,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2145:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1710",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1710",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2137:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1443,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2137:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2137:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2151:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2137:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1448,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "2162:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2137:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2170:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2129:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2129:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "2129:73:6"
											},
											{
												"assignments": [
													1454,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1454,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2296:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1467,
														"src": "2291:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1453,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2291:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1461,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1455,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "2309:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2319:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2309:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1457,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "2332:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2309:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2290:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1463,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "2362:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2354:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "2354:78:6"
											}
										]
									},
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "1137:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2057:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2083:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "2067:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2102:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "2094:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2066:43:6"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:6"
									},
									"scope": 1710,
									"src": "2048:391:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "3269:82:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1479,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "3297:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1480,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "3305:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3311:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1478,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1485,
															1505
														],
														"referencedDeclaration": 1505,
														"src": "3284:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1477,
												"id": 1483,
												"nodeType": "Return",
												"src": "3277:67:6"
											}
										]
									},
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "2445:730:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3189:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3210:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3202:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3231:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3218:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3218:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:35:6"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3255:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:14:6"
									},
									"scope": 1710,
									"src": "3180:171:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "3690:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1498,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "3729:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1499,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "3737:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3743:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1501,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "3746:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1497,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1525,
															1575
														],
														"referencedDeclaration": 1575,
														"src": "3707:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1496,
												"id": 1503,
												"nodeType": "Return",
												"src": "3700:59:6"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "3357:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3582:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3603:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "3595:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3624:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "3611:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3611:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3644:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "3630:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3630:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3594:63:6"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "3676:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1494,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3676:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:14:6"
									},
									"scope": 1710,
									"src": "3573:193:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "4241:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1518,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "4280:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1519,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "4288:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "4294:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4301:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1517,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1525,
															1575
														],
														"referencedDeclaration": 1575,
														"src": "4258:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1516,
												"id": 1523,
												"nodeType": "Return",
												"src": "4251:94:6"
											}
										]
									},
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "3772:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4137:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4167:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "4159:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4159:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4188:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "4175:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4202:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "4194:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:50:6"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "4227:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4227:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:14:6"
									},
									"scope": 1710,
									"src": "4128:224:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "4741:382:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1542,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4767:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1710",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1710",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4759:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1540,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4759:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4759:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4773:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4759:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1545,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "4784:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4759:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4791:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4751:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "4751:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1552,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "4861:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1551,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "4850:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4850:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4870:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4842:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4842:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "4842:60:6"
											},
											{
												"assignments": [
													1558,
													1560
												],
												"declarations": [
													{
														"constant": false,
														"id": 1558,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4978:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "4973:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1557,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4973:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1560,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5000:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "4987:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1559,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4987:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1567,
												"initialValue": {
													"arguments": [
														{
															"id": 1565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "5042:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1561,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "5014:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5021:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5014:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1563,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "5034:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5014:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5014:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4972:75:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1569,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "5082:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1570,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "5091:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1571,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "5103:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1568,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1709,
														"src": "5064:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5064:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1573,
												"nodeType": "Return",
												"src": "5057:59:6"
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "4358:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4609:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4639:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "4631:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4660:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "4647:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4647:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4674:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "4666:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4695:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "4681:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4681:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:78:6"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "4727:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4727:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:14:6"
									},
									"scope": 1710,
									"src": "4600:523:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "5400:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1586,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "5436:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1587,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "5444:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5450:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1585,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1592,
															1627
														],
														"referencedDeclaration": 1627,
														"src": "5417:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5417:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1584,
												"id": 1590,
												"nodeType": "Return",
												"src": "5410:80:6"
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "5129:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5309:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5336:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "5328:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5328:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5357:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "5344:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5344:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5327:35:6"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "5386:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5386:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5385:14:6"
									},
									"scope": 1710,
									"src": "5300:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "5809:288:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1606,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "5838:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1605,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "5827:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5827:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5847:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1604,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5819:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5819:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "5819:67:6"
											},
											{
												"assignments": [
													1612,
													1614
												],
												"declarations": [
													{
														"constant": false,
														"id": 1612,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5962:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1626,
														"src": "5957:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1611,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5957:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1614,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5984:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1626,
														"src": "5971:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1613,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5971:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1619,
												"initialValue": {
													"arguments": [
														{
															"id": 1617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "6016:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1615,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "5998:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6005:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5998:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5956:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1621,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "6056:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1622,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "6065:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1623,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "6077:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1620,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1709,
														"src": "6038:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6038:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1603,
												"id": 1625,
												"nodeType": "Return",
												"src": "6031:59:6"
											}
										]
									},
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "5503:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5690:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5717:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "5709:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5738:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "5725:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1596,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5725:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5758:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "5744:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5744:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5708:63:6"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "5795:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1601,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5795:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5794:14:6"
									},
									"scope": 1710,
									"src": "5681:416:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "6373:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1638,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "6411:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1639,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "6419:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6425:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1637,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1644,
															1679
														],
														"referencedDeclaration": 1679,
														"src": "6390:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1636,
												"id": 1642,
												"nodeType": "Return",
												"src": "6383:84:6"
											}
										]
									},
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "6103:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6285:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6314:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "6306:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6306:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6335:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "6322:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6322:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:35:6"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "6359:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6359:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:14:6"
									},
									"scope": 1710,
									"src": "6276:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "6785:292:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1658,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "6814:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1657,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "6803:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6803:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6795:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6795:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "6795:69:6"
											},
											{
												"assignments": [
													1664,
													1666
												],
												"declarations": [
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6940:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1678,
														"src": "6935:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1663,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6935:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1666,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6962:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1678,
														"src": "6949:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1665,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6949:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1671,
												"initialValue": {
													"arguments": [
														{
															"id": 1669,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "6996:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1667,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "6976:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6983:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6976:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6976:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6934:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1673,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "7036:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1674,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "7045:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1675,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "7057:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1672,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1709,
														"src": "7018:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7018:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1655,
												"id": 1677,
												"nodeType": "Return",
												"src": "7011:59:6"
											}
										]
									},
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "6480:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6669:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6698:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "6690:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6690:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6719:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "6706:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6706:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6739:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "6725:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1650,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6725:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6689:63:6"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "6771:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1653,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6771:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6770:14:6"
									},
									"scope": 1710,
									"src": "6660:417:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "7212:596:6",
										"statements": [
											{
												"condition": {
													"id": 1690,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1681,
													"src": "7226:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1706,
													"nodeType": "Block",
													"src": "7283:519:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1694,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1683,
																		"src": "7367:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7378:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7367:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7387:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7367:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1704,
																"nodeType": "Block",
																"src": "7739:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1701,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1685,
																					"src": "7764:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1700,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7757:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7757:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1703,
																		"nodeType": "ExpressionStatement",
																		"src": "7757:20:6"
																	}
																]
															},
															"id": 1705,
															"nodeType": "IfStatement",
															"src": "7363:429:6",
															"trueBody": {
																"id": 1699,
																"nodeType": "Block",
																"src": "7390:343:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7574:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7596:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7625:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7619:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7619:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7600:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7668:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7672:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7664:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7664:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7685:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7657:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7657:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7657:44:6"
																				}
																			]
																		},
																		"evmVersion": "paris",
																		"externalReferences": [
																			{
																				"declaration": 1683,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7625:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1683,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7672:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1698,
																		"nodeType": "InlineAssembly",
																		"src": "7565:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 1707,
												"nodeType": "IfStatement",
												"src": "7222:580:6",
												"trueBody": {
													"id": 1693,
													"nodeType": "Block",
													"src": "7235:42:6",
													"statements": [
														{
															"expression": {
																"id": 1691,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1683,
																"src": "7256:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1689,
															"id": 1692,
															"nodeType": "Return",
															"src": "7249:17:6"
														}
													]
												}
											}
										]
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "7092:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7115:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "7110:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7110:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7137:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "7124:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7124:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7163:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "7149:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1684,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7149:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7109:67:6"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "7198:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7198:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7197:14:6"
									},
									"scope": 1710,
									"src": "7083:725:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1711,
							"src": "126:7684:6",
							"usedErrors": []
						}
					],
					"src": "33:7778:6"
				},
				"id": 6
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1733
						]
					},
					"id": 1734,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1712,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1733,
							"linearizedBaseContracts": [
								1733
							],
							"name": "Context",
							"nameLocation": "572:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "648:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1717,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "669:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1716,
												"id": 1719,
												"nodeType": "Return",
												"src": "658:17:7"
											}
										]
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:7"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "639:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:7"
									},
									"scope": 1733,
									"src": "586:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1731,
										"nodeType": "Block",
										"src": "755:165:7",
										"statements": [
											{
												"expression": {
													"id": 1726,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "765:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1733",
														"typeString": "contract Context"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "765:4:7"
											},
											{
												"expression": {
													"expression": {
														"id": 1728,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "905:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "909:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "905:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1725,
												"id": 1730,
												"nodeType": "Return",
												"src": "898:15:7"
											}
										]
									},
									"id": 1732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:7"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "739:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:7"
									},
									"scope": 1733,
									"src": "688:232:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1734,
							"src": "554:368:7",
							"usedErrors": []
						}
					],
					"src": "33:890:7"
				},
				"id": 7
			},
			"/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
				"ast": {
					"absolutePath": "/.deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
					"exportedSymbols": {
						"IERC1820Registry": [
							1823
						]
					},
					"id": 1824,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1735,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1820Registry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1736,
								"nodeType": "StructuredDocumentation",
								"src": "58:619:8",
								"text": " @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."
							},
							"fullyImplemented": false,
							"id": 1823,
							"linearizedBaseContracts": [
								1823
							],
							"name": "IERC1820Registry",
							"nameLocation": "688:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "711:445:8",
										"text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
									},
									"functionSelector": "5df8122f",
									"id": 1744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setManager",
									"nameLocation": "1170:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1189:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "1181:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "1206:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "1198:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1180:37:8"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:0:8"
									},
									"scope": 1823,
									"src": "1161:66:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1745,
										"nodeType": "StructuredDocumentation",
										"src": "1233:90:8",
										"text": " @dev Returns the manager for `account`.\n See {setManager}."
									},
									"functionSelector": "3d584063",
									"id": 1752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getManager",
									"nameLocation": "1337:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1356:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "1348:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:17:8"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "1388:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1387:9:8"
									},
									"scope": 1823,
									"src": "1328:69:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "1403:815:8",
										"text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
									},
									"functionSelector": "29965a1d",
									"id": 1762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setInterfaceImplementer",
									"nameLocation": "2232:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2264:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "2256:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "_interfaceHash",
												"nameLocation": "2281:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "2273:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1756,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2273:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "2305:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "2297:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2297:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:62:8"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2326:0:8"
									},
									"scope": 1823,
									"src": "2223:104:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "2333:382:8",
										"text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
									},
									"functionSelector": "aabbb8ca",
									"id": 1772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getInterfaceImplementer",
									"nameLocation": "2729:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2761:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "2753:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "_interfaceHash",
												"nameLocation": "2778:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "2770:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1766,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:41:8"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "2817:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2817:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:9:8"
									},
									"scope": 1823,
									"src": "2720:106:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "2832:196:8",
										"text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
									},
									"functionSelector": "65ba36c1",
									"id": 1780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "interfaceHash",
									"nameLocation": "3042:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "interfaceName",
												"nameLocation": "3072:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "3056:29:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1774,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3056:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:31:8"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "3110:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1777,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3110:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3109:9:8"
									},
									"scope": 1823,
									"src": "3033:86:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "3125:260:8",
										"text": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."
									},
									"functionSelector": "a41e7d51",
									"id": 1788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateERC165Cache",
									"nameLocation": "3399:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3425:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "3417:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3441:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "3434:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1784,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3416:37:8"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3462:0:8"
									},
									"scope": 1823,
									"src": "3390:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "3469:536:8",
										"text": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
									},
									"functionSelector": "f712f3e8",
									"id": 1798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementsERC165Interface",
									"nameLocation": "4019:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4053:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "4045:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4045:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4069:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "4062:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1792,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4062:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:37:8"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "4105:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4105:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4104:6:8"
									},
									"scope": 1823,
									"src": "4010:101:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "4117:313:8",
										"text": " @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
									},
									"functionSelector": "b7056765",
									"id": 1808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementsERC165InterfaceNoCache",
									"nameLocation": "4444:32:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4485:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "4477:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4477:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4501:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "4494:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1802,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4494:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:37:8"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "4537:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1805,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4537:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4536:6:8"
									},
									"scope": 1823,
									"src": "4435:108:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db153",
									"id": 1816,
									"name": "InterfaceImplementerSet",
									"nameLocation": "4555:23:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4595:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "4579:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"indexed": true,
												"mutability": "mutable",
												"name": "interfaceHash",
												"nameLocation": "4620:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "4604:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1811,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4604:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "4651:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "4635:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4635:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:85:8"
									},
									"src": "4549:115:8"
								},
								{
									"anonymous": false,
									"eventSelector": "605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a4350",
									"id": 1822,
									"name": "ManagerChanged",
									"nameLocation": "4676:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4707:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "4691:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4691:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"indexed": true,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "4732:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "4716:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4690:53:8"
									},
									"src": "4670:74:8"
								}
							],
							"scope": 1824,
							"src": "678:4068:8",
							"usedErrors": []
						}
					],
					"src": "33:4714:8"
				},
				"id": 8
			}
		}
	}
}